{"version":3,"sources":["redux/actions/index.js","redux/store/interactionModes.js","redux/store/displayOptions.js","redux/store/magnetsOptions.js","redux/store/debugInitialState.js","components/constantes.js","atoms/currant.js","atoms/label.js","components/hoc/pathComponents.js","components/Lampe.js","components/empty_diode.js","components/pR.js","components/vcapacitor.js","components/nmos.js","components/vee.js","components/vcc.js","components/C.js","components/R.js","components/battery1.js","components/switch.js","components/short.js","components/rightUp.js","components/upRight.js","components/index.js","redux/store/utils.js","redux/store/dragging.js","redux/store/delete.js","redux/store/pathCreation.js","redux/store/rectangleSelection.js","redux/store/nodeCreation.js","redux/store/anchorHelper.js","redux/store/index.js","container/RoughDrawing.js","container/toolbar.js","container/components.js","atoms/anchor.js","container/anchors.js","atoms/magnet.js","container/magnets.js","container/index.js","redux/store/getCircuitikz.js","container/latexDisplay.js","container/elementOptions.js","container/leftMenu.js","App.js","serviceWorker.js","index.js"],"names":["START_DRAGGING","startDragging","x","y","type","STOP_DRAGGING","stopDragging","UPDATE_POSITION","updatePosition","attractor","attracted","shiftPress","START_SELECT","startSelect","TOGGLE_SELECTION","toggleSelection","objectId","reset","START_CREATE_PATH_ELEMENT","startCreatePathElement","elementType","VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION","INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION","SAVE_PATH_ELEMENT_CREATION","START_CREATE_NODE_ELEMENT","ELEMENT_CREATION_NEXT_STEP","SPLIT_ANCHOR","START_RECTANGLE_SELECTION","STOP_RECTANGLE_SELECTION","STACK_SELECTED_ANCHORS","stackSelectedAnchors","direction","DELETE_ELEMENT","UPDATE_COMPONENT","ZOOM","START_MOVE_PAPER","MOVE_PAPER","END_MOVE_PAPER","SET_MODE_MOVE_PAPER","UPDATE_MAGNET_OPTION","updateMagnetOption","optionName","optionValue","MODE_SELECT","MODE_DRAG","MODE_CREATE_PATH_ELEMENT","MODE_CREATE_NODE_ELEMENT","MODE_RECTANGLE_SELECTION","MODE_MOVE_PAPER","reducer_displayOptions","state","action","mode","newZoom","zoom","newWidth","newHeight","displayOptions","newX","width","newY","height","dragging","x0","y0","movePaper","isDragging","toggleDragging","reducer_magnetsOptions","magnetsOptions","defaultCurrant","show","currantText","currantIsForward","currantIsAbove","currantIsAfter","initial_state","isGridAttracting","gridSpace","isPathCoordinatesAttracting","isNodeAnchorsAttracting","selection","adhesivePoints","weakLinks","currentMagnet","pathComponents","byId","id5","id","position","angle","id6","positionAnchor","allIds","anchors","anchor6","isNodePosition","nodeId","anchor7","MULTIPLICATIVE_CONST","R_LEN","rotation","Math","cos","PI","sin","translateSVGbaseline2Canvas","baseline","hanging","middle","translateSVGalign2Canvas","start","end","getTextAnchor","textAnchor","alignmentBaseline","drawRoughCurrant","rc","ctx","ratio","element","fromCoords","toCoords","currant","xFrom","xTo","yFrom","yTo","xI","yI","theta","path","xText","yText","textAlign","textBaseline","fillText","CurrantArrow","style","fill","stroke","d","transform","transformOrigin","random","isAbove","rotationAngle","gap","drawRoughLabel","text","from","to","console","log","xL","yL","save","translate","rotate","restore","Label","mapStateToProps","props","withPathAttributes","component","connect","selected","onMouseDown","label","annotation","mirror","invert","sqrt","parseInt","atan2","className","drawLinks","getPathAttributes","currantAttribute","getCurrantAttribute","getLabelAttribute","getAnnotationAttribute","r","toFixed","cx","cy","UNIT_X","UNIT_Y","UNIT_Y2","wiper_pos","STEP","capacitor_width","getElementTranslation","positionCoords","showHandles","xAnchor","yAnchor","deltaX","deltaY","base_height","gate_height","strokeWidth","Arrow","theta1","theta2","x1","y1","x2","y2","isOpen","withArrow","getAnchors","pR","name","pR_getAnchor","nmos","dx","dy","Cgap","Bgap","Egap","radAngle","Crad","Brad","Erad","distanceC","distanceB","distanceE","nmos_getAnchor","vee","vee_getAnchor","vcc","vcc_getAnchor","getDrawer","short","rightUp","upRight","lampe","positionInformations","anchor","coord","parseFloat","vcapacitor","C","R","battery1","switch","getRoughComponents","circle","getElementAnchors","drawElement","position1","position2","isPath","isMultyPole","structure","bipoles","sources","references","transistors","components","getAdhesivePoints","push","forEach","componentUseThisAnchor","anchorId","replaceComponentAnchor","previousAnchorId","newAnchorId","newElement","anchorsToMove","selectedId","includes","findIndex","elem","fromId","toId","pile","nodeSeen","pop","length","originalPosition","alreadyMoved","weakLinksToRemove","filter","map","anchorToRemoveID","anchorToUseId","anchorToRemoveIDIndex","remainingAnchors","newByIDElements","slice","newWeakLink","nameAnchor","newMoveX","newMoveY","originalX","originalY","abs","anchorById","deleteElement","componentId","anchorToRemove","arg","elementId","newAnchors","newComponents","newPath","isFromValidated","validateFirstStepPathElement","attractorFrom","attractorTo","movedAfterFromCreation","invalidateFirstStepPathElement","savePathElement","newId_element","uuid","fromAnchor","toAnchor","newWeakLinks","newRectangle","rectangleSelection","isInRectangle","stopRectangleSelection","startRectangleSelection","newNode","startNodeCreation","saveNodeCreation","positionId","newPositions","toUpdate","deltaToAdd","anchorName","rotateNode","value","prevAngle","newAngle","prevAnchors","rotationHelper","IdToUpdate","toRemove","index","stackAnchors","anchorsSelected","movedAnchors","newPosition","min","max","undefined","splitAnchor","componentsToChange","weakLinksToCopy","linkedAnchorId","linkToCopy","store","createStore","refSpace","modX","modY","round","draggingUpdatePosition","pathCreationUpdatePosition","nodeCreationUpdatePosition","rectangleSelectionUpdatePosition","margin","canvasRef","useRef","useState","setWidth","setHeight","canvasURL","setCanvasURL","useEffect","svgBBox","document","getElementById","getBBox","rough","canvas","getContext","font","fillStyle","fillRect","roughComponents","current","toDataURL","replace","DialogTitle","DialogContent","ref","DialogActions","Button","href","download","variant","color","dispatch","setZoom","setModeMovePaper","IconButton","event","stopPropagation","SvgIcon","disabled","Select","onChange","target","MenuItem","svgRef","getBoundingClientRect","xOffset","yOffset","svgWidth","svgHeight","SVG_X","SVG_Y","SVG_WIDTH","SVG_HEIGHT","ctrlKey","nativeEvent","clientX","clientY","anchorIds","isUsed","setIsUsed","onMouseEnter","onMouseLeave","onMouseMove","onMouseUp","isMoving","reduce","accumulator","accu","nameAdhesive","idAdhesive","validateFirstStepPathElementCreation","invalidateFirstStepPathElementCreation","savePathElementCreation","nextStepOfElementCreation","startMovePaper","xmlns","viewBox","background","shiftKey","patternUnits","simplifyNumber","rep","getCoordId","getCoord","coords","coordId","removeDrawnElements","drawnElements","listeOfId","compareCoord","coordId1","coordId2","endingPaths1","endingPaths","nodeAssociated1","nodeAssociated","endingPaths2","nodeAssociated2","drawPathFromCoord","startCoordId","nbOfCoordinateUsed","elementsToAdd","nbOfCreatedNames","nextName","currantCoordId","currantCoord","nextPaths","startingPaths","arrivingPaths","nextNode","coordIsNew","getCircuitikz","nodeReference","fromCoord","toCoord","fromCoordId","toCoordId","parent","parentAnchor","associatedIds","positionCoord","positionCoordId","childId","initializeCoords","nodeNumberOfNames","circuitText","multiAnchorNodeIds","isNode","sort","id1","id2","join","coordsToPlot","Object","keys","idToPlot","indexOf","splice","code","autoFocus","onClick","navigator","clipboard","writeText","then","copyCode","inputElement","update","ListItem","TextField","onKeyDown","e","onChangeCapture","button","ListItemText","primary","ListItemSecondaryAction","Input","inputProps","step","FormControlLabel","control","checked","Checkbox","idOfInterest","options","handleInputChange","updateComponent","List","n","startCreateNodeElement","openSection","setOpenSection","sectionName","Collapse","in","timeout","unmountOnExit","paddingLeft","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","toolBar","justifyContent","flexShrink","drawerPaper","drawerContainer","overflow","optionDrawer","optionDrawerPaper","content","flexGrow","padding","spacing","pathIds","isPaperDragged","endMovePaper","classes","showCode","setShowCode","showRough","setShowRough","handleKeyDown","key","addEventListener","removeEventListener","tabIndex","CssBaseline","AppBar","Toolbar","Typography","noWrap","Drawer","paper","open","Dialog","onClose","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7f0d7395.chunk.js","sourcesContent":["export const START_DRAGGING = \"START_DRAGGING\";\nexport function startDragging(x, y) {\n  return {\n    type: START_DRAGGING,\n    x,\n    y,\n  };\n}\n\nexport const STOP_DRAGGING = \"STOP_DRAGGING\";\nexport function stopDragging() {\n  return {\n    type: STOP_DRAGGING,\n  };\n}\n\nexport const UPDATE_POSITION = \"UPDATE_POSITION\";\nexport function updatePosition({ x, y, attractor, attracted, shiftPress }) {\n  // TODO : id should be remove\n  return {\n    type: UPDATE_POSITION,\n    x,\n    y,\n    attractor: attractor || null,\n    attracted: attracted || null,\n    shiftPress,\n  };\n}\n\nexport const START_SELECT = \"START_SELECT\";\nexport function startSelect() {\n  return {\n    type: START_SELECT,\n  };\n}\n\nexport const TOGGLE_SELECTION = \"TOGGLE_SELECTION\";\nexport function toggleSelection(objectId, reset) {\n  return {\n    type: TOGGLE_SELECTION,\n    objectId,\n    reset,\n  };\n}\n\nexport const START_CREATE_PATH_ELEMENT = \"START_CREATE_PATH_ELEMENT\";\nexport function startCreatePathElement(elementType) {\n  return {\n    type: START_CREATE_PATH_ELEMENT,\n    elementType,\n  };\n}\n\nexport const VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION =\n  \"VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION\";\nexport function validateFirstStepPathElementCreation() {\n  return {\n    type: VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  };\n}\n\nexport const INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION =\n  \"INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION\";\nexport function invalidateFirstStepPathElementCreation() {\n  return {\n    type: INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  };\n}\n\nexport const SAVE_PATH_ELEMENT_CREATION = \"SAVE_PATH_ELEMENT_CREATION\";\nexport function savePathElementCreation() {\n  return {\n    type: SAVE_PATH_ELEMENT_CREATION,\n  };\n}\n\nexport const START_CREATE_NODE_ELEMENT = \"START_CREATE_NODE_ELEMENT\";\nexport function startCreateNodeElement(elementType) {\n  return {\n    type: START_CREATE_NODE_ELEMENT,\n    elementType,\n  };\n}\n\nexport const ELEMENT_CREATION_NEXT_STEP = \"ELEMENT_CREATION_NEXT_STEP\";\nexport function nextStepOfElementCreation() {\n  return {\n    type: ELEMENT_CREATION_NEXT_STEP,\n  };\n}\n\nexport const SPLIT_ANCHOR = \"SPLIT_ANCHOR\";\nexport function splitAnchor(anchorId) {\n  return {\n    type: SPLIT_ANCHOR,\n    anchorId: anchorId || null,\n  };\n}\n\nexport const START_RECTANGLE_SELECTION = \"START_RECTANGLE_SELECTION\";\nexport function startRectangleSelection(x, y) {\n  return {\n    type: START_RECTANGLE_SELECTION,\n    x,\n    y,\n  };\n}\n\nexport const STOP_RECTANGLE_SELECTION = \"STOP_RECTANGLE_SELECTION\";\nexport function stopRectangleSelection() {\n  return {\n    type: STOP_RECTANGLE_SELECTION,\n  };\n}\n\nexport const STACK_SELECTED_ANCHORS = \"STACK_SELECTED_ANCHORS\";\nexport function stackSelectedAnchors(direction) {\n  return {\n    type: STACK_SELECTED_ANCHORS,\n    direction,\n  };\n}\n\nexport const DELETE_ELEMENT = \"DELETE_ELEMENT\";\nexport function deleteElement(selection) {\n  return {\n    type: DELETE_ELEMENT,\n    selection,\n  };\n}\n\nexport const UPDATE_COMPONENT = \"UPDATE_COMPONENT\";\nexport function updateComponent(id, name, value) {\n  return {\n    type: UPDATE_COMPONENT,\n    id,\n    name,\n    value,\n  };\n}\n\nexport const ZOOM = \"ZOOM\";\nexport function setZoom(zoom) {\n  return {\n    type: ZOOM,\n    zoom,\n  };\n}\n\nexport const START_MOVE_PAPER = \"START_MOVE_PAPER\";\nexport function startMovePaper(x, y) {\n  return {\n    type: START_MOVE_PAPER,\n    x,\n    y,\n  };\n}\n\nexport const MOVE_PAPER = \"MOVE_PAPER\";\nexport function movePaper(x, y) {\n  return {\n    type: MOVE_PAPER,\n    x,\n    y,\n  };\n}\n\nexport const END_MOVE_PAPER = \"END_MOVE_PAPER\";\nexport function endMovePaper() {\n  return {\n    type: END_MOVE_PAPER,\n  };\n}\n\nexport const SET_MODE_MOVE_PAPER = \"SET_MODE_MOVE_PAPER\";\nexport function setModeMovePaper() {\n  return {\n    type: SET_MODE_MOVE_PAPER,\n  };\n}\n\nexport const UPDATE_MAGNET_OPTION = \"UPDATE_MAGNET_OPTION\";\nexport function updateMagnetOption(optionName, optionValue) {\n  return {\n    type: UPDATE_MAGNET_OPTION,\n    optionName,\n    optionValue,\n  };\n}\n","export const MODE_SELECT = \"MODE_SELECT\";\nexport const MODE_DRAG = \"MODE_DRAG\";\nexport const MODE_CREATE_PATH_ELEMENT = \"MODE_CREATE_PATH_ELEMENT\";\nexport const MODE_CREATE_NODE_ELEMENT = \"MODE_CREATE_NODE_ELEMENT\";\nexport const MODE_RECTANGLE_SELECTION = \"MODE_RECTANGLE_SELECTION\";\n\n// for dragging the all svg\nexport const MODE_MOVE_PAPER = \"MODE_MOVE_PAPER\";\n","import {\n  ZOOM,\n  START_MOVE_PAPER,\n  MOVE_PAPER,\n  END_MOVE_PAPER,\n  SET_MODE_MOVE_PAPER,\n} from \"../actions\";\nimport { MODE_MOVE_PAPER } from \"./interactionModes\";\n\n// If we want to use A4 format (not sure it's useful)\n// const PAGE_WIDTH = 2100;\n// const PAGE_HEIGHT = 2970;\nconst PAGE_WIDTH = 800;\nconst PAGE_HEIGHT = 500;\n\nexport const default_displayOptions = {\n  x: 0,\n  y: 0,\n  zoom: 1,\n  width: PAGE_WIDTH,\n  height: PAGE_HEIGHT,\n  dragging: {\n    isDragging: false,\n    x0: null,\n    y0: null,\n  },\n};\n\nconst zoom = (state, action) => {\n  const newZoom = action.zoom;\n  const newWidth = PAGE_WIDTH / newZoom;\n  const newHeight = PAGE_HEIGHT / newZoom;\n\n  const { x, y, width, height } = state.displayOptions;\n\n  // this do the center on the middle (no useful until SVG heigh is fixed to fit the screen size)\n  const newX = x + width / 2 - newWidth / 2;\n  const newY = y + height / 2 - newHeight / 2;\n\n  return {\n    ...state,\n    displayOptions: {\n      ...state.displayOptions,\n      x: newX,\n      y: newY,\n      zoom: newZoom,\n      width: newWidth,\n      height: newHeight,\n    },\n  };\n};\n\nconst toggleDragging = (state, action) => {\n  const { x = null, y = null } = action;\n  return {\n    ...state,\n    displayOptions: {\n      ...state.displayOptions,\n      dragging: {\n        isDragging: !state.displayOptions.dragging.isDragging,\n        x0: x,\n        y0: y,\n      },\n    },\n  };\n};\n\nconst movePaper = (state, action) => {\n  const { x, y } = action;\n  const { x0, y0 } = state.displayOptions.dragging;\n  return {\n    ...state,\n    displayOptions: {\n      ...state.displayOptions,\n      x: state.displayOptions.x + (x0 - x) / state.displayOptions.zoom,\n      y: state.displayOptions.y + (y0 - y) / state.displayOptions.zoom,\n      dragging: {\n        ...state.displayOptions.dragging,\n        x0: x,\n        y0: y,\n      },\n    },\n  };\n};\n\nconst reducer_displayOptions = (state, action) => {\n  switch (action.type) {\n    case SET_MODE_MOVE_PAPER:\n      return { ...state, mode: MODE_MOVE_PAPER };\n    case ZOOM:\n      return zoom(state, action);\n    case MOVE_PAPER:\n      return movePaper(state, action);\n    case START_MOVE_PAPER:\n    case END_MOVE_PAPER:\n      return toggleDragging(state, action);\n    default:\n      return state;\n  }\n};\nexport default reducer_displayOptions;\n","import { UPDATE_MAGNET_OPTION } from \"../actions\";\n\nexport const default_magnetsOptions = {\n  isGridAttracting: true,\n  gridSpace: 1,\n  isPathCoordinatesAttracting: true,\n  isNodeAnchorsAttracting: true,\n};\n\nconst reducer_magnetsOptions = (state, action) => {\n  const { type, optionName, optionValue = null } = action;\n  switch (type) {\n    case UPDATE_MAGNET_OPTION:\n      if (optionValue === null) {\n        return {\n          ...state,\n          magnetsOptions: {\n            ...state.magnetsOptions,\n            [optionName]: !state.magnetsOptions[optionName],\n          },\n        };\n      } else {\n        return {\n          ...state,\n          magnetsOptions: {\n            ...state.magnetsOptions,\n            [optionName]: optionValue,\n          },\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default reducer_magnetsOptions;\n","import { MODE_SELECT } from \"./interactionModes\";\nimport { default_displayOptions } from \"./displayOptions\";\nimport { default_magnetsOptions } from \"./magnetsOptions\";\n\nexport const defaultCurrant = {\n  show: false,\n  currantText: \"\",\n  currantIsForward: true,\n  currantIsAbove: true,\n  currantIsAfter: true,\n};\n\nexport const initial_state = {\n  displayOptions: default_displayOptions,\n  magnetsOptions: default_magnetsOptions,\n  mode: MODE_SELECT,\n  selection: [],\n  adhesivePoints: [],\n  weakLinks: [],\n  currentMagnet: {\n    attractor: null,\n    attracted: null,\n  },\n  pathComponents: {\n    byId: {\n      // id1: {\n      //   id: \"id1\",\n      //   from: \"anchor1\",\n      //   to: \"anchor3\",\n      //   type: \"pR\",\n      //   currant: { ...defaultCurrant },\n      // },\n      // id2: {\n      //   id: \"id2\",\n      //   from: \"anchor2\",\n      //   to: \"anchor3\",\n      //   type: \"empty led\",\n      //   currant: { ...defaultCurrant },\n      // },\n      // id3: {\n      //   id: \"id3\",\n      //   from: \"anchor4\",\n      //   to: \"anchor3\",\n      //   type: \"lampe\",\n      //   label: \"label\",\n      //   annotation: \"annotation\",\n      //   currant: { ...defaultCurrant },\n      //   mirror: false,\n      //   invert: false,\n      // },\n      // id4: {\n      //   id: \"id4\",\n      //   from: \"anchor5\",\n      //   to: \"anchor3\",\n      //   type: \"lampe\",\n      //   label: \"label\",\n      //   annotation: \"annotation\",\n      //   currant: { ...defaultCurrant },\n      //   mirror: false,\n      //   invert: false,\n      // },\n      id5: {\n        id: \"id5\",\n        position: \"anchor6\",\n        type: \"nmos\",\n        angle: -45,\n      },\n      id6: {\n        id: \"id6\",\n        position: \"anchor7\",\n        type: \"nmos\",\n        angle: \"\",\n        positionAnchor: \"\",\n      },\n    },\n    allIds: [\n      // \"id1\", \"id2\", \"id3\", \"id4\",\n      \"id5\",\n      \"id6\",\n    ],\n  },\n  anchors: {\n    byId: {\n      // anchor1: {\n      //   id: \"anchor1\",\n      //   x: 10,\n      //   y: 200,\n      // },\n      // anchor2: {\n      //   id: \"anchor2\",\n      //   x: 500,\n      //   y: 200,\n      // },\n      // anchor3: {\n      //   id: \"anchor3\",\n      //   x: 250,\n      //   y: 200,\n      // },\n      // anchor4: {\n      //   id: \"anchor4\",\n      //   x: 250,\n      //   y: 400,\n      // },\n      // anchor5: {\n      //   id: \"anchor5\",\n      //   x: 250,\n      //   y: 10,\n      // },\n      anchor6: {\n        id: \"anchor6\",\n        x: 100,\n        y: 400,\n        isNodePosition: true,\n        nodeId: \"id5\",\n      },\n      anchor7: {\n        id: \"anchor7\",\n        x: 200,\n        y: 400,\n        isNodePosition: true,\n        nodeId: \"id6\",\n      },\n    },\n    allIds: [\n      // \"anchor1\", \"anchor2\", \"anchor3\", \"anchor4\", \"anchor5\"\n    ],\n  },\n};\n","// this factor is used to get a good ratio between coordinates and line width\nexport const MULTIPLICATIVE_CONST = 100;\n\nexport const R_LEN = 1.4;\n\nexport const rotation = (angle, x0, y0, x, y) => {\n  return `${\n    x0 +\n    Math.cos((-angle / 180) * Math.PI) * x -\n    Math.sin((-angle / 180) * Math.PI) * y\n  } ${\n    y0 +\n    Math.sin((-angle / 180) * Math.PI) * x +\n    Math.cos((-angle / 180) * Math.PI) * y\n  }`;\n};\n\nexport const translateSVGbaseline2Canvas = {\n  baseline: \"bottom\",\n  hanging: \"top\",\n  middle: \"middle\",\n};\n\nexport const translateSVGalign2Canvas = {\n  start: \"start\",\n  end: \"end\",\n  middle: \"center\",\n};\n","import React from \"react\";\nimport {\n  rotation,\n  translateSVGbaseline2Canvas,\n  translateSVGalign2Canvas,\n} from \"../components/constantes\";\n\nconst getTextAnchor = (angle, currantIsAbove) => {\n  if (-5 < angle && angle < 5) {\n    return {\n      textAnchor: \"middle\",\n      alignmentBaseline: currantIsAbove ? \"baseline\" : \"hanging\",\n    };\n  }\n  if (-86 < angle && angle <= -5) {\n    return {\n      textAnchor: currantIsAbove ? \"end\" : \"start\",\n      alignmentBaseline: currantIsAbove ? \"baseline\" : \"hanging\",\n    };\n  }\n  if (-95 < angle && angle <= -86) {\n    return {\n      textAnchor: currantIsAbove ? \"end\" : \"start\",\n      alignmentBaseline: \"middle\",\n    };\n  }\n  if (-176 < angle && angle <= -95) {\n    return {\n      textAnchor: currantIsAbove ? \"end\" : \"start\",\n      alignmentBaseline: currantIsAbove ? \"hanging\" : \"baseline\",\n    };\n  }\n\n  if (angle >= 5 && angle < 86) {\n    return {\n      textAnchor: currantIsAbove ? \"start\" : \"end\",\n      alignmentBaseline: currantIsAbove ? \"baseline\" : \"hanging\",\n    };\n  }\n  if (angle >= 86 && angle < 95) {\n    return {\n      textAnchor: currantIsAbove ? \"start\" : \"end\",\n      alignmentBaseline: \"middle\",\n    };\n  }\n  if (angle >= 95 && angle < 176) {\n    return {\n      textAnchor: currantIsAbove ? \"start\" : \"end\",\n      alignmentBaseline: currantIsAbove ? \"hanging\" : \"baseline\",\n    };\n  }\n  return {\n    textAnchor: \"middle\",\n    alignmentBaseline: currantIsAbove ? \"hanging\" : \"baseline\",\n  };\n};\n\nexport const getCurrantAttribute = ({\n  show,\n  currantText,\n  currantIsForward,\n  currantIsAbove,\n  currantIsAfter,\n}) => {\n  if (!show) {\n    return \"\";\n  }\n  const text = currantText || \"$$$$\";\n  if (!currantIsAfter) {\n    const position = currantIsAbove ? \"^\" : \"_\";\n    const direction = currantIsForward ? \">\" : \"<\";\n    return `i${direction}${position}=${text}`;\n  } else {\n    const position = currantIsAbove ? \"^\" : \"_\";\n    const direction = currantIsForward ? \">\" : \"<\";\n    return `i${position}${direction}=${text}`;\n  }\n};\n\nconst CurrantArrow = ({\n  fromCoords,\n  toCoords,\n  currantText,\n  ratio = null,\n  angle = null,\n  currantIsForward = true,\n  currantIsAbove = true,\n  currantIsAfter = true,\n}) => {\n  if (!fromCoords || !toCoords || angle === null || ratio === null) {\n    return null;\n  }\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const xI = currantIsAfter\n    ? xTo + (ratio * (xFrom - xTo)) / 2\n    : xFrom + (ratio * (xTo - xFrom)) / 2;\n  const yI = currantIsAfter\n    ? yTo + (ratio * (yFrom - yTo)) / 2\n    : yFrom + (ratio * (yTo - yFrom)) / 2;\n  const rI = 15;\n\n  return (\n    <g\n      style={{\n        fill: \"black\",\n        stroke: \"none\",\n      }}\n    >\n      <path\n        d={`M ${xI + 0.5 * rI} ${yI} L  ${xI - 0.5 * rI} ${yI + 0.5 * rI} L  ${\n          xI - 0.5 * rI\n        } ${yI - 0.5 * rI} Z`}\n        style={{\n          transform: `rotate(${angle + (currantIsForward ? 0 : 180)}deg)`,\n          transformOrigin: `${xI}px ${yI}px`,\n        }}\n      />\n      <text\n        key={Math.random()}\n        x={\n          xI -\n          (currantIsAbove ? -0.5 * rI : 0.5 * rI) *\n            Math.sin((angle / 180) * Math.PI)\n        }\n        y={\n          yI +\n          (currantIsAbove ? -0.5 * rI : 0.5 * rI) *\n            Math.cos((angle / 180) * Math.PI)\n        }\n        style={{ ...getTextAnchor(angle, currantIsAbove) }}\n      >\n        {currantText}\n      </text>\n    </g>\n  );\n};\n\nexport const drawRoughCurrant = (rc, ctx, x0, y0, angle, ratio, element) => {\n  const {\n    fromCoords,\n    toCoords,\n    currant: {\n      show,\n      currantText,\n      currantIsForward = true,\n      currantIsAbove = true,\n      currantIsAfter = true,\n    },\n  } = element;\n\n  if (!show) {\n    return null;\n  }\n\n  const xFrom = fromCoords.x - x0;\n  const xTo = toCoords.x - x0;\n  const yFrom = fromCoords.y - y0;\n  const yTo = toCoords.y - y0;\n\n  const xI = currantIsAfter\n    ? xTo + (ratio * (xFrom - xTo)) / 2\n    : xFrom + (ratio * (xTo - xFrom)) / 2;\n  const yI = currantIsAfter\n    ? yTo + (ratio * (yFrom - yTo)) / 2\n    : yFrom + (ratio * (yTo - yFrom)) / 2;\n  const rI = 15;\n\n  const theta = -angle + (currantIsForward ? 0 : 180);\n  rc.path(\n    `M ${rotation(theta, xI, yI, -0.5 * rI, 0.5 * rI)}\n    L ${rotation(theta, xI, yI, 0.5 * rI, 0)}\n    L ${rotation(theta, xI, yI, -0.5 * rI, -0.5 * rI)}\n    Z\n    `\n  );\n\n  if (!currantText) {\n    return null;\n  }\n  const xText =\n    xI -\n    (currantIsAbove ? -0.5 * rI : 0.5 * rI) * Math.sin((angle / 180) * Math.PI);\n\n  const yText =\n    yI +\n    (currantIsAbove ? -0.5 * rI : 0.5 * rI) * Math.cos((angle / 180) * Math.PI);\n\n  const { textAnchor, alignmentBaseline } = getTextAnchor(\n    angle,\n    currantIsAbove\n  );\n\n  ctx.textAlign = translateSVGbaseline2Canvas[textAnchor];\n  ctx.textBaseline = translateSVGalign2Canvas[alignmentBaseline];\n  ctx.fillText(currantText, xText, yText);\n};\n\nexport default CurrantArrow;\n","import React from \"react\";\nimport {\n  translateSVGbaseline2Canvas,\n  translateSVGalign2Canvas,\n} from \"../components/constantes\";\n\nconst getTextAnchor = (angle, isAbove, x, y) => {\n  if (-20 < angle && angle < 20) {\n    return {\n      textAnchor: \"middle\",\n      alignmentBaseline: isAbove ? \"baseline\" : \"hanging\",\n    };\n  }\n  if (-110 < angle && angle < -70) {\n    return {\n      textAnchor: isAbove ? \"end\" : \"start\",\n      alignmentBaseline: \"middle\",\n    };\n  }\n  if (70 < angle && angle < 110) {\n    return {\n      textAnchor: isAbove ? \"start\" : \"end\",\n      alignmentBaseline: \"middle\",\n    };\n  }\n  if (angle < -160 || angle > 160) {\n    return {\n      textAnchor: \"middle\",\n      alignmentBaseline: isAbove ? \"hanging\" : \"baseline\",\n    };\n  }\n  if (angle <= -20 && angle >= -70) {\n    return {\n      // textAnchor: isAbove ? \"end\" : \"start\",\n      textAnchor: \"middle\",\n      alignmentBaseline: isAbove ? \"baseline\" : \"hanging\",\n      transform: `rotate(${angle}deg)`,\n      transformOrigin: `${x}px ${y}px`,\n      rotationAngle: angle,\n    };\n  }\n  if (angle >= 20 && angle <= 70) {\n    return {\n      // textAnchor: isAbove ? \"start\" : \"end\",\n      textAnchor: \"middle\",\n      alignmentBaseline: isAbove ? \"baseline\" : \"hanging\",\n      transform: `rotate(${angle}deg)`,\n      transformOrigin: `${x}px ${y}px`,\n      rotationAngle: angle,\n    };\n  }\n  if (angle <= -110 && angle >= -160) {\n    return {\n      // textAnchor: isAbove ? \"end\" : \"start\",\n      textAnchor: \"middle\",\n      alignmentBaseline: isAbove ? \"hanging\" : \"baseline\",\n      transform: `rotate(${angle + 180}deg)`,\n      transformOrigin: `${x}px ${y}px`,\n      rotationAngle: angle + 180,\n    };\n  }\n  if (angle >= 110 && angle <= 160) {\n    return {\n      // textAnchor: isAbove ? \"start\" : \"end\",\n      textAnchor: \"middle\",\n      alignmentBaseline: isAbove ? \"hanging\" : \"baseline\",\n      transform: `rotate(${angle + 180}deg)`,\n      transformOrigin: `${x}px ${y}px`,\n      rotationAngle: angle + 180,\n    };\n  }\n};\n\nexport const getLabelAttribute = (text, isAbove = true) => {\n  if (!text) {\n    return \"\";\n  }\n  if (!isAbove) {\n    return `l_=${text}`;\n  } else {\n    return `l=${text}`;\n  }\n};\nexport const getAnnotationAttribute = (text, isAbove = false) => {\n  if (!text) {\n    return \"\";\n  }\n  if (!isAbove) {\n    return `a=${text}`;\n  } else {\n    return `a^=${text}`;\n  }\n};\n\nconst gap = 10;\n\nconst Label = ({\n  fromCoords,\n  toCoords,\n  angle = null,\n  height = null,\n  text,\n  isAbove = true,\n}) => {\n  if (!fromCoords || !toCoords || !text || angle === null || height === null) {\n    return null;\n  }\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const xL =\n    (xFrom + xTo) / 2 +\n    (isAbove ? height + gap : -(height + gap)) *\n      Math.sin((angle / 180) * Math.PI);\n  const yL =\n    (yFrom + yTo) / 2 +\n    (isAbove ? -(height + gap) : height + gap) *\n      Math.cos((angle / 180) * Math.PI);\n\n  return (\n    <g\n      style={{\n        fill: \"black\",\n        stroke: \"none\",\n      }}\n    >\n      <text\n        key={Math.random()}\n        x={xL}\n        y={yL}\n        style={{ ...getTextAnchor(angle, isAbove, xL, yL) }}\n      >\n        {text}\n      </text>\n    </g>\n  );\n};\n\nexport const drawRoughLabel = ({\n  ctx,\n  text,\n  from,\n  to,\n  angle,\n  isAbove,\n  height,\n}) => {\n  console.log({ angle });\n  const { x: xFrom, y: yFrom } = from;\n  const { x: xTo, y: yTo } = to;\n\n  const xL =\n    (xFrom + xTo) / 2 +\n    (isAbove ? height + gap : -(height + gap)) *\n      Math.sin((angle / 180) * Math.PI);\n  const yL =\n    (yFrom + yTo) / 2 +\n    (isAbove ? -(height + gap) : height + gap) *\n      Math.cos((angle / 180) * Math.PI);\n\n  const { textAnchor, alignmentBaseline, rotationAngle = 0 } = getTextAnchor(\n    angle,\n    isAbove,\n    0,\n    0\n  );\n\n  ctx.save();\n\n  ctx.textAlign = translateSVGalign2Canvas[textAnchor];\n  ctx.textBaseline = translateSVGbaseline2Canvas[alignmentBaseline];\n\n  ctx.translate(xL, yL);\n  ctx.rotate((rotationAngle * Math.PI) / 180);\n\n  ctx.fillText(text, 0, 0);\n\n  ctx.restore();\n};\nexport default Label;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"../constantes\";\nimport CurrantArrow, { getCurrantAttribute } from \"../../atoms/currant\";\nimport Label, {\n  getLabelAttribute,\n  getAnnotationAttribute,\n  drawRoughLabel,\n} from \"../../atoms/label\";\n\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\n// TODO : should allow to have heighTop and heighBottom (cf pR component problem)\n// or a ratio between top and bottom to share the complete heigh\nexport const withPathAttributes = ({ height = 1, width = 1 }) => (component) =>\n  connect(mapStateToProps)((props) => {\n    const {\n      fromCoords,\n      toCoords,\n      selected,\n      onMouseDown,\n      currant,\n      label,\n      annotation,\n      mirror,\n      invert,\n    } = props;\n\n    if (!fromCoords || !toCoords) {\n      return null;\n    }\n\n    const { x: xFrom, y: yFrom } = fromCoords;\n    const { x: xTo, y: yTo } = toCoords;\n\n    const d = Math.sqrt((xFrom - xTo) ** 2 + (yFrom - yTo) ** 2);\n    const ratio = (d - width * MULTIPLICATIVE_CONST * R_LEN) / (2 * d); // ratio of the line use by connection\n    const angle = parseInt(\n      (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n    );\n\n    return (\n      <g\n        onMouseDown={onMouseDown || null}\n        className={`component ${selected ? \"red\" : \"black\"}`}\n      >\n        <g\n          style={{\n            transform: `translate(${(xFrom + xTo) / 2}px , ${\n              (yFrom + yTo) / 2\n            }px) rotate(${angle}deg)${mirror ? \"scaleY(-1)\" : \"\"}${\n              invert ? \"scaleX(-1)\" : \"\"\n            }`,\n          }}\n        >\n          {component({\n            ...props,\n            x: (xFrom + xTo) / 2,\n            y: (yFrom + yTo) / 2,\n            angle: angle,\n          })}\n        </g>\n\n        {/* draw the line between anchors and the component */}\n        <path\n          d={`M ${xFrom} ${yFrom} L ${xFrom + ratio * (xTo - xFrom)} ${\n            yFrom + ratio * (yTo - yFrom)\n          }`}\n        />\n        <path\n          d={`M ${xTo} ${yTo} L ${xTo + ratio * (xFrom - xTo)} ${\n            yTo + ratio * (yFrom - yTo)\n          }`}\n        />\n\n        {currant && currant.show && (\n          <CurrantArrow\n            fromCoords={fromCoords}\n            toCoords={toCoords}\n            ratio={ratio}\n            angle={angle}\n            {...currant}\n          />\n        )}\n        {label && (\n          <Label\n            fromCoords={fromCoords}\n            toCoords={toCoords}\n            height={0.5 * height * MULTIPLICATIVE_CONST * R_LEN}\n            angle={angle}\n            text={label}\n          />\n        )}\n        {annotation && (\n          <Label\n            fromCoords={fromCoords}\n            toCoords={toCoords}\n            height={0.5 * height * MULTIPLICATIVE_CONST * R_LEN}\n            angle={angle}\n            text={annotation}\n            isAbove={false}\n          />\n        )}\n      </g>\n    );\n  });\n\nexport const drawLinks = (rc, ctx, x0, y0, width, height, element) => {\n  const { x: xFrom, y: yFrom } = element.fromCoords;\n  const { x: xTo, y: yTo } = element.toCoords;\n\n  const x = (xFrom + xTo) / 2 - x0;\n  const y = (yFrom + yTo) / 2 - y0;\n\n  const d = Math.sqrt((xFrom - xTo) ** 2 + (yFrom - yTo) ** 2);\n  const ratio = (d - width * MULTIPLICATIVE_CONST * R_LEN) / (2 * d); // ratio of the line use by connection\n  const angle = parseInt(\n    (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n  );\n\n  rc.path(\n    `M ${xFrom - x0} ${yFrom - y0}\n    L ${xFrom + ratio * (xTo - xFrom) - x0} ${\n      yFrom + ratio * (yTo - yFrom) - y0\n    }\n    M ${xTo - x0} ${yTo - y0}\n    L ${xTo + ratio * (xFrom - xTo) - x0} ${yTo + ratio * (yFrom - yTo) - y0}`\n  );\n\n  const { label = null, annotation = null } = element;\n\n  if (label !== null) {\n    drawRoughLabel({\n      ctx,\n      text: label,\n      from: { x: xFrom - x0, y: yFrom - y0 },\n      to: { x: xTo - x0, y: yTo - y0 },\n      angle,\n      isAbove: true,\n      height: 0.5 * height * MULTIPLICATIVE_CONST * R_LEN,\n    });\n  }\n  if (annotation !== null) {\n    drawRoughLabel({\n      ctx,\n      text: annotation,\n      from: { x: xFrom - x0, y: yFrom - y0 },\n      to: { x: xTo - x0, y: yTo - y0 },\n      angle,\n      isAbove: false,\n      height: 0.5 * height * MULTIPLICATIVE_CONST * R_LEN,\n    });\n  }\n\n  return { x, y, angle, ratio };\n};\n\nexport const getPathAttributes = (element) => {\n  const currantAttribute = getCurrantAttribute(element.currant);\n  const label = getLabelAttribute(element.label);\n  const annotation = getAnnotationAttribute(element.annotation);\n\n  return `${label ? `, ${label}` : \"\"}${annotation ? `, ${annotation}` : \"\"}${\n    currantAttribute ? `, ${currantAttribute}` : \"\"\n  }${element.mirror ? \", mirror\" : \"\"}${element.invert ? \", invert\" : \"\"}`;\n};\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN, rotation } from \"./constantes\";\nimport {\n  withPathAttributes,\n  getPathAttributes,\n  drawLinks,\n} from \"./hoc/pathComponents\";\nimport { drawRoughCurrant } from \"../atoms/currant\";\n\nconst width = 0.6;\nconst height = 0.6;\nconst R = 0.6 * 0.5 * MULTIPLICATIVE_CONST * R_LEN;\nconst r = (0.7071 * R).toFixed(3);\n\nconst Lampe = () => (\n  <>\n    <circle cx={0} cy={0} r={R} />\n    <path d={`M -${r} -${r} L ${r} ${r} M -${r} ${r} L ${r} -${r}`} />\n  </>\n);\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const { x, y, angle, ratio } = drawLinks(\n    rc,\n    ctx,\n    x0,\n    y0,\n    width,\n    height,\n    element\n  );\n\n  drawRoughCurrant(rc, ctx, x0, y0, angle, ratio, element);\n\n  rc.path(\n    `M ${rotation(-angle, x, y, r, r)}\n    L ${rotation(-angle, x, y, -r, -r)}\n    M ${rotation(-angle, x, y, r, -r)}\n    L ${rotation(-angle, x, y, -r, r)}\n    `\n  );\n  rc.circle(x, y, 2 * R);\n};\n\nexport const drawer = (element) => {\n  return `to[lamp${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width, height })(Lampe);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN, rotation } from \"./constantes\";\nimport {\n  withPathAttributes,\n  getPathAttributes,\n  drawLinks,\n} from \"./hoc/pathComponents\";\nimport { drawRoughCurrant } from \"../atoms/currant\";\n\nconst height = 0.5;\nconst width = 0.4;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nconst EmptyDiode = () => (\n  <>\n    <path\n      d={`M ${UNIT_X} 0 L ${-UNIT_X} ${-UNIT_Y} L ${-UNIT_X} ${UNIT_Y} Z`}\n    />\n    <path d={`M ${UNIT_X} ${UNIT_Y} L ${UNIT_X} ${-UNIT_Y}`} />\n  </>\n);\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const { x, y, angle, ratio } = drawLinks(\n    rc,\n    ctx,\n    x0,\n    y0,\n    width,\n    height,\n    element\n  );\n\n  drawRoughCurrant(rc, ctx, x0, y0, angle, ratio, element);\n\n  rc.path(\n    `M ${rotation(-angle, x, y, UNIT_X, 0)}\n    L ${rotation(-angle, x, y, -UNIT_X, -UNIT_Y)}\n    L ${rotation(-angle, x, y, -UNIT_X, UNIT_Y)}\n    Z\n    M ${rotation(-angle, x, y, UNIT_X, UNIT_Y)}\n    L ${rotation(-angle, x, y, UNIT_X, -UNIT_Y)}\n    `\n  );\n};\n\nexport const drawer = (element) => {\n  return `to[empty diode${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width, height })(EmptyDiode);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN, rotation } from \"./constantes\";\nimport {\n  withPathAttributes,\n  getPathAttributes,\n  drawLinks,\n} from \"./hoc/pathComponents\";\nimport { drawRoughCurrant } from \"../atoms/currant\";\n\nconst height = 0.8;\nconst height_2 = 0.3;\nconst width = 0.8;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y2 = 0.5 * height_2 * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nexport const getAnchor = ({ fromCoords, toCoords }) => {\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const angle = Math.atan2(yTo - yFrom, xTo - xFrom);\n\n  const x = (xFrom + xTo) / 2 + 55 * Math.sin(angle);\n  const y = (yFrom + yTo) / 2 - 55 * Math.cos(angle);\n  return [{ name: \"wiper\", x, y }];\n};\n\nconst PR = ({ wiper_pos = 0.5 }) => (\n  <>\n    <path\n      d={`M ${(-6 / 6) * UNIT_X} 0 L ${(-5 / 6) * UNIT_X} ${-UNIT_Y2} L ${\n        (-3 / 6) * UNIT_X\n      } ${UNIT_Y2} L ${(-1 / 6) * UNIT_X} ${-UNIT_Y2} L ${\n        (1 / 6) * UNIT_X\n      } ${UNIT_Y2} L ${(3 / 6) * UNIT_X} ${-UNIT_Y2} L ${\n        (5 / 6) * UNIT_X\n      } ${UNIT_Y2} L ${(6 / 6) * UNIT_X} 0`}\n    />\n    <path\n      d={`M ${-(0.5 - wiper_pos) * 2 * UNIT_X} ${-UNIT_Y} L ${\n        -(0.5 - wiper_pos) * 2 * UNIT_X\n      } ${-UNIT_Y2}`}\n    />\n  </>\n);\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const { x, y, angle, ratio } = drawLinks(\n    rc,\n    ctx,\n    x0,\n    y0,\n    width,\n    height,\n    element\n  );\n\n  drawRoughCurrant(rc, ctx, x0, y0, angle, ratio, element);\n\n  const { wiper_pos } = element;\n  rc.path(\n    `M ${rotation(-angle, x, y, -UNIT_X, 0)}\n    L ${rotation(-angle, x, y, (-5 / 6) * UNIT_X, -UNIT_Y2)} \n    L ${rotation(-angle, x, y, (-3 / 6) * UNIT_X, UNIT_Y2)} \n    L ${rotation(-angle, x, y, (-1 / 6) * UNIT_X, -UNIT_Y2)} \n    L ${rotation(-angle, x, y, (1 / 6) * UNIT_X, UNIT_Y2)} \n    L ${rotation(-angle, x, y, (3 / 6) * UNIT_X, -UNIT_Y2)} \n    L ${rotation(-angle, x, y, (5 / 6) * UNIT_X, UNIT_Y2)} \n    L ${rotation(-angle, x, y, UNIT_X, 0)}\n    M ${rotation(-angle, x, y, -(0.5 - wiper_pos) * 2 * UNIT_X, -UNIT_Y)}\n    L ${rotation(-angle, x, y, -(0.5 - wiper_pos) * 2 * UNIT_X, -UNIT_Y2)}`\n  );\n};\n\nexport const drawer = (element) => {\n  return `to[pR${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width, height })(PR);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN, rotation } from \"./constantes\";\nimport {\n  withPathAttributes,\n  getPathAttributes,\n  drawLinks,\n} from \"./hoc/pathComponents\";\nimport { drawRoughCurrant } from \"../atoms/currant\";\n\nconst height = 0.6;\nconst width = 0.5;\nconst capacitor_width = 0.4;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nconst STEP = capacitor_width * UNIT_X;\n\nconst Vcapacitor = () => (\n  <>\n    <path d={`M  ${-STEP} ${-UNIT_Y} L ${-STEP} ${UNIT_Y}`} />\n    <path d={`M  ${STEP} ${-UNIT_Y} L ${STEP} ${UNIT_Y}`} />\n    <path d={`M ${-UNIT_X} ${-UNIT_Y} L ${UNIT_X} ${UNIT_Y}`} />\n  </>\n);\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const { x, y, angle } = drawLinks(\n    rc,\n    x0,\n    y0,\n    capacitor_width / 2,\n    height,\n    element\n  );\n\n  rc.path(\n    `M ${rotation(-angle, x, y, -STEP, UNIT_Y)}\n    L ${rotation(-angle, x, y, -STEP, -UNIT_Y)}\n    M ${rotation(-angle, x, y, STEP, UNIT_Y)}\n    L ${rotation(-angle, x, y, STEP, -UNIT_Y)}\n    M ${rotation(-angle, x, y, -UNIT_X, -UNIT_Y)}\n    L ${rotation(-angle, x, y, UNIT_X, UNIT_Y)}\n    `\n  );\n};\n\nexport const drawer = (element) => {\n  return `to[variable capacitor${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width: capacitor_width / 2, height })(\n  Vcapacitor\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\n\nimport { MULTIPLICATIVE_CONST, R_LEN, rotation } from \"./constantes\";\n\nconst width = 0.7;\nconst gate_height = 0.35;\nconst base_height = 0.5;\n// const conn_height = 0;\nconst height = 1.1;\nconst base_width = 0.5;\nconst gate_width = 0.62;\n// const arrow_pos = 0.6;\n// const bodydiode_scale = 0.3;\n// const bodydiode_distance = 0.3;\n// const bodydiode_conn = 0.6;\n// const curr_direction = 1;\n\nconst UNIT_X = width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nconst getElementTranslation = (positionAnchor) => {\n  switch (positionAnchor) {\n    case \"B\":\n      return { x: UNIT_X, y: 0 };\n    case \"C\":\n      return { x: 0, y: UNIT_Y };\n    case \"E\":\n      return { x: 0, y: -UNIT_Y };\n    default:\n      return { x: 0, y: 0 };\n  }\n};\n\nexport const getAnchor = ({ positionAnchor, angle = 0, positionCoords }) => {\n  const { x, y } = positionCoords;\n\n  const { x: dx, y: dy } = getElementTranslation(positionAnchor);\n\n  const Cgap = getElementTranslation(\"C\");\n  const Bgap = getElementTranslation(\"B\");\n  const Egap = getElementTranslation(\"E\");\n  const radAngle = (Math.PI * angle) / 180;\n\n  const Crad = Math.atan2(dy - Cgap.y, dx - Cgap.x);\n  const Brad = Math.atan2(dy - Bgap.y, dx - Bgap.x);\n  const Erad = Math.atan2(dy - Egap.y, dx - Egap.x);\n\n  const distanceC = Math.sqrt((Cgap.x - dx) ** 2 + (Cgap.y - dy) ** 2);\n  const distanceB = Math.sqrt((Bgap.x - dx) ** 2 + (Bgap.y - dy) ** 2);\n  const distanceE = Math.sqrt((Egap.x - dx) ** 2 + (Egap.y - dy) ** 2);\n\n  return [\n    {\n      name: \"C\",\n      x: x + Math.cos(-radAngle + Crad) * distanceC,\n      y: y + Math.sin(-radAngle + Crad) * distanceC,\n    },\n    {\n      name: \"B\",\n      x: x + Math.cos(-radAngle + Brad) * distanceB,\n      y: y + Math.sin(-radAngle + Brad) * distanceB,\n    },\n    {\n      name: \"E\",\n      x: x + Math.cos(-radAngle + Erad) * distanceE,\n      y: y + Math.sin(-radAngle + Erad) * distanceE,\n    },\n  ];\n};\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        mode: state.mode,\n        // allows to create components directly without using the store\n        positionCoords: state.anchors.byId[props.position],\n      }\n    : {};\n};\n\nconst NMOS = ({\n  positionCoords,\n  positionAnchor = \"\",\n  angle = 0,\n  mode,\n  selected,\n  showHandles,\n  id,\n  onMouseDown,\n}) => {\n  if (!positionCoords) {\n    return null;\n  }\n  const { x: xAnchor, y: yAnchor } = positionCoords;\n  const { x: deltaX, y: deltaY } = getElementTranslation(positionAnchor);\n\n  return (\n    <g\n      onMouseDown={onMouseDown || null}\n      className={`component ${selected ? \"red\" : \"black\"}`}\n    >\n      <g\n        style={{\n          transform: `translate(${xAnchor}px , ${yAnchor}px) rotate(${-angle}deg)`,\n        }}\n      >\n        <g\n          style={{\n            transform: `translate(${deltaX}px , ${deltaY}px)`,\n          }}\n        >\n          <path\n            d={`M ${0} ${-UNIT_Y} \n                  L ${0} ${-gate_height * UNIT_Y}\n                  L ${-base_width * UNIT_X} ${-gate_height * UNIT_Y}`}\n          />\n          <path\n            d={`M ${-base_width * UNIT_X} ${-base_height * UNIT_Y}\n                  L ${-base_width * UNIT_X} ${base_height * UNIT_Y}\n                  L ${-base_width * UNIT_X} ${gate_height * UNIT_Y}\n                  L ${0} ${gate_height * UNIT_Y}\n                  L ${0} ${UNIT_Y}`}\n          />\n          <path\n            d={`M ${-gate_width * UNIT_X} ${-gate_height * UNIT_Y}\n                  L ${-gate_width * UNIT_X} ${gate_height * UNIT_Y}`}\n            style={{ strokeWidth: 2 }}\n          />\n          <path\n            d={`M ${-gate_width * UNIT_X} 0\n                      L ${-UNIT_X} 0`}\n          />\n        </g>\n      </g>\n    </g>\n  );\n};\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const x = element.positionCoords.x - x0;\n  const y = element.positionCoords.y - y0;\n\n  const { angle } = element;\n\n  rc.path(\n    `M ${rotation(angle, x, y, 0, -UNIT_Y)} \n      L ${rotation(angle, x, y, 0, -gate_height * UNIT_Y)}\n      L ${rotation(angle, x, y, -base_width * UNIT_X, -gate_height * UNIT_Y)}\n      M ${rotation(angle, x, y, -base_width * UNIT_X, -base_height * UNIT_Y)}\n      L ${rotation(angle, x, y, -base_width * UNIT_X, +base_height * UNIT_Y)}\n      L ${rotation(angle, x, y, -base_width * UNIT_X, +gate_height * UNIT_Y)}\n      L ${rotation(angle, x, y, 0, gate_height * UNIT_Y)}\n      L ${rotation(angle, x, y, 0, UNIT_Y)}\n      M ${rotation(angle, x, y, -gate_width * UNIT_X, -gate_height * UNIT_Y)}\n      L ${rotation(angle, x, y, -gate_width * UNIT_X, +gate_height * UNIT_Y)}\n      M ${rotation(angle, x, y, -gate_width * UNIT_X, 0)}\n      L ${rotation(angle, x, y, -UNIT_X, 0)}`\n  );\n};\n\nexport const drawer = (element, positionInformations, name = null) => {\n  const { x, y, position, anchor } = positionInformations;\n\n  const coord = position\n    ? `(${position})`\n    : `(${(x / MULTIPLICATIVE_CONST).toFixed(2)}, ${(\n        -y / MULTIPLICATIVE_CONST\n      ).toFixed(2)})`;\n\n  return `\\\\draw ${coord} node[nmos${anchor ? `, anchor=${anchor}` : \"\"}${\n    element.angle && parseFloat(element.angle) !== 0\n      ? `, rotate=${element.angle}`\n      : \"\"\n  }]${name ? `(${name})` : \"\"}{};`;\n};\n\nexport default connect(mapStateToProps)(NMOS);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\n\nimport { MULTIPLICATIVE_CONST, R_LEN, rotation } from \"./constantes\";\n\nconst width = 0.2;\nconst STEP = width * R_LEN * MULTIPLICATIVE_CONST;\n\nexport const getAnchor = ({ positionCoords }) => {\n  const { x, y } = positionCoords;\n\n  return [\n    {\n      name: \"C\",\n      x: x,\n      y: y,\n    },\n  ];\n};\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        // allows to create components directly without using the store\n        positionCoords: state.anchors.byId[props.position],\n      }\n    : {};\n};\n\nconst VEE = ({ positionCoords, angle = 0, selected, onMouseDown }) => {\n  if (!positionCoords) {\n    return null;\n  }\n  const { x: xAnchor, y: yAnchor } = positionCoords;\n\n  return (\n    <g\n      onMouseDown={onMouseDown || null}\n      className={`component ${selected ? \"red\" : \"black\"}`}\n    >\n      <g\n        style={{\n          transform: `translate(${xAnchor}px , ${yAnchor}px) rotate(${-angle}deg)`,\n        }}\n      >\n        <path\n          d={`M ${-0.5 * STEP} ${0.8 * STEP}\n                L 0 ${1.5 * STEP}\n                L ${0.5 * STEP} ${0.8 * STEP}`}\n        />\n        <path\n          d={`M 0 0\n                L 0 ${1.5 * STEP}`}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const x = element.positionCoords.x - x0;\n  const y = element.positionCoords.y - y0;\n\n  const { angle } = element;\n\n  rc.path(\n    `M ${rotation(angle, x, y, -0.5 * STEP, 0.8 * STEP)} \n      L ${rotation(angle, x, y, 0, 1.5 * STEP)}\n      L ${rotation(angle, x, y, 0.5 * STEP, 0.8 * STEP)}\n      M ${rotation(angle, x, y, 0, 0)} \n      L ${rotation(angle, x, y, 0, 1.5 * STEP)}`\n  );\n};\n\nexport const drawer = (element) => {\n  return `node[vee${\n    element.angle && element.angle !== 0 ? \" ,rotate=\" + element.angle : \"\"\n  }]{}`;\n};\n\nexport default connect(mapStateToProps)(VEE);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\n\nimport { MULTIPLICATIVE_CONST, R_LEN, rotation } from \"./constantes\";\n\nconst width = 0.2;\n\nconst STEP = width * R_LEN * MULTIPLICATIVE_CONST;\n\nexport const getAnchor = ({ positionCoords }) => {\n  const { x, y } = positionCoords;\n\n  return [\n    {\n      name: \"C\",\n      x: x,\n      y: y,\n    },\n  ];\n};\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        // allows to create components directly without using the store\n        positionCoords: state.anchors.byId[props.position],\n      }\n    : {};\n};\n\nconst VCC = ({ positionCoords, angle = 0, selected, onMouseDown }) => {\n  if (!positionCoords) {\n    return null;\n  }\n  const { x: xAnchor, y: yAnchor } = positionCoords;\n\n  return (\n    <g\n      onMouseDown={onMouseDown || null}\n      className={`component ${selected ? \"red\" : \"black\"}`}\n    >\n      <g\n        style={{\n          transform: `translate(${xAnchor}px , ${yAnchor}px) rotate(${-angle}deg)`,\n        }}\n      >\n        <path\n          d={`M ${-0.5 * STEP} ${-0.8 * STEP}\n                L 0 ${-1.5 * STEP}\n                L ${0.5 * STEP} ${-0.8 * STEP}`}\n        />\n        <path\n          d={`M 0 0\n                L 0 ${-1.5 * STEP}`}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const x = element.positionCoords.x - x0;\n  const y = element.positionCoords.y - y0;\n\n  const { angle } = element;\n\n  rc.path(\n    `M ${rotation(angle, x, y, -0.5 * STEP, -0.8 * STEP)} \n      L ${rotation(angle, x, y, 0, -1.5 * STEP)}\n      L ${rotation(angle, x, y, 0.5 * STEP, -0.8 * STEP)}\n      M ${rotation(angle, x, y, 0, 0)} \n      L ${rotation(angle, x, y, 0, -1.5 * STEP)}`\n  );\n};\n\nexport const drawer = (element) => {\n  return `node[vcc${\n    element.angle && element.angle !== 0 ? \" ,rotate=\" + element.angle : \"\"\n  }]{}`;\n};\n\nexport default connect(mapStateToProps)(VCC);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN, rotation } from \"./constantes\";\nimport {\n  withPathAttributes,\n  getPathAttributes,\n  drawLinks,\n} from \"./hoc/pathComponents\";\nimport { drawRoughCurrant } from \"../atoms/currant\";\n\nconst height = 0.6;\nconst width = 0.2;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nexport const getAnchor = ({ fromCoords, toCoords }) => {\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const angle = Math.atan2(yTo - yFrom, xTo - xFrom);\n\n  const x = (xFrom + xTo) / 2 + 55 * Math.sin(angle);\n  const y = (yFrom + yTo) / 2 - 55 * Math.cos(angle);\n  return [{ name: \"wiper\", x, y }];\n};\n\nconst C = () => (\n  <>\n    <path d={`M  ${-UNIT_X} ${-UNIT_Y} L ${-UNIT_X} ${UNIT_Y}`} />\n    <path d={`M  ${UNIT_X} ${-UNIT_Y} L ${UNIT_X} ${UNIT_Y}`} />\n  </>\n);\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const { x, y, angle, ratio } = drawLinks(\n    rc,\n    ctx,\n    x0,\n    y0,\n    width,\n    height,\n    element\n  );\n\n  drawRoughCurrant(rc, ctx, x0, y0, angle, ratio, element);\n\n  rc.path(\n    `M ${rotation(-angle, x, y, -UNIT_X, UNIT_Y)}\n    L ${rotation(-angle, x, y, -UNIT_X, -UNIT_Y)}\n    M ${rotation(-angle, x, y, UNIT_X, UNIT_Y)}\n    L ${rotation(-angle, x, y, UNIT_X, -UNIT_Y)}\n    `\n  );\n};\n\nexport const drawer = (element) => {\n  return `to[C${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width, height })(C);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN, rotation } from \"./constantes\";\nimport {\n  withPathAttributes,\n  getPathAttributes,\n  drawLinks,\n} from \"./hoc/pathComponents\";\nimport { drawRoughCurrant } from \"../atoms/currant\";\n\nconst height = 0.3;\nconst width = 0.8;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nconst R = () => (\n  <path\n    d={`M ${(-6 / 6) * UNIT_X} 0 L ${(-5 / 6) * UNIT_X} ${-UNIT_Y} L ${\n      (-3 / 6) * UNIT_X\n    } ${UNIT_Y} L ${(-1 / 6) * UNIT_X} ${-UNIT_Y} L ${\n      (1 / 6) * UNIT_X\n    } ${UNIT_Y} L ${(3 / 6) * UNIT_X} ${-UNIT_Y} L ${\n      (5 / 6) * UNIT_X\n    } ${UNIT_Y} L ${(6 / 6) * UNIT_X} 0`}\n  />\n);\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const { x, y, angle, ratio } = drawLinks(\n    rc,\n    ctx,\n    x0,\n    y0,\n    width,\n    height,\n    element\n  );\n\n  drawRoughCurrant(rc, ctx, x0, y0, angle, ratio, element);\n  rc.path(\n    `M ${rotation(-angle, x, y, -UNIT_X, 0)}\n    L ${rotation(-angle, x, y, (-5 / 6) * UNIT_X, -UNIT_Y)} \n    L ${rotation(-angle, x, y, (-3 / 6) * UNIT_X, UNIT_Y)} \n    L ${rotation(-angle, x, y, (-1 / 6) * UNIT_X, -UNIT_Y)} \n    L ${rotation(-angle, x, y, (1 / 6) * UNIT_X, UNIT_Y)} \n    L ${rotation(-angle, x, y, (3 / 6) * UNIT_X, -UNIT_Y)} \n    L ${rotation(-angle, x, y, (5 / 6) * UNIT_X, UNIT_Y)} \n    L ${rotation(-angle, x, y, UNIT_X, 0)}`\n  );\n};\n\nexport const drawer = (element) => {\n  return `to[R${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width, height })(R);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN, rotation } from \"./constantes\";\nimport {\n  withPathAttributes,\n  getPathAttributes,\n  drawLinks,\n} from \"./hoc/pathComponents\";\nimport { drawRoughCurrant } from \"../atoms/currant\";\n\nconst height = 0.6;\nconst width = 0.3 * 0.33;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nconst Battery1 = () => (\n  <>\n    <path d={`M ${-UNIT_X} ${-UNIT_Y} L ${-UNIT_X} ${UNIT_Y}`} />\n    <path d={`M ${UNIT_X} ${-0.5 * UNIT_Y}L ${UNIT_X} ${0.5 * UNIT_Y}`} />\n  </>\n);\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const { x, y, angle, ratio } = drawLinks(\n    rc,\n    ctx,\n    x0,\n    y0,\n    width,\n    height,\n    element\n  );\n\n  drawRoughCurrant(rc, ctx, x0, y0, angle, ratio, element);\n  rc.path(\n    `M ${rotation(-angle, x, y, -UNIT_X, -UNIT_Y)}\n    L ${rotation(-angle, x, y, -UNIT_X, UNIT_Y)}\n    M ${rotation(-angle, x, y, UNIT_X, 0.5 * UNIT_Y)}\n    L ${rotation(-angle, x, y, UNIT_X, -0.5 * UNIT_Y)}\n    `\n  );\n};\n\nexport const drawer = (element) => {\n  return `to[battery1${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width, height })(Battery1);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\nimport {\n  withPathAttributes,\n  getPathAttributes,\n  drawLinks,\n} from \"./hoc/pathComponents\";\nimport { drawRoughCurrant } from \"../atoms/currant\";\n\nconst height = 0.35;\nconst width = 0.35;\n\nconst Arrow = ({ x, y, r, theta1, theta2 }) => {\n  const x1 = x + r * Math.cos((theta1 / 180) * Math.PI);\n  const y1 = y - r * Math.sin((theta1 / 180) * Math.PI);\n\n  const x2 = x + r * Math.cos((theta2 / 180) * Math.PI);\n  const y2 = y - r * Math.sin((theta2 / 180) * Math.PI);\n\n  return (\n    <path\n      d={`M ${x1} ${y1} A ${r} ${r} 0 0 ${\n        theta1 < theta2 ? 0 : 1\n      } ${x2} ${y2} `}\n    />\n  );\n};\n\nconst Switch = ({ isOpen, withArrow }) => {\n  const height = withArrow ? 0.35 : 0.3;\n\n  const UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\n  const UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n  if (withArrow) {\n    return (\n      <>\n        <Arrow\n          x={-UNIT_X}\n          y={0}\n          r={1.2 * UNIT_X}\n          theta1={isOpen ? -10 : 90}\n          theta2={isOpen ? 90 : -20}\n        />\n        <path d={`M ${-UNIT_X} 0 L ${0.6 * UNIT_X} ${-UNIT_Y}`} />\n      </>\n    );\n  }\n\n  return (\n    <path\n      d={`M ${-UNIT_X} 0 L ${0.9 * UNIT_X} ${-UNIT_Y} M ${UNIT_X} 0 L ${\n        0.2 * UNIT_X\n      } 0 L ${0.2 * UNIT_X} ${-UNIT_Y}`}\n    />\n  );\n};\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const { x, y, angle, ratio } = drawLinks(\n    rc,\n    ctx,\n    x0,\n    y0,\n    width,\n    height,\n    element\n  );\n\n  drawRoughCurrant(rc, ctx, x0, y0, angle, ratio, element);\n\n  // rc.path(\n  //   `M ${rotation(-angle, x, y, UNIT_X, 0)}\n  //   L ${rotation(-angle, x, y, -UNIT_X, -UNIT_Y)}\n  //   L ${rotation(-angle, x, y, -UNIT_X, UNIT_Y)}\n  //   Z\n  //   M ${rotation(-angle, x, y, UNIT_X, UNIT_Y)}\n  //   L ${rotation(-angle, x, y, UNIT_X, -UNIT_Y)}\n  //   `\n  // );\n};\n\nexport const drawer = (element) => {\n  const { isOpen, withArrow } = element;\n  if (withArrow) {\n    return `to[${isOpen ? \"opening \" : \"\"}switch${getPathAttributes(\n      element\n    )}] `;\n  }\n  return `to[normal ${isOpen ? \"open\" : \"closed\"} switch${getPathAttributes(\n    element\n  )}] `;\n};\n\nexport default withPathAttributes({ width, height })(Switch);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport CurrantArrow from \"../atoms/currant\";\nimport Label from \"../atoms/label\";\n\nimport { drawRoughCurrant } from \"../atoms/currant\";\nimport { getPathAttributes } from \"./hoc/pathComponents\";\n\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nconst Short = ({\n  fromCoords,\n  toCoords,\n  selected,\n  onMouseDown,\n  currant,\n  label,\n  annotation,\n}) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const d = Math.sqrt((xFrom - xTo) ** 2 + (yFrom - yTo) ** 2);\n  const ratio = 1; // ratio of the line use by connection\n  const angle = parseInt(\n    (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n  );\n\n  return (\n    <g\n      onMouseDown={onMouseDown || null}\n      className={`component ${selected ? \"red\" : \"black\"}`}\n    >\n      <path d={`M ${xFrom} ${yFrom} L ${xTo} ${yTo}`} />\n\n      {currant && currant.show && (\n        <CurrantArrow\n          fromCoords={fromCoords}\n          toCoords={toCoords}\n          ratio={1}\n          angle={angle}\n          {...currant}\n        />\n      )}\n      {label && (\n        <Label\n          fromCoords={fromCoords}\n          toCoords={toCoords}\n          height={0}\n          angle={angle}\n          text={label}\n        />\n      )}\n      {annotation && (\n        <Label\n          fromCoords={fromCoords}\n          toCoords={toCoords}\n          height={0}\n          angle={angle}\n          text={annotation}\n          isAbove={false}\n        />\n      )}\n    </g>\n  );\n};\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const xFrom = element.fromCoords.x - x0;\n  const yFrom = element.fromCoords.y - y0;\n\n  const xTo = element.toCoords.x - x0;\n  const yTo = element.toCoords.y - y0;\n\n  rc.path(`M ${xFrom} ${yFrom} L ${xTo} ${yTo}`);\n\n  const angle = parseInt(\n    (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n  );\n\n  drawRoughCurrant(rc, ctx, x0, y0, angle, 1, element);\n};\n\nexport const drawer = (element) => {\n  return `to[short${getPathAttributes(element)}] `;\n};\n\nexport default connect(mapStateToProps)(Short);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\n\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nconst RightUp = ({ fromCoords, toCoords, selected, onMouseDown }) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  return (\n    <g\n      onMouseDown={onMouseDown || null}\n      className={`component ${selected ? \"red\" : \"black\"}`}\n    >\n      <path d={`M ${xFrom} ${yFrom} L ${xTo} ${yFrom}L ${xTo} ${yTo}`} />\n    </g>\n  );\n};\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const xFrom = element.fromCoords.x - x0;\n  const yFrom = element.fromCoords.y - y0;\n\n  const xTo = element.toCoords.x - x0;\n  const yTo = element.toCoords.y - y0;\n\n  rc.path(`M ${xFrom} ${yFrom} L ${xTo} ${yFrom} L ${xTo} ${yTo}`);\n};\n\nexport const drawer = () => {\n  return `-| `;\n};\n\nexport default connect(mapStateToProps)(RightUp);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\n\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nexport const roughComponent = (rc, ctx, x0, y0, element) => {\n  const xFrom = element.fromCoords.x - x0;\n  const yFrom = element.fromCoords.y - y0;\n\n  const xTo = element.toCoords.x - x0;\n  const yTo = element.toCoords.y - y0;\n\n  rc.path(`M ${xFrom} ${yFrom} L ${xFrom} ${yTo}L ${xTo} ${yTo}`);\n};\n\nconst UpRight = ({ fromCoords, toCoords, selected, onMouseDown }) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  return (\n    <g\n      onMouseDown={onMouseDown || null}\n      className={`component ${selected ? \"red\" : \"black\"}`}\n    >\n      <path d={`M ${xFrom} ${yFrom} L ${xFrom} ${yTo}L ${xTo} ${yTo}`} />\n    </g>\n  );\n};\n\nexport const drawer = () => {\n  return `|- `;\n};\n\nexport default connect(mapStateToProps)(UpRight);\n","import React from \"react\";\nimport Lampe, {\n  drawer as lampeDrawer,\n  roughComponent as lampeRoughComponent,\n} from \"./Lampe\";\nimport EmptyDiode, {\n  drawer as emptyDiodeDrawer,\n  roughComponent as emptyDiodeRoughComponent,\n} from \"./empty_diode\";\nimport PR, {\n  getAnchor as pR_getAnchor,\n  drawer as pRDrawer,\n  roughComponent as pRRoughComponent,\n} from \"./pR\";\nimport Vcapacitor, {\n  drawer as vcapacitorDrawer,\n  roughComponent as vcapacitorRoughComponent,\n} from \"./vcapacitor\";\nimport NMOS, {\n  getAnchor as nmos_getAnchor,\n  drawer as nmosDrawer,\n  roughComponent as nmosRoughComponent,\n} from \"./nmos\";\nimport VEE, {\n  getAnchor as vee_getAnchor,\n  drawer as veeDrawer,\n  roughComponent as veeRoughComponent,\n} from \"./vee\";\nimport VCC, {\n  getAnchor as vcc_getAnchor,\n  drawer as vccDrawer,\n  roughComponent as vccRoughComponent,\n} from \"./vcc\";\nimport C, { drawer as cDrawer, roughComponent as cRoughComponent } from \"./C\";\nimport R, { drawer as rDrawer, roughComponent as rRoughComponent } from \"./R\";\nimport Battery1, {\n  drawer as battery1Drawer,\n  roughComponent as battery1RoughComponent,\n} from \"./battery1\";\nimport Switch, {\n  drawer as switchDrawer,\n  roughComponent as switchRoughComponent,\n} from \"./switch\";\n\nimport Short, {\n  drawer as shortDrawer,\n  roughComponent as shortRoughComponent,\n} from \"./short\";\nimport RightUp, {\n  drawer as rightUpDrawer,\n  roughComponent as rightUpRoughComponent,\n} from \"./rightUp\";\nimport UpRight, {\n  drawer as upRightDrawer,\n  roughComponent as upRightRoughComponent,\n} from \"./upRight\";\n\nconst getAnchors = {\n  pR: (props) => pR_getAnchor(props),\n  nmos: (props) => nmos_getAnchor(props),\n  vee: (props) => vee_getAnchor(props),\n  vcc: (props) => vcc_getAnchor(props),\n};\n\nconst getDrawer = {\n  short: shortDrawer,\n  rightUp: rightUpDrawer,\n  upRight: upRightDrawer,\n  lampe: lampeDrawer,\n  \"empty led\": emptyDiodeDrawer,\n  pR: pRDrawer,\n  nmos: nmosDrawer,\n  vee: veeDrawer,\n  vcc: vccDrawer,\n  vcapacitor: vcapacitorDrawer,\n  C: cDrawer,\n  R: rDrawer,\n  battery1: battery1Drawer,\n  switch: switchDrawer,\n};\n\nconst getRoughComponents = {\n  short: shortRoughComponent,\n  rightUp: rightUpRoughComponent,\n  upRight: upRightRoughComponent,\n  lampe: lampeRoughComponent,\n  \"empty led\": emptyDiodeRoughComponent,\n  pR: pRRoughComponent,\n  nmos: nmosRoughComponent,\n  vee: veeRoughComponent,\n  vcc: vccRoughComponent,\n  vcapacitor: vcapacitorRoughComponent,\n  C: cRoughComponent,\n  R: rRoughComponent,\n  battery1: battery1RoughComponent,\n  switch: switchRoughComponent,\n};\n\nexport const roughComponents = (rc, ctx, x0, y0, element) =>\n  getRoughComponents[element.type](rc, ctx, x0, y0, element);\n\nexport const getElementAnchors = (element) => {\n  return getAnchors[element.type] ? getAnchors[element.type](element) : [];\n};\n\nexport const drawElement = (element, position1, position2) => {\n  return getDrawer[element.type](element, position1, position2);\n};\n\nexport const isPath = {\n  short: true,\n  rightUp: true,\n  upRight: true,\n  lampe: true,\n  \"empty led\": true,\n  pR: true,\n  nmos: false,\n  vee: false,\n  vcc: false,\n  vcapacitor: true,\n  C: true,\n  R: true,\n  battery1: true,\n  switch: true,\n};\n\nexport const isMultyPole = {\n  short: false,\n  rightUp: false,\n  upRight: false,\n  lampe: false,\n  \"empty led\": false,\n  pR: false,\n  nmos: true,\n  vee: false,\n  vcc: false,\n  vcapacitor: false,\n  C: false,\n  R: false,\n  battery1: false,\n  switch: false,\n};\n\nconst components = {\n  short: (props) => <Short key={props.id} {...props} />,\n  rightUp: (props) => <RightUp key={props.id} {...props} />,\n  upRight: (props) => <UpRight key={props.id} {...props} />,\n  lampe: (props) => <Lampe key={props.id} {...props} />,\n  \"empty led\": (props) => <EmptyDiode key={props.id} {...props} />,\n  pR: (props) => <PR key={props.id} {...props} />,\n  nmos: (props) => <NMOS key={props.id} {...props} />,\n  vee: (props) => <VEE key={props.id} {...props} />,\n  vcc: (props) => <VCC key={props.id} {...props} />,\n  vcapacitor: (props) => <Vcapacitor key={props.id} {...props} />,\n  C: (props) => <C key={props.id} {...props} />,\n  R: (props) => <R key={props.id} {...props} />,\n  battery1: (props) => <Battery1 key={props.id} {...props} />,\n  switch: (props) => <Switch key={props.id} {...props} />,\n};\n\nexport const structure = {\n  bipoles: [\n    \"lampe\",\n    \"R\",\n    \"C\",\n    \"switch\",\n    \"battery1\",\n    \"empty led\",\n    \"vcapacitor\",\n    \"pR\",\n  ],\n  sources: [],\n  references: [\"vee\", \"vcc\"],\n  transistors: [\"nmos\"],\n};\n\nexport default components;\n","import { getElementAnchors, isPath } from \"../../components\";\n\nexport const getAdhesivePoints = (elementType) => {\n  const adhesivePoints = [];\n  if (isPath[elementType]) {\n    adhesivePoints.push({\n      type: \"ANCHOR\",\n      id: null,\n      dx: 0,\n      dy: 0,\n    });\n  }\n\n  const elementAnchors = getElementAnchors({\n    type: elementType,\n    fromCoords: { x: 0, y: 0 },\n    toCoords: { x: 0, y: 0 },\n    positionCoords: { x: 0, y: 0 },\n  });\n\n  elementAnchors.forEach(({ x, y, name }) => {\n    adhesivePoints.push({\n      type: isPath[elementType] ? \"PATH\" : \"NODE\", // TODO use constant file\n      name: name,\n      id: null,\n      dx: -x,\n      dy: -y,\n    });\n  });\n\n  return adhesivePoints;\n};\n\nexport const componentUseThisAnchor = (element, anchorId) => {\n  if (element.from && element.from === anchorId) {\n    return true;\n  }\n  if (element.to && element.to === anchorId) {\n    return true;\n  }\n  if (element.position && element.position === anchorId) {\n    return true;\n  }\n  return false;\n};\n\nexport const replaceComponentAnchor = (\n  element,\n  previousAnchorId,\n  newAnchorId\n) => {\n  const newElement = { ...element };\n  if (element.from && element.from === previousAnchorId) {\n    newElement.from = newAnchorId;\n  }\n  if (element.to && element.to === previousAnchorId) {\n    newElement.to = newAnchorId;\n  }\n  if (element.position && element.position === previousAnchorId) {\n    newElement.position = newAnchorId;\n  }\n  return { ...newElement };\n};\n\nexport const isInRectangle = ({ x, y }, { x0, y0, x1, y1 }) => {\n  return (\n    Math.abs(x - x0) + Math.abs(x - x1) <= Math.abs(x1 - x0) &&\n    Math.abs(y - y0) + Math.abs(y - y1) <= Math.abs(y1 - y0)\n  );\n};\n\nexport const isAnchor = (state, id) =>\n  id !== null && state.anchors.allIds.includes(id);\n","import { getElementAnchors } from \"../../components\";\n\nimport { replaceComponentAnchor } from \"./utils\";\n\nimport { MODE_DRAG, MODE_SELECT } from \"./interactionModes\";\n\nexport const startDragging = (state, action) => {\n  const anchorsToMove = [];\n  const adhesivePoints = [];\n\n  state.selection.forEach((selectedId) => {\n    if (state.anchors.allIds.includes(selectedId)) {\n      if (adhesivePoints.findIndex((elem) => elem.id === selectedId) === -1) {\n        adhesivePoints.push({\n          type: \"ANCHOR\",\n          id: selectedId,\n          dx: action.x - state.anchors.byId[selectedId].x,\n          dy: action.y - state.anchors.byId[selectedId].y,\n        });\n      }\n    } else if (state.pathComponents.allIds.includes(selectedId)) {\n      const anchors = getElementAnchors({\n        ...state.pathComponents.byId[selectedId],\n        fromCoords:\n          state.pathComponents.byId[selectedId].from &&\n          state.anchors.byId[state.pathComponents.byId[selectedId].from],\n        toCoords:\n          state.pathComponents.byId[selectedId].to &&\n          state.anchors.byId[state.pathComponents.byId[selectedId].to],\n        positionCoords:\n          state.pathComponents.byId[selectedId].position &&\n          state.anchors.byId[state.pathComponents.byId[selectedId].position],\n      });\n\n      anchors.forEach(({ x, y, name }) => {\n        adhesivePoints.push({\n          type: state.pathComponents.byId[selectedId].position\n            ? \"NODE\"\n            : \"PATH\", // TODO use constant file\n          name: name,\n          id: selectedId,\n          dx: action.x - x,\n          dy: action.y - y,\n        });\n      });\n      if (\n        state.pathComponents.byId[selectedId].from &&\n        adhesivePoints.findIndex(\n          (elem) => elem.id === state.pathComponents.byId[selectedId].from\n        ) === -1\n      ) {\n        //the from anchor is new\n        const fromId = state.pathComponents.byId[selectedId].from;\n        adhesivePoints.push({\n          type: \"ANCHOR\", // TODO use constant file\n          id: fromId,\n          dx: action.x - state.anchors.byId[fromId].x,\n          dy: action.y - state.anchors.byId[fromId].y,\n        });\n      }\n      if (\n        state.pathComponents.byId[selectedId].to &&\n        adhesivePoints.findIndex(\n          (elem) => elem.id === state.pathComponents.byId[selectedId].to\n        ) === -1\n      ) {\n        //the to anchor is new\n        const toId = state.pathComponents.byId[selectedId].to;\n        adhesivePoints.push({\n          type: \"ANCHOR\",\n          id: toId,\n          dx: action.x - state.anchors.byId[toId].x,\n          dy: action.y - state.anchors.byId[toId].y,\n        });\n      }\n    }\n  });\n\n  const pile = [...state.selection];\n  const nodeSeen = [];\n  while (pile.length > 0) {\n    const selectedId = pile.pop();\n    if (state.pathComponents.allIds.includes(selectedId)) {\n      if (\n        state.pathComponents.byId[selectedId].from &&\n        !anchorsToMove.includes(state.pathComponents.byId[selectedId].from)\n      ) {\n        anchorsToMove.push(state.pathComponents.byId[selectedId].from);\n      }\n      if (\n        state.pathComponents.byId[selectedId].to &&\n        !anchorsToMove.includes(state.pathComponents.byId[selectedId].to)\n      ) {\n        anchorsToMove.push(state.pathComponents.byId[selectedId].to);\n      }\n      if (state.pathComponents.byId[selectedId].position) {\n        if (\n          !anchorsToMove.includes(\n            state.pathComponents.byId[selectedId].position\n          )\n        ) {\n          pile.push(state.pathComponents.byId[selectedId].position);\n        }\n        if (!nodeSeen.includes(selectedId)) {\n          nodeSeen.push(selectedId);\n          state.weakLinks.forEach(({ anchorId, nodeId }) => {\n            if (nodeId === selectedId && !anchorsToMove.includes(anchorId)) {\n              pile.push(anchorId);\n            }\n          });\n        }\n      }\n    } else {\n      if (!anchorsToMove.includes(selectedId)) {\n        anchorsToMove.push(selectedId);\n\n        if (state.anchors.byId[selectedId].isNodePosition) {\n          pile.push(state.anchors.byId[selectedId].nodeId);\n        }\n      }\n    }\n  }\n\n  return {\n    ...state,\n    mode: MODE_DRAG,\n    anchorsToMove: [...anchorsToMove],\n    adhesivePoints: [...adhesivePoints],\n    originalPosition: { x: action.x, y: action.y },\n    alreadyMoved: { x: 0, y: 0 },\n    weakLinksToRemove: [\n      ...state.weakLinks\n        .filter(\n          ({ anchorId, nodeId }) =>\n            anchorsToMove.includes(anchorId) &&\n            !anchorsToMove.includes(state.pathComponents.byId[nodeId].position)\n        )\n        .map(({ anchorId, nodeId }) => anchorId + \"-\" + nodeId),\n    ],\n  };\n};\n\nexport const stopDragging = (state, action) => {\n  if (\n    state.currentMagnet.attractor &&\n    state.currentMagnet.attracted &&\n    state.currentMagnet.attracted.type === \"ANCHOR\" &&\n    state.currentMagnet.attractor.type === \"ANCHOR\"\n  ) {\n    // we need to fusion those anchors\n    const anchorToRemoveID = state.currentMagnet.attracted.id;\n    const anchorToUseId = state.currentMagnet.attractor.id;\n\n    // remove anchor\n    const anchorToRemoveIDIndex = state.anchors.allIds.findIndex(\n      (id) => id === anchorToRemoveID\n    );\n    const {\n      [anchorToRemoveID]: anchorToRemove,\n      ...remainingAnchors\n    } = state.anchors.byId;\n\n    //const update elements\n    const newByIDElements = {};\n    state.pathComponents.allIds.forEach((id) => {\n      newByIDElements[id] = replaceComponentAnchor(\n        state.pathComponents.byId[id],\n        anchorToRemoveID,\n        anchorToUseId\n      );\n    });\n\n    return {\n      ...state,\n      anchors: {\n        byId: { ...remainingAnchors },\n        allIds: [\n          ...state.anchors.allIds.slice(0, anchorToRemoveIDIndex),\n          ...state.anchors.allIds.slice(anchorToRemoveIDIndex + 1),\n        ],\n      },\n      pathComponents: {\n        ...state.pathComponents,\n        byId: { ...newByIDElements },\n      },\n      mode: MODE_SELECT,\n      anchorsToMove: [],\n      originalPosition: {},\n      alreadyMoved: {},\n      weakLinksToRemove: [],\n      weakLinks: [\n        ...state.weakLinks.filter(\n          ({ anchorId, nodeId }) =>\n            !state.weakLinksToRemove.includes(anchorId + \"-\" + nodeId)\n        ),\n      ],\n    };\n  }\n\n  if (\n    state.currentMagnet.attractor &&\n    state.currentMagnet.attracted &&\n    state.currentMagnet.attracted.type !== \"PATH\" &&\n    state.currentMagnet.attractor.type !== \"PATH\"\n  ) {\n    const newWeakLink = [];\n\n    if (\n      state.currentMagnet.attracted.type === \"NODE\" &&\n      state.currentMagnet.attractor.type === \"NODE\"\n    ) {\n      newWeakLink.push({\n        anchorId:\n          state.pathComponents.byId[state.currentMagnet.attracted.id].position,\n        nodeId: state.currentMagnet.attractor.id,\n        name: state.currentMagnet.attractor.name,\n        nameAnchor: state.currentMagnet.attracted.name,\n      });\n    } else {\n      const nodeId =\n        state.currentMagnet.attracted.type === \"NODE\"\n          ? state.currentMagnet.attracted.id\n          : state.currentMagnet.attractor.id;\n      const anchorId =\n        state.currentMagnet.attracted.type === \"ANCHOR\"\n          ? state.currentMagnet.attracted.id\n          : state.currentMagnet.attractor.id;\n      const name =\n        state.currentMagnet.attracted.type === \"NODE\"\n          ? state.currentMagnet.attracted.name\n          : state.currentMagnet.attractor.name;\n\n      newWeakLink.push({\n        anchorId: anchorId,\n        nodeId: nodeId,\n        name: name,\n      });\n    }\n    return {\n      ...state,\n      mode: MODE_SELECT,\n      anchorsToMove: [],\n      originalPosition: {},\n      alreadyMoved: {},\n      weakLinksToRemove: [],\n      weakLinks: [\n        ...state.weakLinks.filter(\n          ({ anchorId, nodeId }) =>\n            !state.weakLinksToRemove.includes(anchorId + \"-\" + nodeId)\n        ),\n        ...newWeakLink,\n      ],\n    };\n  }\n\n  return {\n    ...state,\n    mode: MODE_SELECT,\n    anchorsToMove: [],\n    originalPosition: {},\n    alreadyMoved: {},\n\n    weakLinksToRemove: [],\n\n    weakLinks: [\n      ...state.weakLinks.filter(\n        ({ anchorId, nodeId }) =>\n          !state.weakLinksToRemove.includes(anchorId + \"-\" + nodeId)\n      ),\n    ],\n  };\n};\n\nexport const updatePosition = (state, action) => {\n  const { x, y, shiftPress } = action;\n  const { x: originalX, y: originalY } = state.originalPosition;\n\n  let newMoveX, newMoveY;\n  // if shift is pressed only allow to move along x or y axis\n  if (shiftPress) {\n    if (Math.abs(x - originalX) > Math.abs(y - originalY)) {\n      newMoveX = x - originalX;\n      newMoveY = 0;\n    } else {\n      newMoveX = 0;\n      newMoveY = y - originalY;\n    }\n  } else {\n    newMoveX = x - originalX;\n    newMoveY = y - originalY;\n  }\n\n  const anchorById = state.anchors.byId;\n  state.anchorsToMove.forEach((anchorId) => {\n    anchorById[anchorId] = {\n      ...anchorById[anchorId],\n      x: anchorById[anchorId].x + newMoveX - state.alreadyMoved.x,\n      y: anchorById[anchorId].y + newMoveY - state.alreadyMoved.y,\n    };\n  });\n\n  return {\n    ...state,\n    anchors: {\n      ...state.anchors,\n      byId: { ...anchorById },\n    },\n    alreadyMoved: {\n      x: newMoveX,\n      y: newMoveY,\n    },\n  };\n};\n","import { componentUseThisAnchor } from \"./utils\";\n\nconst deleteElement = (state, action) => {\n  const selection = action.selection;\n  if (\n    selection.length === 1 &&\n    state.pathComponents.allIds.includes(selection[0])\n  ) {\n    // we only consider the deletion of a component (not anchors)\n    const componentId = selection[0];\n\n    const anchorToChange = [\"from\", \"to\", \"position\"]\n      .map((arg) => state.pathComponents.byId[componentId][arg])\n      .filter((id) => !!id);\n\n    // get the list of of ids of anchors that are not anymore used by components\n    const anchorToRemove = anchorToChange.filter((anchorId) => {\n      return (\n        state.pathComponents.allIds.filter((elementId) =>\n          componentUseThisAnchor(state.pathComponents.byId[elementId], anchorId)\n        ).length === 1\n      );\n    });\n\n    const newAnchors = { ...state.anchors.byId };\n    anchorToRemove.forEach((id) => delete newAnchors[id]);\n\n    const newComponents = { ...state.pathComponents.byId };\n    delete newComponents[componentId];\n    return {\n      ...state,\n      pathComponents: {\n        allIds: [\n          ...state.pathComponents.allIds.filter((id) => id !== componentId),\n        ],\n        byId: { ...newComponents },\n      },\n      anchors: {\n        byId: { ...newAnchors },\n        allIds: [\n          ...state.anchors.allIds.filter((id) => !anchorToRemove.includes(id)),\n        ],\n      },\n      weakLinks: [\n        ...state.weakLinks.filter(\n          ({ anchorId, nodeId, name }) =>\n            nodeId !== componentId && !anchorToRemove.includes(anchorId)\n        ),\n      ],\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default deleteElement;\n","import { getAdhesivePoints, isAnchor } from \"./utils\";\nimport { defaultCurrant } from \"./debugInitialState\";\nimport { MODE_CREATE_PATH_ELEMENT } from \"./interactionModes\";\n\nimport { v4 as uuid } from \"uuid\";\n\nexport const startCreatePathElement = (state, action) => {\n  return {\n    ...state,\n    selection: [],\n    adhesivePoints: [...getAdhesivePoints(action.elementType)],\n    mode: MODE_CREATE_PATH_ELEMENT,\n    newPath: {\n      ...state.newPath,\n      elementType: action.elementType,\n      isFromValidated: false,\n    },\n  };\n};\n\nexport const validateFirstStepPathElement = (state, action) => {\n  return {\n    ...state,\n    newPath: {\n      ...state.newPath,\n      attractorFrom: state.currentMagnet.attractor && {\n        ...state.currentMagnet.attractor,\n      },\n      to: { x: null, y: null },\n      attractorTo: null,\n      isFromValidated: true,\n      movedAfterFromCreation: false,\n    },\n  };\n};\n\nexport const invalidateFirstStepPathElement = (state, action) => {\n  if (state.newPath.movedAfterFromCreation && state.newPath.isFromValidated) {\n    return {\n      ...state,\n      newPath: {\n        ...state.newPath,\n        from: { ...state.newPath.to },\n        attractorFrom: state.newPath.attractorTo && {\n          ...state.newPath.attractorTo,\n        },\n        to: { x: null, y: null },\n        attractorTo: null,\n        isFromValidated: false,\n      },\n    };\n  } else {\n    return state;\n  }\n};\n\nexport const savePathElement = (state, action) => {\n  const attractorTo = state.currentMagnet.attractor && {\n    ...state.currentMagnet.attractor,\n  };\n  const { attractorFrom, from, to, elementType } = state.newPath;\n\n  const newId_element = uuid();\n\n  const fromAnchor =\n    attractorFrom && attractorFrom.type === \"ANCHOR\"\n      ? attractorFrom.id\n      : uuid();\n  const toAnchor =\n    attractorTo && attractorTo.type === \"ANCHOR\" ? attractorTo.id : uuid();\n\n  // create anchors if necessary\n  let newAnchors = { ...state.anchors };\n  if (!attractorFrom || attractorFrom.type !== \"ANCHOR\") {\n    newAnchors = {\n      byId: {\n        ...newAnchors.byId,\n        [fromAnchor]: {\n          id: fromAnchor,\n          x: from.x,\n          y: from.y,\n        },\n      },\n      allIds: [...newAnchors.allIds, fromAnchor],\n    };\n  }\n  if (!attractorTo || attractorTo.type !== \"ANCHOR\") {\n    newAnchors = {\n      byId: {\n        ...newAnchors.byId,\n        [toAnchor]: {\n          id: toAnchor,\n          x: to.x,\n          y: to.y,\n        },\n      },\n      allIds: [...newAnchors.allIds, toAnchor],\n    };\n  }\n\n  // create weak links if necessary\n  const newWeakLinks = [];\n  if (attractorFrom && attractorFrom.type === \"NODE\") {\n    newWeakLinks.push({\n      anchorId: fromAnchor,\n      nodeId: attractorFrom.id,\n      name: attractorFrom.name,\n    });\n  }\n  if (attractorTo && attractorTo.type === \"NODE\") {\n    newWeakLinks.push({\n      anchorId: toAnchor,\n      nodeId: attractorTo.id,\n      name: attractorTo.name,\n    });\n  }\n\n  return {\n    ...state,\n    currentMagnet: {\n      ...state.currentMagnet,\n      attractor: {\n        type: \"ANCHOR\",\n        id: toAnchor,\n      },\n    },\n    newPath: {\n      ...state.newPath,\n      isFromValidated: false,\n      from: {\n        ...to,\n      },\n      to: {\n        x: null,\n        y: null,\n      },\n    },\n    pathComponents: {\n      byId: {\n        ...state.pathComponents.byId,\n        [newId_element]: {\n          id: newId_element,\n          from: fromAnchor,\n          to: toAnchor,\n          type: elementType,\n          currant: defaultCurrant,\n          label: \"\",\n          annotation: \"\",\n          mirror: false,\n          invert: false,\n        },\n      },\n      allIds: [...state.pathComponents.allIds, newId_element],\n    },\n    anchors: { ...newAnchors },\n    weakLinks: [...state.weakLinks, ...newWeakLinks],\n  };\n};\n\nexport const updatePosition = (state, action) => {\n  const { x, y, shiftPress } = action;\n\n  if (state.newPath.isFromValidated) {\n    if (shiftPress) {\n      const { x: xFrom, y: yFrom } = state.newPath.from;\n      if (Math.abs(x - xFrom) > Math.abs(y - yFrom)) {\n        return {\n          ...state,\n          newPath: {\n            ...state.newPath,\n            to: { x: x, y: yFrom },\n            movedAfterFromCreation: true,\n          },\n        };\n      } else {\n        return {\n          ...state,\n          newPath: {\n            ...state.newPath,\n            to: { x: xFrom, y: y },\n            movedAfterFromCreation: true,\n          },\n        };\n      }\n    }\n    return {\n      ...state,\n      newPath: {\n        ...state.newPath,\n        to: { x: x, y: y },\n        movedAfterFromCreation: true,\n      },\n    };\n  } else {\n    return {\n      ...state,\n      newPath: {\n        ...state.newPath,\n        from: { x: x, y: y },\n      },\n    };\n  }\n};\n","import { isInRectangle } from \"./utils\";\n\nimport { MODE_SELECT, MODE_RECTANGLE_SELECTION } from \"./interactionModes\";\n\nexport const updatePosition = (state, action) => {\n  const { x, y } = action;\n  const newRectangle = {\n    ...state.rectangleSelection,\n    x1: x,\n    y1: y,\n  };\n\n  return {\n    ...state,\n    selection: [\n      ...state.anchors.allIds.filter((id) =>\n        isInRectangle(state.anchors.byId[id], newRectangle)\n      ),\n    ],\n    rectangleSelection: {\n      ...state.rectangleSelection,\n      x1: x,\n      y1: y,\n    },\n  };\n};\n\nexport const stopRectangleSelection = (state, action) => {\n  // add equality verification, if rectangle has no area it's probably a single click\n  // so we reset the selection\n  return {\n    ...state,\n    mode: MODE_SELECT,\n    rectangleSelection: {},\n    selection:\n      state.rectangleSelection.x0 === state.rectangleSelection.x1 ||\n      state.rectangleSelection.y0 === state.rectangleSelection.y1\n        ? []\n        : [...state.selection],\n  };\n};\n\nexport const startRectangleSelection = (state, action) => {\n  return {\n    ...state,\n    mode: MODE_RECTANGLE_SELECTION,\n    rectangleSelection: {\n      x0: action.x,\n      y0: action.y,\n      x1: action.x,\n      y1: action.y,\n    },\n  };\n};\n","import { MODE_CREATE_NODE_ELEMENT } from \"./interactionModes\";\n\nimport { getAdhesivePoints } from \"./utils\";\nimport { getElementAnchors, isMultyPole } from \"../../components\";\n\nimport { v4 as uuid } from \"uuid\";\n\nexport const updatePosition = (state, action) => {\n  const { x, y } = action;\n  return {\n    ...state,\n    newNode: {\n      ...state.newNode,\n      position: { x: x, y: y },\n    },\n  };\n};\n\nexport const startNodeCreation = (state, action) => {\n  return {\n    ...state,\n    selection: [],\n    adhesivePoints: [...getAdhesivePoints(action.elementType)],\n    mode: MODE_CREATE_NODE_ELEMENT,\n    newNode: {\n      elementType: action.elementType,\n      position: { x: null, y: null },\n    },\n  };\n};\n\nexport const saveNodeCreation = (state, action) => {\n  if (\n    state.mode === MODE_CREATE_NODE_ELEMENT &&\n    state.newNode.position.x !== null &&\n    state.newNode.position.y !== null\n  ) {\n    const newId_element = uuid();\n    const positionId = uuid();\n\n    const newWeakLink = [];\n\n    if (state.currentMagnet.attractor && state.currentMagnet.attracted) {\n      // node created relatively to an anchor\n      // We will link this anchor to the new node\n      if (state.currentMagnet.attractor.type === \"ANCHOR\") {\n        newWeakLink.push({\n          anchorId: state.currentMagnet.attractor.id,\n          nodeId: newId_element,\n          name: state.currentMagnet.attracted.name,\n        });\n      }\n      if (state.currentMagnet.attractor.type === \"NODE\") {\n        newWeakLink.push({\n          anchorId: positionId,\n          nodeId: state.currentMagnet.attractor.id,\n          name: state.currentMagnet.attractor.name,\n          nameAnchor: state.currentMagnet.attracted.name,\n        });\n      }\n    }\n\n    return {\n      ...state,\n      newNode: {\n        ...state.newNode,\n        position: { x: null, y: null },\n      },\n      pathComponents: {\n        byId: {\n          ...state.pathComponents.byId,\n          [newId_element]: {\n            id: newId_element,\n            position: positionId,\n            type: state.newNode.elementType,\n            angle: 0,\n          },\n        },\n        allIds: [...state.pathComponents.allIds, newId_element],\n      },\n      anchors: {\n        ...state.anchors,\n        byId: {\n          ...state.anchors.byId,\n          [positionId]: {\n            id: positionId,\n            x: state.newNode.position.x,\n            y: state.newNode.position.y,\n            isNodePosition: true,\n            nodeId: newId_element,\n          },\n        },\n      },\n      weakLinks: [...state.weakLinks, ...newWeakLink],\n    };\n  }\n  return state;\n};\n\nconst newPositions = (anchors, toUpdate, deltaToAdd) => {\n  const newAnchors = { ...anchors };\n\n  toUpdate.forEach(({ anchorId, anchorName }) => {\n    newAnchors[anchorId] = {\n      ...newAnchors[anchorId],\n      x: newAnchors[anchorId].x + deltaToAdd[anchorName].dx,\n      y: newAnchors[anchorId].y + deltaToAdd[anchorName].dy,\n    };\n  });\n\n  return { ...newAnchors };\n};\n\nexport const rotateNode = (state, { id, value }) => {\n  // we prepare data for the update\n  // first we get coordinate of anchors before and after rotation\n  const element = state.pathComponents.byId[id];\n\n  const positionCoords = state.anchors.byId[element.position];\n  const prevAngle = element.angle;\n  const newAngle = value;\n\n  const prevAnchors = getElementAnchors({\n    ...element,\n    positionCoords: positionCoords,\n    angle: prevAngle,\n  });\n  const newAnchors = getElementAnchors({\n    ...element,\n    positionCoords: positionCoords,\n    angle: newAngle,\n  });\n\n  // Now we create a dictionary that for an anchor name return dx and dy the delta modification of the anchor\n  const deltaToAdd = {};\n  newAnchors.forEach(({ name, x, y }) => {\n    deltaToAdd[name] = { dx: x, dy: y };\n  });\n  prevAnchors.forEach(({ name, x, y }) => {\n    deltaToAdd[name].dx -= x;\n    deltaToAdd[name].dy -= y;\n  });\n\n  if (\n    state.rotationHelper &&\n    state.rotationHelper.id &&\n    state.rotationHelper.id === id\n  ) {\n    // the id is the same as before So we just need to do the update of coordinates\n\n    return {\n      ...state,\n      anchors: {\n        ...state.anchors,\n        byId: {\n          ...newPositions(\n            state.anchors.byId,\n            state.rotationHelper.IdToUpdate,\n            deltaToAdd\n          ),\n        },\n      },\n      pathComponents: {\n        ...state.pathComponents,\n        byId: {\n          ...state.pathComponents.byId,\n          [id]: {\n            ...state.pathComponents.byId[id],\n            angle: newAngle,\n          },\n        },\n      },\n    };\n  } else {\n    const IdToUpdate = [];\n    const toRemove = [];\n\n    // we will parse weakLinks to know what to update and what to remove\n    state.weakLinks.forEach(({ anchorId, nodeId, name, nameAnchor }, index) => {\n      if (\n        anchorId === element.position &&\n        !(deltaToAdd[nameAnchor].x === 0 && deltaToAdd[nameAnchor].y === 0)\n      ) {\n        // the element has a parent and it's anchor need to move\n        // TODO : here is a lazy soution : breking the link\n        toRemove.push(index);\n      }\n      if (nodeId === id) {\n        if (\n          !state.anchors.byId[anchorId].isNodePosition ||\n          !isMultyPole[\n            state.pathComponents.byId[state.anchors.byId[anchorId].nodeId].type\n          ]\n        ) {\n          // if child is path of mono pole\n          IdToUpdate.push({ anchorId, anchorName: name });\n        } else {\n          toRemove.push(index);\n        }\n      }\n    });\n\n    console.log(toRemove.length);\n    return {\n      ...state,\n      anchors: {\n        ...state.anchors,\n        byId: { ...newPositions(state.anchors.byId, IdToUpdate, deltaToAdd) },\n      },\n      pathComponents: {\n        ...state.pathComponents,\n        byId: {\n          ...state.pathComponents.byId,\n          [id]: {\n            ...state.pathComponents.byId[id],\n            angle: newAngle,\n          },\n        },\n      },\n      rotationHelper: {\n        IdToUpdate: IdToUpdate,\n        id: id,\n      },\n      weakLinks: [\n        ...state.weakLinks.filter((elem, index) => !toRemove.includes(index)),\n      ],\n    };\n  }\n};\n","import { componentUseThisAnchor, replaceComponentAnchor } from \"./utils\";\n\nimport { v4 as uuid } from \"uuid\";\n\nexport const stackAnchors = (state, action) => {\n  const anchorsSelected = state.selection.filter(\n    (id) => id in state.anchors.byId\n  );\n  const movedAnchors = [];\n  if (\n    anchorsSelected.length <= 1 ||\n    ![\"U\", \"D\", \"L\", \"R\"].includes(action.direction)\n  ) {\n    return state;\n  } else {\n    const newPosition = {};\n\n    // We start by looping on selected element to find the min/max along x/y depending on the letter\n    anchorsSelected.forEach((id, index) => {\n      const anchor = state.anchors.byId[id];\n\n      switch (action.direction) {\n        case \"U\":\n          newPosition.y =\n            index === 0 ? anchor.y : Math.min(newPosition.y, anchor.y);\n          break;\n        case \"D\":\n          newPosition.y =\n            index === 0 ? anchor.y : Math.max(newPosition.y, anchor.y);\n          break;\n        case \"L\":\n          newPosition.x =\n            index === 0 ? anchor.x : Math.min(newPosition.x, anchor.x);\n          break;\n        case \"R\":\n          newPosition.x =\n            index === 0 ? anchor.x : Math.max(newPosition.x, anchor.x);\n          break;\n        default:\n          break;\n      }\n    });\n\n    // now we now the new x/y we change those positions\n    anchorsSelected.forEach((id) => {\n      const anchor = state.anchors.byId[id];\n\n      //  if the position is modified we just break all the weak lins associated\n      if (\n        (newPosition.x !== undefined && newPosition.x !== anchor.x) ||\n        (newPosition.y !== undefined && newPosition.y !== anchor.y)\n      ) {\n        movedAnchors.push(id);\n      }\n\n      state.anchors.byId[id] = {\n        ...anchor,\n        ...newPosition,\n      };\n    });\n\n    return {\n      ...state,\n      anchors: {\n        ...state.anchors,\n        byId: { ...state.anchors.byId },\n      },\n      weakLinks: [\n        ...state.weakLinks.filter(\n          ({ anchorId }) => !movedAnchors.includes(anchorId)\n        ),\n      ],\n    };\n  }\n};\n\nexport const splitAnchor = (state, action) => {\n  let anchorId = action.anchorId;\n  if (\n    !anchorId &&\n    state.selection.length === 1 &&\n    state.anchors.allIds.includes(state.selection[0])\n  ) {\n    anchorId = state.selection[0];\n  }\n  if (anchorId && state.anchors.allIds.includes(anchorId)) {\n    const componentsToChange = state.pathComponents.allIds.filter((id) =>\n      componentUseThisAnchor(state.pathComponents.byId[id], anchorId)\n    );\n    if (componentsToChange.length <= 1) {\n      return state;\n    }\n\n    const newAnchors = state.anchors;\n    const newComponents = state.pathComponents.byId;\n    const newWeakLinks = [];\n    const weakLinksToCopy = state.weakLinks.filter(\n      ({ anchorId: linkedAnchorId }) => anchorId === linkedAnchorId\n    );\n\n    componentsToChange.slice(1).forEach((componentId) => {\n      const newAnchorId = uuid();\n\n      newComponents[componentId] = replaceComponentAnchor(\n        state.pathComponents.byId[componentId],\n        anchorId,\n        newAnchorId\n      );\n\n      newAnchors.allIds = [newAnchorId, ...newAnchors.allIds];\n      newAnchors.byId = {\n        ...newAnchors.byId,\n        [newAnchorId]: { ...newAnchors.byId[anchorId] },\n      };\n\n      weakLinksToCopy.forEach((linkToCopy) => {\n        newWeakLinks.push({ ...linkToCopy, anchorId: newAnchorId });\n      });\n    });\n\n    return {\n      ...state,\n      pathComponents: {\n        ...state.pathComponents,\n        byId: { ...newComponents },\n      },\n      anchors: {\n        allIds: [...newAnchors.allIds],\n        byId: { ...newAnchors.byId },\n      },\n      weakLinks: [...state.weakLinks, ...newWeakLinks],\n    };\n  }\n  return state;\n};\n","import { createStore } from \"redux\";\n\nimport reducer_displayOptions from \"./displayOptions\";\nimport reducer_magnetsOptions from \"./magnetsOptions\";\n\nimport {\n  START_DRAGGING,\n  START_SELECT,\n  TOGGLE_SELECTION,\n  STOP_DRAGGING,\n  START_CREATE_PATH_ELEMENT,\n  START_CREATE_NODE_ELEMENT,\n  ELEMENT_CREATION_NEXT_STEP,\n  VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  SAVE_PATH_ELEMENT_CREATION,\n  UPDATE_POSITION,\n  SPLIT_ANCHOR,\n  START_RECTANGLE_SELECTION,\n  STOP_RECTANGLE_SELECTION,\n  STACK_SELECTED_ANCHORS,\n  DELETE_ELEMENT,\n  UPDATE_COMPONENT,\n} from \"../actions\";\n\nimport {\n  MODE_SELECT,\n  MODE_DRAG,\n  MODE_CREATE_PATH_ELEMENT,\n  MODE_CREATE_NODE_ELEMENT,\n  MODE_RECTANGLE_SELECTION,\n} from \"./interactionModes\";\n\nimport { initial_state } from \"./debugInitialState\";\n\nimport {\n  startDragging,\n  stopDragging,\n  updatePosition as draggingUpdatePosition,\n} from \"./dragging\";\n\nimport deleteElement from \"./delete\";\nimport {\n  startCreatePathElement,\n  validateFirstStepPathElement,\n  invalidateFirstStepPathElement,\n  savePathElement,\n  updatePosition as pathCreationUpdatePosition,\n} from \"./pathCreation\";\n\nimport {\n  stopRectangleSelection,\n  startRectangleSelection,\n  updatePosition as rectangleSelectionUpdatePosition,\n} from \"./rectangleSelection\";\n\nimport {\n  startNodeCreation,\n  saveNodeCreation,\n  updatePosition as nodeCreationUpdatePosition,\n  rotateNode,\n} from \"./nodeCreation\";\n\nimport { stackAnchors, splitAnchor } from \"./anchorHelper\";\nimport { MULTIPLICATIVE_CONST } from \"../../components/constantes\";\n\nfunction update(state = initial_state, action) {\n  state = { ...reducer_displayOptions(state, action) };\n  state = { ...reducer_magnetsOptions(state, action) };\n\n  switch (action.type) {\n    case UPDATE_COMPONENT:\n      const { id, name, value } = action;\n\n      if (name === \"angle\") {\n        return rotateNode(state, action);\n      }\n      return {\n        ...state,\n        pathComponents: {\n          ...state.pathComponents,\n          byId: {\n            ...state.pathComponents.byId,\n            [id]: {\n              ...state.pathComponents.byId[id],\n              [name]: value,\n            },\n          },\n        },\n      };\n    case TOGGLE_SELECTION:\n      if (action.reset) {\n        return {\n          ...state,\n          selection: [action.objectId],\n        };\n      } else {\n        const index = state.selection.findIndex((x) => x === action.objectId);\n        if (index >= 0) {\n          return {\n            ...state,\n            selection: [\n              ...state.selection.slice(0, index),\n              ...state.selection.slice(index + 1),\n            ],\n          };\n        } else {\n          return {\n            ...state,\n            selection: [...state.selection, action.objectId],\n          };\n        }\n      }\n    case START_SELECT:\n      return {\n        ...state,\n        selection: [],\n        adhesivePoints: [],\n        mode: MODE_SELECT,\n      };\n\n    case START_DRAGGING:\n      return startDragging(state, action);\n\n    case STOP_DRAGGING:\n      return stopDragging(state, action);\n\n    case UPDATE_POSITION:\n      const { attractor, attracted } = action;\n\n      if (\n        attractor === null &&\n        (state.mode === MODE_CREATE_PATH_ELEMENT ||\n          state.mode === MODE_CREATE_NODE_ELEMENT) &&\n        state.magnetsOptions.isGridAttracting\n      ) {\n        //not already attracted by someone\n\n        // TODO adapt here for dragging :\n        // 1. all the moving magnets should be saved with there dx, dy (like in magnets.js)\n        // 2. check if x-dx, y-dy correspond to a point\n        const { x, y } = action;\n\n        const refSpace = MULTIPLICATIVE_CONST * state.magnetsOptions.gridSpace;\n        const modX = Math.abs(x) % refSpace;\n        const modY = Math.abs(y) % refSpace;\n\n        const R = 10;\n        if (\n          (modX <= R || modX >= refSpace - R) &&\n          (modY <= R || modY >= refSpace - R)\n        ) {\n          action.x = refSpace * Math.round(x / refSpace);\n          action.y = refSpace * Math.round(y / refSpace);\n        }\n      }\n      switch (state.mode) {\n        case MODE_DRAG:\n          return {\n            ...draggingUpdatePosition(state, action),\n            currentMagnet: { attractor, attracted },\n          };\n\n        case MODE_CREATE_PATH_ELEMENT:\n          return {\n            ...pathCreationUpdatePosition(state, action),\n            currentMagnet: { attractor, attracted },\n          };\n\n        case MODE_CREATE_NODE_ELEMENT:\n          return {\n            ...nodeCreationUpdatePosition(state, action),\n            currentMagnet: { attractor, attracted },\n          };\n\n        case MODE_RECTANGLE_SELECTION:\n          return {\n            ...rectangleSelectionUpdatePosition(state, action),\n            currentMagnet: { attractor, attracted },\n          };\n\n        default:\n          return {\n            ...state,\n            currentMagnet: { attractor, attracted },\n          };\n      }\n\n    case START_CREATE_PATH_ELEMENT:\n      return startCreatePathElement(state, action);\n\n    case START_CREATE_NODE_ELEMENT:\n      return startNodeCreation(state, action);\n\n    case ELEMENT_CREATION_NEXT_STEP:\n      return saveNodeCreation(state, action);\n\n    case VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION:\n      return validateFirstStepPathElement(state, action);\n\n    case INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION:\n      return invalidateFirstStepPathElement(state, action);\n\n    case SAVE_PATH_ELEMENT_CREATION:\n      return savePathElement(state, action);\n\n    case SPLIT_ANCHOR:\n      return splitAnchor(state, action);\n\n    case START_RECTANGLE_SELECTION:\n      return startRectangleSelection(state, action);\n\n    case STOP_RECTANGLE_SELECTION:\n      return stopRectangleSelection(state, action);\n\n    case STACK_SELECTED_ANCHORS:\n      return stackAnchors(state, action);\n\n    case DELETE_ELEMENT:\n      return deleteElement(state, action);\n\n    default:\n      return state;\n  }\n}\n\n// Create a Redux store holding the state of your app.\n// Its API is { subscribe, dispatch, getState }.\nlet store = createStore(update);\n\nexport default store;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport rough from \"roughjs/bundled/rough.esm.js\";\n\nimport { roughComponents } from \"../components\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"@material-ui/core/Button\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    pathComponents: state.pathComponents,\n    anchors: state.anchors,\n  };\n};\n\nconst margin = 50;\nconst RoughDrawing = ({ pathComponents, anchors }) => {\n  const canvasRef = useRef();\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [canvasURL, setCanvasURL] = useState();\n\n  useEffect(() => {\n    const svgBBox = document.getElementById(\"drawingArea\").getBBox();\n    setWidth(svgBBox.width);\n    setHeight(svgBBox.height);\n\n    // const rc = rough.canvas(canvasRef.current);\n    const rc = rough.canvas(document.getElementById(\"rough-canvas\"));\n    const ctx = document.getElementById(\"rough-canvas\").getContext(\"2d\");\n\n    ctx.font = \"0.7cm Computer Modern\";\n\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, width + 2 * margin, height + 2 * margin);\n    ctx.fillStyle = \"black\";\n\n    pathComponents.allIds.forEach((id) => {\n      const element = pathComponents.byId[id];\n      element.positionCoords = element.position\n        ? anchors.byId[element.position]\n        : undefined;\n      element.fromCoords = element.from\n        ? anchors.byId[element.from]\n        : undefined;\n      element.toCoords = element.to ? anchors.byId[element.to] : undefined;\n\n      roughComponents(rc, ctx, svgBBox.x - margin, svgBBox.y - margin, element);\n    });\n  }, [width, height, pathComponents]);\n\n  useEffect(() => {\n    setCanvasURL(\n      canvasRef.current\n        .toDataURL(\"image/jpg\")\n        .replace(\"image/png\", \"image/octet-stream\")\n    );\n  }, [canvasRef.current]);\n\n  return (\n    <>\n      <DialogTitle>Image Generator</DialogTitle>\n      <DialogContent>\n        <canvas\n          id=\"rough-canvas\"\n          ref={canvasRef}\n          width={width + 2 * margin}\n          height={height + 2 * margin}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          href={canvasURL}\n          download=\"circuit.png\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Download\n        </Button>\n      </DialogActions>\n    </>\n  );\n};\nexport default connect(mapStateToProps)(RoughDrawing);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  setZoom,\n  setModeMovePaper,\n  startSelect,\n  stackSelectedAnchors,\n  updateMagnetOption,\n  startCreatePathElement,\n} from \"../redux/actions\";\nimport { MODE_MOVE_PAPER } from \"../redux/store/interactionModes\";\n\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport ControlCameraIcon from \"@material-ui/icons/ControlCamera\";\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport ZoomOutIcon from \"@material-ui/icons/ZoomOut\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startCreatePathElement: (name) => dispatch(startCreatePathElement(name)),\n    setZoom: (zoom) => dispatch(setZoom(zoom)),\n    setModeMovePaper: () => dispatch(setModeMovePaper()),\n    startSelect: () => dispatch(startSelect()),\n    stackSelectedAnchors: (direction) =>\n      dispatch(stackSelectedAnchors(direction)),\n    updateMagnetOption: (optionName, optionValue = null) =>\n      dispatch(updateMagnetOption(optionName, optionValue)),\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    mode: state.mode,\n    zoom: state.displayOptions.zoom,\n    magnetsOptions: state.magnetsOptions,\n  };\n};\n\nconst ToolBar = ({\n  mode,\n  zoom,\n  magnetsOptions,\n  startCreatePathElement,\n  setZoom,\n  setModeMovePaper,\n  stackSelectedAnchors,\n  updateMagnetOption,\n}) => {\n  return (\n    <>\n      {/* TODO create a clean toolbar */}\n      <IconButton\n        onMouseDown={(event) => {\n          startCreatePathElement(\"short\");\n          event.stopPropagation();\n        }}\n      >\n        <SvgIcon>\n          <circle cx=\"4\" cy=\"20\" r=\"2\" />\n          <circle cx=\"20\" cy=\"4\" r=\"2\" />\n          <path d=\"M 19.5,3.5 3.5,19.5 l 1,1 L 20.5,4.5 Z\" />\n        </SvgIcon>\n      </IconButton>\n      <IconButton\n        onMouseDown={(event) => {\n          startCreatePathElement(\"upRight\");\n          event.stopPropagation();\n        }}\n      >\n        <SvgIcon>\n          <circle cx=\"4\" cy=\"20\" r=\"2\" />\n          <circle cx=\"20\" cy=\"4\" r=\"2\" />\n          <path d=\"M 20,3.5 H 3.5 V 20 h 1 V 4.5 H 20 Z\" />\n        </SvgIcon>\n      </IconButton>\n      <IconButton\n        onMouseDown={(event) => {\n          startCreatePathElement(\"rightUp\");\n          event.stopPropagation();\n        }}\n      >\n        <SvgIcon>\n          <circle cx=\"4\" cy=\"20\" r=\"2\" />\n          <circle cx=\"20\" cy=\"4\" r=\"2\" />\n          <path d=\"M 5,20.5 20.5,20.5 l 0,-16.5 h -1 L 19.5,19.5 l -15.5,0 z\" />\n        </SvgIcon>\n      </IconButton>\n      |\n      <IconButton\n        color={mode === MODE_MOVE_PAPER ? \"secondary\" : \"default\"}\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          if (mode === MODE_MOVE_PAPER) {\n            startSelect();\n          } else {\n            setModeMovePaper();\n          }\n        }}\n      >\n        <ControlCameraIcon />\n      </IconButton>\n      <IconButton\n        disabled={zoom < 0.2}\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          setZoom(zoom / 2);\n        }}\n      >\n        <ZoomOutIcon />\n      </IconButton>\n      {zoom}\n      <IconButton\n        disabled={zoom > 2}\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          setZoom(zoom * 2);\n        }}\n      >\n        <ZoomInIcon />\n      </IconButton>\n      |\n      <IconButton\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          stackSelectedAnchors(\"L\");\n        }}\n      >\n        <SvgIcon>\n          <path d=\"M22 13V19H6V13H22M6 5V11H16V5H6M2 2V22H4V2H2\" />\n        </SvgIcon>\n      </IconButton>\n      <IconButton\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          stackSelectedAnchors(\"R\");\n        }}\n      >\n        <SvgIcon>\n          <path d=\"M18 13V19H2V13H18M8 5V11H18V5H8M20 2V22H22V2H20Z\" />\n        </SvgIcon>\n      </IconButton>\n      <IconButton\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          stackSelectedAnchors(\"U\");\n        }}\n      >\n        <SvgIcon>\n          <path d=\"M11 22H5V6H11V22M19 6H13V16H19V6M22 2H2V4H22V2Z\" />\n        </SvgIcon>\n      </IconButton>\n      <IconButton\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          stackSelectedAnchors(\"D\");\n        }}\n      >\n        <SvgIcon>\n          <path d=\"M11 18H5V2H11V18M19 8H13V18H19V8M22 20H2V22H22V20Z\" />\n        </SvgIcon>\n      </IconButton>\n      |\n      <IconButton\n        color={magnetsOptions.isGridAttracting ? \"secondary\" : \"default\"}\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          updateMagnetOption(\"isGridAttracting\");\n        }}\n      >\n        <SvgIcon>\n          <path d=\"M0 6v1h24v-1ZM0 12v1h24v-1ZM0 18v1h24v-1Z\" />\n          <path d=\"M4 0h1v24h-1ZM11 0h1v24h-1ZM18 0h1v24h-1Z\" />\n          <circle cx={18.5} cy={18.5} r={3} />\n        </SvgIcon>\n      </IconButton>\n      <Select\n        value={magnetsOptions.gridSpace}\n        onChange={(event) =>\n          updateMagnetOption(\"gridSpace\", event.target.value)\n        }\n      >\n        <MenuItem value={0.5}>0.5</MenuItem>\n        <MenuItem value={1}>1</MenuItem>\n        <MenuItem value={2}>2</MenuItem>\n      </Select>\n      <IconButton\n        color={\n          magnetsOptions.isPathCoordinatesAttracting ? \"secondary\" : \"default\"\n        }\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          updateMagnetOption(\"isPathCoordinatesAttracting\");\n        }}\n      >\n        <SvgIcon>\n          <path d=\"M4 11.5h20v1h-20Z\" />\n\n          <circle cx={2} cy={12} r={2} />\n          <circle cx={22} cy={12} r={2} />\n        </SvgIcon>\n      </IconButton>\n      <IconButton\n        color={magnetsOptions.isNodeAnchorsAttracting ? \"secondary\" : \"default\"}\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          updateMagnetOption(\"isNodeAnchorsAttracting\");\n        }}\n      >\n        <SvgIcon>\n          <circle id=\"path858\" cx=\"2\" cy=\"16.5\" r=\"2\" />\n          <circle id=\"path834\" cx=\"2\" cy=\"7.5\" r=\"2\" />\n          <circle id=\"path838\" cx=\"22\" cy=\"12\" r=\"2\" />\n          <path d=\"m 22,11.5 v 1 L 18.5,12.5 7,21 7,17 H 2 V 16 H 7 L 7,8 H 2 v -1 L 7,7 7,3 18.5,11.5 Z\" />\n        </SvgIcon>\n      </IconButton>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolBar);\n","import React from \"react\";\nimport components from \"../components\";\nimport { connect } from \"react-redux\";\nimport { MODE_SELECT } from \"../redux/store/interactionModes\";\nimport { toggleSelection, startDragging } from \"../redux/actions\";\n\nconst mapDispatchToProps = (dispatch, { svgRef, displayOptions }) => {\n  return {\n    toggleSelection: (objectId, reset) =>\n      dispatch(toggleSelection(objectId, reset)),\n    startDragging: (x, y) => {\n      const {\n        x: xOffset,\n        y: yOffset,\n        width: svgWidth,\n        height: svgHeight,\n      } = svgRef.current.getBoundingClientRect();\n\n      const {\n        x: SVG_X,\n        y: SVG_Y,\n        width: SVG_WIDTH,\n        height: SVG_HEIGHT,\n        zoom,\n      } = displayOptions;\n\n      dispatch(\n        startDragging(\n          SVG_X + (x - xOffset) * (SVG_WIDTH / svgWidth),\n          SVG_Y + (y - yOffset) * (SVG_HEIGHT / svgHeight)\n        )\n      );\n    },\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    pathComponents: state.pathComponents,\n    selection: state.selection,\n    mode: state.mode,\n  };\n};\n\nconst Components = ({\n  pathComponents,\n  selection,\n  mode,\n  startDragging,\n  toggleSelection,\n}) => (\n  <>\n    {pathComponents.allIds.map(\n      (id) =>\n        pathComponents.byId[id].type &&\n        components[pathComponents.byId[id].type]({\n          ...pathComponents.byId[id],\n          onMouseDown:\n            mode === MODE_SELECT\n              ? (event) => {\n                  event.stopPropagation();\n                  if (\n                    !event.ctrlKey &&\n                    selection.includes(pathComponents.byId[id].id)\n                  ) {\n                    startDragging(\n                      event.nativeEvent.clientX,\n                      event.nativeEvent.clientY\n                    );\n                  } else {\n                    toggleSelection(pathComponents.byId[id].id, !event.ctrlKey);\n                  }\n                }\n              : null,\n          selected: selection.includes(pathComponents.byId[id].id),\n          // showHandles: mode === MODE_LINK,\n        })\n    )}\n  </>\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Components);\n","import React from \"react\";\n\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { MODE_SELECT } from \"../redux/store/interactionModes\";\nimport { toggleSelection, startDragging } from \"../redux/actions\";\n\nconst mapDispatchToProps = (dispatch, { svgRef, displayOptions }) => {\n  return {\n    toggleSelection: (objectId, reset) =>\n      dispatch(toggleSelection(objectId, reset)),\n    startDragging: (x, y) => {\n      const {\n        x: xOffset,\n        y: yOffset,\n        width: svgWidth,\n        height: svgHeight,\n      } = svgRef.current.getBoundingClientRect();\n      const {\n        x: SVG_X,\n        y: SVG_Y,\n        width: SVG_WIDTH,\n        height: SVG_HEIGHT,\n        zoom,\n      } = displayOptions;\n\n      dispatch(\n        startDragging(\n          SVG_X + (x - xOffset) * (SVG_WIDTH / svgWidth),\n          SVG_Y + (y - yOffset) * (SVG_HEIGHT / svgHeight)\n        )\n      );\n    },\n  };\n};\nconst mapStateToProps = (state, { id }) => {\n  return {\n    x: state.anchors.byId[id].x,\n    y: state.anchors.byId[id].y,\n    mode: state.mode,\n    selected: state.selection.includes(id),\n  };\n};\n\nconst Anchor = ({\n  id,\n  x,\n  y,\n  mode,\n  selected,\n  startDragging,\n  toggleSelection,\n}) => (\n  <circle\n    cx={x}\n    cy={y}\n    r={5}\n    className={`anchor ${selected ? \"selected\" : \"\"}`}\n    onMouseDown={\n      mode === MODE_SELECT\n        ? (event) => {\n            event.stopPropagation();\n            if (!event.ctrlKey && selected) {\n              startDragging(\n                event.nativeEvent.clientX,\n                event.nativeEvent.clientY\n              );\n            } else {\n              toggleSelection(id, !event.ctrlKey);\n            }\n          }\n        : null\n    }\n  />\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Anchor);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Anchor from \"../atoms/anchor\";\n\nconst mapStateToProps = (state) => {\n  return {\n    anchorIds: state.anchors.allIds,\n  };\n};\n\nconst Anchors = ({ anchorIds, svgRef, displayOptions }) => (\n  <>\n    {anchorIds.map((id) => (\n      <Anchor\n        key={id}\n        id={id}\n        svgRef={svgRef}\n        displayOptions={displayOptions}\n      />\n    ))}\n  </>\n);\n\nexport default connect(mapStateToProps)(Anchors);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { updatePosition, stopDragging } from \"../redux/actions\";\nimport { MODE_DRAG } from \"../redux/store/interactionModes\";\nconst mapDispatchToProps = (dispatch, { attractor, attracted }) => {\n  return {\n    updatePosition: (x, y) =>\n      dispatch(updatePosition({ x, y, attractor, attracted })),\n    stopDragging: () => dispatch(stopDragging()),\n  };\n};\n\nconst Magnet = ({\n  id,\n  x,\n  y,\n  dx,\n  dy,\n  color,\n  mode,\n  updatePosition,\n  stopDragging,\n}) => {\n  const [isUsed, setIsUsed] = useState(false);\n\n  return (\n    <>\n      {isUsed && (\n        <circle\n          cx={x}\n          cy={y}\n          r={5}\n          style={{\n            fill: \"none\",\n            stroke: \"red\",\n            strokeWidth: 2,\n          }}\n        />\n      )}\n      <circle\n        cx={x + dx}\n        cy={y + dy}\n        r={10}\n        style={{\n          fill: color || \"transparent\",\n        }}\n        onMouseEnter={(event) => {\n          event.stopPropagation();\n          updatePosition(x + dx, y + dy);\n          setIsUsed(true);\n        }}\n        onMouseLeave={() => setIsUsed(false)}\n        onMouseMove={\n          (event) => event.stopPropagation() //stop the propagation\n        }\n        onMouseUp={\n          mode === MODE_DRAG\n            ? (event) => {\n                event.stopPropagation();\n                stopDragging();\n              }\n            : null\n        }\n      />\n    </>\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(Magnet);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  MODE_CREATE_PATH_ELEMENT,\n  MODE_CREATE_NODE_ELEMENT,\n  MODE_DRAG,\n} from \"../redux/store/interactionModes\";\n\nimport Magnet from \"../atoms/magnet\";\nimport { getElementAnchors } from \"../components\";\n\nconst mapStateToProps = (state) => {\n  return {\n    anchors: state.anchors,\n    pathComponents: state.pathComponents,\n    mode: state.mode,\n    anchorsToMove: state.anchorsToMove,\n    selection: state.selection,\n    adhesivePoints: state.adhesivePoints || null,\n    ...state.magnetsOptions,\n  };\n};\n\nconst isMoving = (element, anchorsToMove) => {\n  // help function to filter magnets\n  if (!anchorsToMove) {\n    return false;\n  }\n  if (typeof element == \"string\" && anchorsToMove.includes(element)) {\n    return true;\n  }\n  if (element.from && anchorsToMove.includes(element.from)) {\n    return true;\n  }\n  if (element.to && anchorsToMove.includes(element.to)) {\n    return true;\n  }\n  if (element.position && anchorsToMove.includes(element.position)) {\n    return true;\n  }\n  return false;\n};\n\nconst Magnets = ({\n  mode,\n  anchors,\n  pathComponents,\n  anchorsToMove,\n  adhesivePoints,\n  isPathCoordinatesAttracting,\n  isNodeAnchorsAttracting,\n}) => {\n  // TODO : use a correct way to compute how many circle to draw\n  if (\n    mode !== MODE_DRAG &&\n    mode !== MODE_CREATE_NODE_ELEMENT &&\n    mode !== MODE_CREATE_PATH_ELEMENT\n  ) {\n    return null;\n  }\n\n  return (\n    <>\n      {isNodeAnchorsAttracting &&\n        pathComponents.allIds\n          .filter((id) => !isMoving(pathComponents.byId[id], anchorsToMove))\n          .reduce(\n            (accumulator, id) => [\n              ...accumulator,\n              ...getElementAnchors({\n                ...pathComponents.byId[id],\n                fromCoords:\n                  pathComponents.byId[id].from &&\n                  anchors.byId[pathComponents.byId[id].from],\n                toCoords:\n                  pathComponents.byId[id].to &&\n                  anchors.byId[pathComponents.byId[id].to],\n                positionCoords:\n                  pathComponents.byId[id].position &&\n                  anchors.byId[pathComponents.byId[id].position],\n              }).map(({ x, y, name }) =>\n                adhesivePoints.reduce(\n                  (\n                    accu,\n                    { type, dx, dy, name: nameAdhesive = \"\", id: idAdhesive }\n                  ) => {\n                    return [\n                      ...accu,\n                      <Magnet\n                        key={`${id}-${name}<-${idAdhesive}-${\n                          nameAdhesive || \"\"\n                        }`}\n                        x={x}\n                        dx={dx}\n                        y={y}\n                        dy={dy}\n                        mode={mode}\n                        attractor={{\n                          type: pathComponents.byId[id].position\n                            ? \"NODE\"\n                            : \"PATH\",\n                          name: name,\n                          id: id,\n                        }}\n                        attracted={{\n                          type: type,\n                          name: nameAdhesive,\n                          id: idAdhesive,\n                        }}\n                      />,\n                    ];\n                  },\n                  []\n                )\n              ),\n            ],\n            []\n          )}\n      {isPathCoordinatesAttracting &&\n        anchors.allIds\n          .filter((id) => !isMoving(id, anchorsToMove))\n          .map((id) =>\n            adhesivePoints.reduce(\n              (\n                accu,\n                { type, dx, dy, name: nameAdhesive = \"\", id: idAdhesive }\n              ) => {\n                return [\n                  ...accu,\n                  <Magnet\n                    key={`${id}<-${idAdhesive}-${nameAdhesive || \"\"}`}\n                    x={anchors.byId[id].x}\n                    dx={dx}\n                    y={anchors.byId[id].y}\n                    dy={dy}\n                    mode={mode}\n                    attractor={{ type: \"ANCHOR\", name: \"\", id: id }}\n                    attracted={{\n                      type: type,\n                      name: nameAdhesive,\n                      id: idAdhesive,\n                    }}\n                  />,\n                ];\n              },\n              []\n            )\n          )}\n    </>\n  );\n};\n\nexport default connect(mapStateToProps)(Magnets);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport components from \"../components\";\nimport ToolBar from \"./toolbar\";\n\nimport {\n  updatePosition,\n  stopDragging,\n  validateFirstStepPathElementCreation,\n  invalidateFirstStepPathElementCreation,\n  savePathElementCreation,\n  nextStepOfElementCreation,\n  startRectangleSelection,\n  stopRectangleSelection,\n  startMovePaper,\n} from \"../redux/actions\";\nimport {\n  MODE_DRAG,\n  MODE_CREATE_PATH_ELEMENT,\n  MODE_CREATE_NODE_ELEMENT,\n  MODE_SELECT,\n  MODE_RECTANGLE_SELECTION,\n  MODE_MOVE_PAPER,\n} from \"../redux/store/interactionModes\";\n\nimport { MULTIPLICATIVE_CONST } from \"../components/constantes\";\n\nimport Components from \"./components\";\nimport Anchors from \"./anchors\";\nimport Magnets from \"./magnets\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updatePosition: (x, y, shiftPress) =>\n      dispatch(updatePosition({ x, y, shiftPress })),\n    stopDragging: () => dispatch(stopDragging()),\n    validateFirstStepPathElementCreation: () =>\n      dispatch(validateFirstStepPathElementCreation()),\n    invalidateFirstStepPathElementCreation: () =>\n      dispatch(invalidateFirstStepPathElementCreation()),\n    savePathElementCreation: () => dispatch(savePathElementCreation()),\n    nextStepOfElementCreation: () => dispatch(nextStepOfElementCreation()),\n    startRectangleSelection: (x, y) => dispatch(startRectangleSelection(x, y)),\n    stopRectangleSelection: () => dispatch(stopRectangleSelection()),\n    startMovePaper: (x, y) => dispatch(startMovePaper(x, y)),\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    mode: state.mode,\n    newPath: state.newPath,\n    newNode: state.newNode,\n    rectangleSelection: state.rectangleSelection,\n    displayOptions: state.displayOptions,\n    isGridAttracting: state.magnetsOptions.isGridAttracting,\n    gridSpace: state.magnetsOptions.gridSpace,\n  };\n};\n\nconst Container = ({\n  svgRef,\n  mode,\n  newPath,\n  newNode,\n  rectangleSelection,\n  displayOptions,\n  isGridAttracting,\n  gridSpace,\n  stopDragging,\n  updatePosition,\n  validateFirstStepPathElementCreation,\n  invalidateFirstStepPathElementCreation,\n  savePathElementCreation,\n  nextStepOfElementCreation,\n  startRectangleSelection,\n  stopRectangleSelection,\n  startMovePaper,\n}) => {\n  const {\n    x: SVG_X,\n    y: SVG_Y,\n    width: SVG_WIDTH,\n    height: SVG_HEIGHT,\n  } = displayOptions;\n\n  const followMouse = (event) => {\n    const {\n      x: xOffset,\n      y: yOffset,\n      width: svgWidth,\n      height: svgHeight,\n    } = svgRef.current.getBoundingClientRect();\n\n    switch (mode) {\n      case MODE_DRAG:\n      case MODE_CREATE_PATH_ELEMENT:\n      case MODE_CREATE_NODE_ELEMENT:\n      case MODE_RECTANGLE_SELECTION:\n        updatePosition(\n          SVG_X +\n            (event.nativeEvent.clientX - xOffset) * (SVG_WIDTH / svgWidth),\n          SVG_Y +\n            (event.nativeEvent.clientY - yOffset) * (SVG_HEIGHT / svgHeight),\n          event.shiftKey\n        );\n        break;\n      default:\n        break;\n    }\n  };\n\n  const click = (event) => {\n    const {\n      x: xOffset,\n      y: yOffset,\n      width: svgWidth,\n      height: svgHeight,\n    } = svgRef.current.getBoundingClientRect();\n\n    switch (mode) {\n      case MODE_SELECT:\n        event.stopPropagation();\n        startRectangleSelection(\n          SVG_X +\n            (event.nativeEvent.clientX - xOffset) * (SVG_WIDTH / svgWidth),\n          SVG_Y +\n            (event.nativeEvent.clientY - yOffset) * (SVG_HEIGHT / svgHeight)\n        );\n        break;\n      case MODE_CREATE_PATH_ELEMENT:\n        event.stopPropagation();\n        if (newPath.isFromValidated) {\n          savePathElementCreation(\n            SVG_X +\n              (event.nativeEvent.clientX - xOffset) * (SVG_WIDTH / svgWidth),\n            SVG_Y +\n              (event.nativeEvent.clientY - yOffset) * (SVG_HEIGHT / svgHeight)\n          );\n        } else {\n          validateFirstStepPathElementCreation();\n        }\n        break;\n      case MODE_CREATE_NODE_ELEMENT:\n        event.stopPropagation();\n        nextStepOfElementCreation();\n        break;\n      case MODE_MOVE_PAPER:\n        event.stopPropagation();\n        startMovePaper(event.nativeEvent.clientX, event.nativeEvent.clientY);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <ToolBar />\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox={`${SVG_X} ${SVG_Y} ${SVG_WIDTH} ${SVG_HEIGHT}`}\n        style={{ width: \"100%\", background: \"lightgray\" }}\n        onMouseMove={\n          mode === MODE_DRAG ||\n          mode === MODE_CREATE_PATH_ELEMENT ||\n          mode === MODE_CREATE_NODE_ELEMENT ||\n          mode === MODE_RECTANGLE_SELECTION\n            ? followMouse\n            : null\n        }\n        onMouseDown={click}\n        onMouseUp={\n          mode === MODE_DRAG\n            ? () => stopDragging()\n            : mode === MODE_RECTANGLE_SELECTION\n            ? (event) => {\n                event.stopPropagation();\n                stopRectangleSelection();\n              }\n            : null\n        }\n        ref={svgRef}\n      >\n        <defs>\n          <pattern\n            id=\"grid-magnets\"\n            x=\"-10\"\n            y=\"-10\"\n            width={gridSpace * MULTIPLICATIVE_CONST}\n            height={gridSpace * MULTIPLICATIVE_CONST}\n            patternUnits=\"userSpaceOnUse\"\n          >\n            <circle fill=\"gray\" cx=\"10\" cy=\"10\" r=\"3\"></circle>\n          </pattern>\n        </defs>\n        {isGridAttracting && (\n          <rect\n            x={SVG_X - 10}\n            y={SVG_Y - 10}\n            width=\"100%\"\n            height=\"100%\"\n            fill=\"url(#grid-magnets)\"\n          />\n        )}\n\n        <g id=\"drawingArea\">\n          <Components svgRef={svgRef} displayOptions={displayOptions} />\n\n          {/* display the path element in during its creation */}\n\n          {mode === MODE_CREATE_PATH_ELEMENT && // the element\n            newPath &&\n            newPath.isFromValidated &&\n            newPath.to &&\n            newPath.to.x !== null &&\n            newPath.to.y !== null &&\n            newPath.from &&\n            newPath.from.x !== null &&\n            newPath.from.y !== null &&\n            components[newPath.elementType]({\n              fromCoords: newPath.from,\n              toCoords: newPath.to,\n            })}\n          {mode === MODE_CREATE_PATH_ELEMENT && //the anchor TO\n            newPath &&\n            newPath.isFromValidated &&\n            newPath.to.x !== null &&\n            newPath.to.y !== null && (\n              <circle cx={newPath.to.x} cy={newPath.to.y} r={5} />\n            )}\n          {mode === MODE_CREATE_PATH_ELEMENT && // the anchor FROM\n            newPath &&\n            newPath.from &&\n            newPath.from.x !== null &&\n            newPath.from.y !== null && (\n              <circle\n                cx={newPath.from.x}\n                cy={newPath.from.y}\n                r={5}\n                onMouseEnter={invalidateFirstStepPathElementCreation}\n              />\n            )}\n\n          {/* display the path element in during its creation */}\n\n          {mode === MODE_CREATE_NODE_ELEMENT && // the element\n            newNode &&\n            newNode.position &&\n            newNode.position.x !== null &&\n            newNode.position.y !== null &&\n            components[newNode.elementType]({\n              positionCoords: newNode.position,\n            })}\n          {mode === MODE_CREATE_NODE_ELEMENT && // the anchor POSITION\n            newNode &&\n            newNode.position &&\n            newNode.position.x !== null &&\n            newNode.position.y !== null && (\n              <circle cx={newNode.position.x} cy={newNode.position.y} r={5} />\n            )}\n\n          <Anchors svgRef={svgRef} displayOptions={displayOptions} />\n          <Magnets svgRef={svgRef} displayOptions={displayOptions} />\n\n          {mode === MODE_RECTANGLE_SELECTION && (\n            <path\n              d={`M ${rectangleSelection.x0} ${rectangleSelection.y0} L  ${rectangleSelection.x0} ${rectangleSelection.y1} L ${rectangleSelection.x1} ${rectangleSelection.y1} L  ${rectangleSelection.x1} ${rectangleSelection.y0} Z`}\n              style={{ fill: \"transparent\", stroke: \"red\", strokeWidth: 1 }}\n            />\n          )}\n        </g>\n      </svg>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\n","import { drawElement, isMultyPole, isPath } from \"../../components\";\nimport { MULTIPLICATIVE_CONST } from \"../../components/constantes\";\n\nconst simplifyNumber = (x) => {\n  const rep = x.toFixed(2);\n  if (rep.slice(-3) === \".00\") {\n    return rep.slice(0, -3);\n  }\n  if (rep.slice(-1) === \"0\") {\n    return rep.slice(0, -1);\n  }\n  return rep;\n};\nconst isNode = (element) => !!element.position;\n\nconst getCoordId = ({ x, y }) =>\n  `${typeof x === \"number\" ? x.toFixed(2) : x}-${\n    typeof y === \"number\" ? y.toFixed(2) : y\n  }`;\n\n// helper to write latex coordinate\nconst getCoord = (x, y, coords) => {\n  const coordId = getCoordId({ x: x, y: y });\n\n  if (coords[coordId].name) {\n    return `(${coords[coordId].name})`;\n  } else {\n    return `(${simplifyNumber(x / MULTIPLICATIVE_CONST)}, ${simplifyNumber(\n      -y / MULTIPLICATIVE_CONST\n    )})`;\n  }\n};\n\nconst removeDrawnElements = (drawnElements) => (listeOfId) =>\n  listeOfId.filter((id) => !drawnElements[id]);\n\n// comparing function to decide which coordinate should be drawn first\nconst compareCoord = (drawnElements, coords) => (coordId1, coordId2) => {\n  const { endingPaths: endingPaths1, nodeAssociated: nodeAssociated1 } = coords[\n    coordId1\n  ];\n  const { endingPaths: endingPaths2, nodeAssociated: nodeAssociated2 } = coords[\n    coordId2\n  ];\n\n  // we prefer starting from a coordinate with no arriving path element or as less a possible\n  if (\n    removeDrawnElements(drawnElements)(endingPaths1).length <\n    removeDrawnElements(drawnElements)(endingPaths2).length\n  ) {\n    return -1;\n  }\n  if (\n    removeDrawnElements(drawnElements)(endingPaths1).length >\n    removeDrawnElements(drawnElements)(endingPaths2).length\n  ) {\n    return 1;\n  }\n\n  // for equivalent number of arriving path, we prefer the one with the most important number of nodes\n  if (\n    removeDrawnElements(drawnElements)(nodeAssociated1).length >\n    removeDrawnElements(drawnElements)(nodeAssociated2).length\n  ) {\n    return -1;\n  }\n  if (\n    removeDrawnElements(drawnElements)(nodeAssociated1).length <\n    removeDrawnElements(drawnElements)(nodeAssociated2).length\n  ) {\n    return 1;\n  }\n  return 0;\n};\n\n// this function start from the coordinate \"startCoordId\" and follow a path by drawing components\nconst drawPathFromCoord = (\n  startCoordId,\n  coords,\n  state,\n  drawnElements,\n  nbOfCoordinateUsed\n) => {\n  const elementsToAdd = []; // list of the elements in the line to write\n\n  // variables to save some coordinates\n  let nbOfCreatedNames = 0;\n  let nextName = `point${nbOfCoordinateUsed + 1}`;\n\n  // create variable updatable\n  let currantCoordId = startCoordId;\n  let currantCoord = coords[currantCoordId];\n\n  // informations on the currant node\n  let nextPaths = currantCoord.startingPaths.filter((id) => !drawnElements[id]); //remove drawn elements\n  let arrivingPaths = currantCoord.endingPaths.filter(\n    (id) => !drawnElements[id]\n  );\n  let nextNode = currantCoord.nodeAssociated.filter((id) => !drawnElements[id]); // remove drawn elements (multi-pole are already drawn at this step)\n\n  // get ready to loop on components to add\n  let coordIsNew = true;\n  while (nextPaths.length > 0 || nextNode.length > 0) {\n    // add draw if it's the beginning\n    if (elementsToAdd.length === 0) {\n      elementsToAdd.push(`\\\\draw `);\n    }\n\n    // add the coordinate if needed\n    if (coordIsNew) {\n      elementsToAdd.push(\n        `${getCoord(currantCoord.x, currantCoord.y, coords)} `\n      );\n      if (\n        !currantCoord.name &&\n        (nextPaths.length > 1 || arrivingPaths.length > 0)\n      ) {\n        //save name if we will need to start from here again or to arrive to here in the future\n        elementsToAdd.push(`coordinate(${nextName}) `);\n        coords[currantCoordId].name = nextName;\n\n        //get ready for next name\n        nbOfCreatedNames += 1;\n        nextName = `point${nbOfCoordinateUsed + nbOfCreatedNames + 1}`;\n      }\n    }\n\n    if (nextNode.length > 0) {\n      // create a node if possible\n      coordIsNew = false;\n      const nodeId = nextNode.pop();\n      const element = state.pathComponents.byId[nodeId];\n\n      elementsToAdd.push(`${drawElement(element)} `);\n      drawnElements[element.id] = true;\n    } else {\n      // create path if no more node is to draw\n      coordIsNew = true;\n      const element = state.pathComponents.byId[nextPaths[0]];\n\n      elementsToAdd.push(drawElement(element));\n      drawnElements[element.id] = true;\n\n      // get information of the next coordinate\n      currantCoordId = getCoordId(state.anchors.byId[element.to]);\n      currantCoord = coords[currantCoordId];\n      nextPaths = currantCoord.startingPaths.filter((id) => !drawnElements[id]); //only path elements starting here not already drawn\n      arrivingPaths = currantCoord.endingPaths.filter(\n        (id) => !drawnElements[id]\n      );\n      nextNode = currantCoord.nodeAssociated.filter((id) => !drawnElements[id]);\n    }\n  }\n  // There is no elements to draw from the currant coordinate\n\n  if (elementsToAdd.length > 0) {\n    if (coordIsNew) {\n      // if it's a new coordinate, we add it to the list\n      elementsToAdd.push(\n        `${getCoord(currantCoord.x, currantCoord.y, coords)} `\n      );\n      if (!currantCoord.name && arrivingPaths.length > 0) {\n        // we give it a name if needed\n        coords[currantCoordId].name = nextName;\n        elementsToAdd.push(`coordinate(${nextName}) `);\n        nbOfCreatedNames += 1;\n        nextName = `point${nbOfCoordinateUsed + nbOfCreatedNames + 1}`;\n      }\n    }\n\n    elementsToAdd.push(\";\"); //add the semi colon at the end of the line\n  }\n\n  // return the elements of the line and an indicator to update the number of coordinate saved\n  return [elementsToAdd, nbOfCreatedNames];\n};\n\nconst initializeCoords = (state) => {\n  // dict created :\n  //\n  // coords = {[(x, y)]: {\n  //  x: number,\n  //  y: number,\n  //  name:null||str,\n  //  startingPaths: [list of elements id],\n  //  endingPaths: [list of elements id],\n  //  nodeAssociated: [list of elements id],\n  // }\n  //\n  // nodeReference = {\n  //   [nodeId]: {\n  //     name: null,\n  //     parent: null,\n  //     parentAnchor: null,\n  //     anchor: null,\n  //     associatedIds: [list of coordId relative to this node],\n  //   }\n  // }\n\n  const coords = {};\n  const nodeReference = {};\n\n  // check coord of all to[] element\n  state.pathComponents.allIds.forEach((id) => {\n    const element = state.pathComponents.byId[id];\n    if (isPath[element.type]) {\n      const fromCoord = state.anchors.byId[element.from];\n      const toCoord = state.anchors.byId[element.to];\n\n      const fromCoordId = getCoordId(fromCoord);\n      const toCoordId = getCoordId(toCoord);\n\n      if (coords[fromCoordId] === undefined) {\n        coords[fromCoordId] = {\n          x: fromCoord.x.toFixed(2),\n          y: fromCoord.y.toFixed(2),\n          name: null,\n          startingPaths: [element.id],\n          endingPaths: [],\n          nodeAssociated: [],\n        };\n      } else if (!coords[fromCoordId].startingPaths.includes(element.id)) {\n        coords[fromCoordId].startingPaths.push(element.id);\n      }\n\n      if (coords[toCoordId] === undefined) {\n        coords[toCoordId] = {\n          x: toCoord.x.toFixed(2),\n          y: toCoord.y.toFixed(2),\n          name: null,\n          endingPaths: [element.id],\n          startingPaths: [],\n          nodeAssociated: [],\n        };\n      } else if (!coords[toCoordId].endingPaths.includes(element.id)) {\n        coords[toCoordId].endingPaths.push(element.id);\n      }\n    } else {\n      nodeReference[element.id] = {\n        name: null,\n        parent: null,\n        parentAnchor: null,\n        anchor: null,\n        associatedIds: [],\n      };\n      if (!isMultyPole[element.type]) {\n        const positionCoord = state.anchors.byId[element.position];\n        const positionCoordId = getCoordId(positionCoord);\n\n        if (coords[positionCoordId] === undefined) {\n          coords[positionCoordId] = {\n            x: positionCoord.x.toFixed(2),\n            y: positionCoord.y.toFixed(2),\n            name: null,\n            startingPaths: [],\n            endingPaths: [],\n            nodeAssociated: [element.id],\n          };\n        } else if (\n          !coords[positionCoordId].nodeAssociated.includes(element.id)\n        ) {\n          coords[positionCoordId].nodeAssociated.push(element.id);\n        }\n      }\n    }\n  });\n\n  // add node informations\n  state.weakLinks.forEach(({ anchorId, nodeId, name, nameAnchor }) => {\n    const coord = state.anchors.byId[anchorId];\n\n    if (\n      !coord.isNodePosition ||\n      !isMultyPole[\n        state.pathComponents.byId[state.anchors.byId[anchorId].nodeId].type\n      ]\n    ) {\n      const coordId = getCoordId(coord);\n      if (!coords[coordId].nodeAssociated.includes(nodeId)) {\n        coords[coordId].nodeAssociated.push(nodeId);\n      }\n      if (!nodeReference[nodeId].associatedIds.includes(coordId)) {\n        nodeReference[nodeId].associatedIds.push(coordId);\n      }\n    } else {\n      const childId = state.anchors.byId[anchorId].nodeId;\n      nodeReference[childId].parent = nodeId;\n      nodeReference[childId].anchor = nameAnchor;\n      nodeReference[childId].parentAnchor = name;\n      if (!nodeReference[nodeId].associatedIds.includes(childId)) {\n        nodeReference[nodeId].associatedIds.push(childId);\n      }\n    }\n  });\n\n  return [coords, nodeReference];\n};\n\nfunction getCircuitikz(state) {\n  const [coords, nodeReference] = initializeCoords(state);\n\n  const drawnElements = {}; //[id]:true when element of this id is drawn\n  let nbOfCoordinateUsed = 0; // counter to save coordinate with name : point1, point2, ...\n  const nodeNumberOfNames = {}; // conter for naming multi-pole (in order to start from 1 for each type of node) exemple: nmos1, pmos1, nmos2\n  const circuitText = [\"\\\\begin{circuitikz}\"];\n\n  // ========================\n  // 1. Draw multi-pole nodes\n  // ========================\n  const multiAnchorNodeIds = state.pathComponents.allIds\n    .filter((elementId) => {\n      // filter nodes to get only multi-pole\n      const element = state.pathComponents.byId[elementId];\n      return isNode(element) && isMultyPole[element.type];\n    })\n    .sort((id1, id2) => {\n      // sort them according to there dependencies\n      if (nodeReference[id1].parent === null) {\n        return -1; //if they are both null (without parent) id1 is preferred (so we do not need to check id2)\n      }\n      if (nodeReference[id2].parent === null) {\n        return 1; //if we are here, it's that id1 is not null. but id2 is so we prefer it\n      }\n      if (nodeReference[id2].parent === id1) {\n        //id1 is parent of id2\n        return -1; //so 1 must be printed before 2\n      }\n      if (nodeReference[id1].parent === id2) {\n        //id2 is parent of id1\n        return -1; //so 2 must be printed before 1\n      }\n      return -1;\n    });\n\n  multiAnchorNodeIds.forEach((elementId) => {\n    const element = state.pathComponents.byId[elementId];\n\n    // get parent information for positioning\n    const positionInformations = {};\n    if (nodeReference[elementId].parent !== null) {\n      positionInformations.position = `${\n        nodeReference[nodeReference[elementId].parent].name\n      }.${nodeReference[elementId].parentAnchor}`;\n\n      positionInformations.anchor = nodeReference[elementId].anchor;\n    } else {\n      positionInformations.x = state.anchors.byId[element.position].x;\n      positionInformations.y = state.anchors.byId[element.position].y;\n    }\n\n    // check if need to create name\n    const nameNeeded = nodeReference[elementId].associatedIds.length > 0;\n    if (nameNeeded) {\n      const name = `${element.type}${nodeNumberOfNames[element.type] || 1}`;\n\n      circuitText.push(drawElement(element, positionInformations, name));\n\n      nodeReference[element.id].name = name;\n      nodeNumberOfNames[element.type] =\n        (nodeNumberOfNames[element.type] || 1) + 1;\n    } else {\n      circuitText.push(drawElement(element, positionInformations));\n    }\n\n    drawnElements[elementId] = true; //note that this node is ok\n  });\n\n  // =====================================================\n  // 2. Associate anchor name to coordinates when possible\n  // =====================================================\n  // TODO : an good idea could be not to trust weak links but to compare anchor coordinate with used coordinates\n  state.weakLinks.forEach(({ anchorId, nodeId, name, nameAnchor }) => {\n    const coord = state.anchors.byId[anchorId];\n    const coordId = getCoordId(coord);\n\n    if (\n      coords[coordId] && //coord is a used coordinate (remove multipleAnchor node)\n      drawnElements[nodeId] && //parent is drawn (remove mono anchor node)\n      !coords[coordId].name && //name is not already attributed\n      nodeReference[nodeId].name //the parent has a name\n    ) {\n      coords[coordId].name = `${nodeReference[nodeId].name}.${name}`;\n    }\n  });\n\n  // ====================================\n  // 3. Draw path from multi-pole anchors\n  // ====================================\n  multiAnchorNodeIds.forEach((nodeId) => {\n    nodeReference[nodeId].associatedIds.forEach((childId) => {\n      if (coords[childId] !== undefined) {\n        const [elementsToAdd, nbOfCreatedNames] = drawPathFromCoord(\n          childId,\n          coords,\n          state,\n          drawnElements,\n          nbOfCoordinateUsed\n        );\n\n        if (elementsToAdd.length > 0) {\n          nbOfCoordinateUsed += nbOfCreatedNames;\n          circuitText.push(elementsToAdd.join(\"\"));\n        }\n      }\n    });\n  });\n\n  // ===========================\n  // 4. Draw all remaining paths\n  // ===========================\n  const coordsToPlot = Object.keys(coords);\n  while (coordsToPlot.length > 0) {\n    // get coordinate id to start the path according to \"compareCoord\" function\n    const idToPlot = coordsToPlot.sort(compareCoord(drawElement, coords))[0];\n\n    //plot it\n    if (coords[idToPlot] !== undefined) {\n      const [elementsToAdd, nbOfCreatedNames] = drawPathFromCoord(\n        idToPlot,\n        coords,\n        state,\n        drawnElements,\n        nbOfCoordinateUsed\n      );\n\n      if (elementsToAdd.length > 0) {\n        nbOfCoordinateUsed += nbOfCreatedNames;\n        circuitText.push(elementsToAdd.join(\"\"));\n      } else {\n        // remove it from the list because there is no more things to draw from here\n        const index = coordsToPlot.indexOf(idToPlot);\n        coordsToPlot.splice(index, 1);\n      }\n    } else {\n      // remove it from the list because this coordinate does not exist\n      const index = coordsToPlot.indexOf(idToPlot);\n      coordsToPlot.splice(index, 1);\n    }\n  }\n  circuitText.push(\"\\\\end{circuitikz}\");\n\n  return circuitText;\n}\n\nexport default getCircuitikz;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport getCircuitikz from \"../redux/store/getCircuitikz\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst copyCode = (code) => {\n  navigator.clipboard.writeText(code).then(\n    function () {},\n    function () {}\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { code: getCircuitikz(state) };\n};\n\nconst LatexDisplay = ({ code }) => (\n  <>\n    <DialogTitle>Your LaTEX code</DialogTitle>\n    <DialogContent>\n      <pre>\n        {code.slice(0, code.length - 1).join(\"\\n\\t\") +\n          \"\\n\" +\n          code[code.length - 1]}\n      </pre>\n    </DialogContent>\n    <DialogActions>\n      <Button\n        autoFocus\n        onClick={() => {\n          copyCode(\n            code.slice(0, code.length - 1).join(\"\\n\\t\") +\n              \"\\n\" +\n              code[code.length - 1]\n          );\n        }}\n      >\n        Copy\n      </Button>\n    </DialogActions>\n  </>\n);\n\nexport default connect(mapStateToProps, null)(LatexDisplay);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { updateComponent } from \"../redux/actions\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nimport Input from \"@material-ui/core/Input\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleInputChange: (id, name) => (value) => (event) =>\n      dispatch(\n        updateComponent(id, name, value === null ? event.target.value : value)\n      ),\n  };\n};\n\nconst mapStateToProps = (state) => {\n  if (\n    state.selection.length < 1 ||\n    !state.pathComponents.allIds.includes(state.selection[0])\n  ) {\n    return {};\n  }\n  const idOfInterest = state.selection[0];\n  return {\n    id: idOfInterest,\n    options: state.pathComponents.byId[idOfInterest],\n  };\n};\n\nconst inputElement = {\n  label: (value, update) => (\n    <ListItem>\n      <TextField\n        label=\"Label\"\n        value={value}\n        onKeyDown={(e) => e.stopPropagation()}\n        onChangeCapture={update(null)}\n      />\n    </ListItem>\n  ),\n  annotation: (value, update) => (\n    <ListItem>\n      <TextField\n        label=\"Annotation\"\n        value={value}\n        onKeyDown={(e) => e.stopPropagation()}\n        onChangeCapture={update(null)}\n      />\n    </ListItem>\n  ),\n  angle: (value, update) => (\n    <ListItem button>\n      <ListItemText primary=\"rotation\" />\n      <ListItemSecondaryAction>\n        <Input\n          value={value || 0}\n          onKeyDown={(e) => e.stopPropagation()}\n          onChangeCapture={update(null)}\n          inputProps={{\n            step: 5,\n            min: -180,\n            max: 180,\n            type: \"number\",\n          }}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  ),\n  mirror: (value, update) => (\n    <ListItem>\n      <FormControlLabel\n        control={\n          <Switch checked={value} onChange={update(!value)} name=\"mirror\" />\n        }\n        label=\"mirror\"\n      />\n    </ListItem>\n  ),\n  invert: (value, update) => (\n    <ListItem>\n      <FormControlLabel\n        control={\n          <Switch checked={value} onChange={update(!value)} name=\"invert\" />\n        }\n        label=\"Invert\"\n      />\n    </ListItem>\n  ),\n  currant: (value, update) => (\n    <>\n      <ListItem button>\n        <ListItemText primary=\"Currant\" />\n        <ListItemSecondaryAction>\n          <Checkbox\n            checked={value.show}\n            onChange={update({ ...value, show: !value.show })}\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        </ListItemSecondaryAction>\n      </ListItem>\n      <ListItem>\n        <TextField\n          disabled={!value.show}\n          label=\"Currant name\"\n          value={value.currantText}\n          onKeyDown={(e) => e.stopPropagation()}\n          onChangeCapture={(e) =>\n            update({ ...value, currantText: e.target.value })()\n          }\n        />\n      </ListItem>\n      <ListItem>\n        <FormControlLabel\n          disabled={!value.show}\n          control={\n            <Switch\n              checked={value.currantIsForward}\n              onChange={update({\n                ...value,\n                currantIsForward: !value.currantIsForward,\n              })}\n              name=\"arrow direction\"\n            />\n          }\n          label=\"direction\"\n        />\n      </ListItem>\n      <ListItem>\n        <FormControlLabel\n          disabled={!value.show}\n          control={\n            <Switch\n              checked={value.currantIsAfter}\n              onChange={update({\n                ...value,\n                currantIsAfter: !value.currantIsAfter,\n              })}\n              name=\"currant position\"\n            />\n          }\n          label=\"arrow position\"\n        />\n      </ListItem>\n      <ListItem>\n        <FormControlLabel\n          disabled={!value.show}\n          control={\n            <Switch\n              checked={value.currantIsAbove}\n              onChange={update({\n                ...value,\n                currantIsAbove: !value.currantIsAbove,\n              })}\n              name=\"text position\"\n            />\n          }\n          label=\"text position\"\n        />\n      </ListItem>\n    </>\n  ),\n};\n\nconst ElementOptions = ({ handleInputChange, id, options = null }) => {\n  if (options === null) {\n    return null;\n  }\n  return (\n    <List>\n      {Object.keys(options)\n        .map((name) => [\n          name,\n          Object.keys(inputElement).findIndex((n) => n === name),\n        ])\n        .filter(([, index]) => index >= 0)\n        .sort(([, i1], [, i2]) => i1 - i2)\n        .map(([name]) => (\n          <div key={name}>\n            {inputElement[name](options[name], handleInputChange(id, name))}\n          </div>\n        ))}\n    </List>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementOptions);\n","import React, { useState } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n  startCreatePathElement,\n  startCreateNodeElement,\n} from \"../redux/actions\";\n\nimport { isPath, structure } from \"../components\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startCreatePathElement: (elementType) =>\n      dispatch(startCreatePathElement(elementType)),\n    startCreateNodeElement: (elementType) =>\n      dispatch(startCreateNodeElement(elementType)),\n  };\n};\n\nconst LeftMenu = ({ startCreatePathElement, startCreateNodeElement }) => {\n  const [openSection, setOpenSection] = useState();\n\n  return (\n    <List>\n      {Object.keys(structure).map((sectionName) => (\n        <>\n          <ListItem\n            key={sectionName}\n            button\n            onClick={() =>\n              setOpenSection(openSection === sectionName ? null : sectionName)\n            }\n          >\n            <ListItemText primary={sectionName} />\n            {openSection === sectionName ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse\n            in={openSection === sectionName}\n            timeout=\"auto\"\n            unmountOnExit\n          >\n            <List>\n              {structure[sectionName].map((name) => (\n                <ListItem\n                  button\n                  key={name}\n                  onMouseDown={(event) => {\n                    event.stopPropagation();\n                    if (isPath[name]) {\n                      startCreatePathElement(name);\n                    } else {\n                      startCreateNodeElement(name);\n                    }\n                  }}\n                >\n                  <ListItemText\n                    primary={name}\n                    style={{ paddingLeft: \"20px\" }}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Collapse>\n        </>\n      ))}\n    </List>\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(LeftMenu);\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  MODE_DRAG,\n  MODE_SELECT,\n  MODE_MOVE_PAPER,\n} from \"./redux/store/interactionModes\";\n\nimport RoughDrawing from \"./container/RoughDrawing\";\nimport Container from \"./container/index.js\";\nimport LatexDisplay from \"./container/latexDisplay\";\nimport ElementOptions from \"./container/elementOptions\";\nimport LeftMenu from \"./container/leftMenu\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport {\n  startSelect,\n  splitAnchor,\n  stackSelectedAnchors,\n  deleteElement,\n  movePaper,\n  endMovePaper,\n} from \"./redux/actions\";\n\nconst drawerWidth = 180;\nconst optionDrawerWidth = 280;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  toolBar: {\n    justifyContent: \"space-between\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  optionDrawer: {},\n  optionDrawerPaper: { width: optionDrawerWidth },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst mapStateToProps = (state) => {\n  return {\n    mode: state.mode,\n    selection: state.selection,\n    pathIds: state.pathComponents.allIds,\n    isPaperDragged: state.displayOptions.dragging.isDragging,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startSelect: () => dispatch(startSelect()),\n    splitAnchor: () => dispatch(splitAnchor()),\n    stackSelectedAnchors: (direction) =>\n      dispatch(stackSelectedAnchors(direction)),\n    deleteElement: (selection) => {\n      dispatch(deleteElement(selection));\n    },\n    movePaper: (x, y) => dispatch(movePaper(x, y)),\n    endMovePaper: () => dispatch(endMovePaper()),\n  };\n};\n\nfunction App({\n  mode,\n  selection,\n  pathIds,\n  isPaperDragged,\n  startSelect,\n  splitAnchor,\n  stackSelectedAnchors,\n  deleteElement,\n  movePaper,\n  endMovePaper,\n}) {\n  const classes = useStyles();\n  const [showCode, setShowCode] = useState(false);\n  const [showRough, setShowRough] = useState(false);\n\n  const svgRef = useRef();\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      switch (event.key) {\n        case \"ArrowRight\":\n          stackSelectedAnchors(\"R\");\n          break;\n        case \"ArrowLeft\":\n          stackSelectedAnchors(\"L\");\n          break;\n        case \"ArrowUp\":\n          stackSelectedAnchors(\"U\");\n          break;\n        case \"ArrowDown\":\n          stackSelectedAnchors(\"D\");\n          break;\n        case \"s\":\n          splitAnchor();\n          break;\n        case \"Delete\":\n          deleteElement(selection);\n          break;\n        default:\n          console.log(event.key);\n          break;\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [splitAnchor, stackSelectedAnchors, deleteElement, selection]);\n\n  const mouseMove = (event) => {\n    movePaper(event.nativeEvent.clientX, event.nativeEvent.clientY);\n  };\n  return (\n    // TODO : Proper listen key event\n    <div\n      className={classes.root}\n      tabIndex=\"0\"\n      onMouseDown={startSelect}\n      onMouseMove={\n        mode === MODE_MOVE_PAPER && isPaperDragged ? mouseMove : null\n      }\n      onMouseUp={\n        mode === MODE_MOVE_PAPER && isPaperDragged ? endMovePaper : null\n      }\n    >\n      <CssBaseline />\n\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolBar}>\n          <Typography variant=\"h6\" noWrap>\n            Clipped drawer\n          </Typography>\n\n          <Button color=\"inherit\" onClick={() => setShowRough(true)}>\n            Rough\n          </Button>\n          <Button color=\"inherit\" onClick={() => setShowCode(true)}>\n            LaTEX\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <LeftMenu />\n        </div>\n      </Drawer>\n      <Drawer\n        anchor=\"right\"\n        variant=\"persistent\"\n        open={\n          (mode === MODE_SELECT || mode === MODE_DRAG) &&\n          selection.length === 1 &&\n          pathIds.includes(selection[0])\n        }\n        className={classes.optionDrawer}\n        classes={{\n          paper: classes.optionDrawerPaper,\n        }}\n        // catch mousedown in element options\n        onMouseDown={(event) => event.stopPropagation()}\n      >\n        <Toolbar />\n        <ElementOptions />\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        <Container svgRef={svgRef} />\n      </main>\n\n      <Dialog\n        open={showCode}\n        onClose={() => {\n          setShowCode(false);\n        }}\n      >\n        <LatexDisplay />\n      </Dialog>\n      <Dialog\n        maxWidth=\"lg\"\n        open={showRough}\n        onClose={() => {\n          setShowRough(false);\n        }}\n      >\n        <RoughDrawing />\n      </Dialog>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}