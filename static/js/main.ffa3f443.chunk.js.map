{"version":3,"sources":["redux/actions/index.js","redux/store/interactionModes.js","redux/store/debugInitialState.js","components/constantes.js","components/Lampe.js","components/empty_diode.js","components/pR.js","components/vcapacitor.js","components/nmos.js","components/index.js","redux/store/utils.js","redux/store/dragging.js","redux/store/delete.js","redux/store/pathCreation.js","redux/store/rectangleSelection.js","redux/store/nodeCreation.js","redux/store/anchorHelper.js","redux/store/index.js","container/components.js","atoms/anchor.js","container/anchors.js","atoms/magnet.js","container/magnets.js","container/index.js","redux/store/getCircuitikz.js","container/latexDisplay.js","container/elementOptions.js","App.js","serviceWorker.js","index.js"],"names":["START_DRAGGING","startDragging","x","y","type","STOP_DRAGGING","stopDragging","UPDATE_POSITION","updatePosition","attractor","attracted","shiftPress","START_SELECT","TOGGLE_SELECTION","toggleSelection","objectId","reset","START_CREATE_PATH_ELEMENT","VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION","INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION","SAVE_PATH_ELEMENT_CREATION","START_CREATE_NODE_ELEMENT","ELEMENT_CREATION_NEXT_STEP","SPLIT_ANCHOR","START_RECTANGLE_SELECTION","STOP_RECTANGLE_SELECTION","STACK_SELECTED_ANCHORS","DELETE_ELEMENT","MODE_SELECT","MODE_DRAG","MODE_CREATE_PATH_ELEMENT","MODE_CREATE_NODE_ELEMENT","MODE_RECTANGLE_SELECTION","initial_state","mode","selection","adhesivePoints","weakLinks","currentMagnet","pathComponents","byId","id1","id","from","to","id2","id3","id4","id5","position","angle","positionAnchor","id6","allIds","anchors","anchor1","anchor2","anchor3","anchor4","anchor5","anchor6","isNodePosition","anchor7","MULTIPLICATIVE_CONST","R_LEN","r","toFixed","connect","state","props","fromCoords","toCoords","dispatch","selected","showHandles","xFrom","yFrom","xTo","yTo","ratio","Math","sqrt","parseInt","atan2","PI","className","style","transform","cx","cy","d","width","UNIT_X","UNIT_Y2","wiper_pos","UNIT_Y","capacitor_width","getElementTranslation","positionCoords","xAnchor","yAnchor","deltaX","deltaY","gate_height","strokeWidth","getAnchors","lampe","pR","name","sin","cos","pR_getAnchor","nmos","dx","dy","Cgap","Bgap","Egap","radAngle","Crad","Brad","Erad","distanceC","distanceB","distanceE","nmos_getAnchor","vcapacitor","vcapacitor_getAnchor","getDrawer","element","getElementAnchors","drawElement","position1","position2","isPath","components","getAdhesivePoints","elementType","push","forEach","componentUseThisAnchor","anchorId","replaceComponentAnchor","previousAnchorId","newAnchorId","newElement","action","anchorsToMove","selectedId","includes","findIndex","elem","fromId","toId","pile","nodeSeen","pop","nodeId","length","originalPosition","alreadyMoved","weakLinksToRemove","filter","map","anchorToRemoveID","anchorToUseId","anchorToRemoveIDIndex","remainingAnchors","newByIDElements","slice","newMoveX","newMoveY","originalX","originalY","abs","anchorById","deleteElement","componentId","anchorToRemove","arg","elementId","newAnchors","newComponents","startCreatePathElement","newPath","isFromValidated","attractorTo","attractorFrom","validateFirstStepPathElement","movedAfterFromCreation","invalidateFirstStepPathElement","savePathElement","newId_element","uuid","fromAnchor","toAnchor","newWeakLinks","newRectangle","rectangleSelection","x1","y1","x0","y0","isInRectangle","stopRectangleSelection","startRectangleSelection","newNode","startNodeCreation","saveNodeCreation","positionId","newWeakLink","anchorName","stackAnchors","anchorsSelected","direction","newPosition","index","anchor","min","max","splitAnchor","componentsToChange","store","createStore","draggingUpdatePosition","pathCreationUpdatePosition","nodeCreationUpdatePosition","rectangleSelectionUpdatePosition","svgRef","current","getBoundingClientRect","xOffset","yOffset","onMouseDown","event","stopPropagation","ctrlKey","nativeEvent","clientX","clientY","anchorIds","color","useState","isUsed","setIsUsed","fill","stroke","onMouseEnter","onMouseLeave","onMouseMove","onMouseUp","isMoving","reduce","accumulator","accu","nameAdhesive","idAdhesive","validateFirstStepPathElementCreation","invalidateFirstStepPathElementCreation","savePathElementCreation","nextStepOfElementCreation","useRef","xmlns","viewBox","height","background","shiftKey","ref","getCircuitikz","circuitText","isNode","code","DialogTitle","DialogContent","join","DialogActions","Button","autoFocus","onClick","navigator","clipboard","writeText","then","copyCode","idOfInterest","options","List","Object","keys","ListItem","button","ListItemText","primary","secondary","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","toolBar","justifyContent","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","startSelect","startCreateNodeElement","stackSelectedAnchors","classes","showColde","setShowCode","useEffect","handleKeyDown","key","console","log","document","addEventListener","removeEventListener","tabIndex","CssBaseline","AppBar","Toolbar","Typography","variant","noWrap","Drawer","paper","open","Dialog","onClose","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ffa3f443.chunk.js","sourcesContent":["export const START_DRAGGING = \"START_DRAGGING\";\nexport function startDragging(x, y) {\n  return {\n    type: START_DRAGGING,\n    x,\n    y,\n  };\n}\n\nexport const STOP_DRAGGING = \"STOP_DRAGGING\";\nexport function stopDragging() {\n  return {\n    type: STOP_DRAGGING,\n  };\n}\n\nexport const UPDATE_POSITION = \"UPDATE_POSITION\";\nexport function updatePosition({ x, y, attractor, attracted, shiftPress }) {\n  // TODO : id should be remove\n  return {\n    type: UPDATE_POSITION,\n    x,\n    y,\n    attractor: attractor || null,\n    attracted: attracted || null,\n    shiftPress,\n  };\n}\n\nexport const START_SELECT = \"START_SELECT\";\nexport function startSelect() {\n  return {\n    type: START_SELECT,\n  };\n}\n\nexport const TOGGLE_SELECTION = \"TOGGLE_SELECTION\";\nexport function toggleSelection(objectId, reset) {\n  return {\n    type: TOGGLE_SELECTION,\n    objectId,\n    reset,\n  };\n}\n\nexport const START_CREATE_PATH_ELEMENT = \"START_CREATE_PATH_ELEMENT\";\nexport function startCreatePathElement(elementType) {\n  return {\n    type: START_CREATE_PATH_ELEMENT,\n    elementType,\n  };\n}\n\nexport const VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION =\n  \"VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION\";\nexport function validateFirstStepPathElementCreation() {\n  return {\n    type: VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  };\n}\n\nexport const INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION =\n  \"INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION\";\nexport function invalidateFirstStepPathElementCreation() {\n  return {\n    type: INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  };\n}\n\nexport const SAVE_PATH_ELEMENT_CREATION = \"SAVE_PATH_ELEMENT_CREATION\";\nexport function savePathElementCreation() {\n  return {\n    type: SAVE_PATH_ELEMENT_CREATION,\n  };\n}\n\nexport const START_CREATE_NODE_ELEMENT = \"START_CREATE_NODE_ELEMENT\";\nexport function startCreateNodeElement(elementType) {\n  return {\n    type: START_CREATE_NODE_ELEMENT,\n    elementType,\n  };\n}\n\nexport const ELEMENT_CREATION_NEXT_STEP = \"ELEMENT_CREATION_NEXT_STEP\";\nexport function nextStepOfElementCreation() {\n  return {\n    type: ELEMENT_CREATION_NEXT_STEP,\n  };\n}\n\nexport const SPLIT_ANCHOR = \"SPLIT_ANCHOR\";\nexport function splitAnchor(anchorId) {\n  return {\n    type: SPLIT_ANCHOR,\n    anchorId: anchorId || null,\n  };\n}\n\nexport const START_RECTANGLE_SELECTION = \"START_RECTANGLE_SELECTION\";\nexport function startRectangleSelection(x, y) {\n  return {\n    type: START_RECTANGLE_SELECTION,\n    x,\n    y,\n  };\n}\n\nexport const STOP_RECTANGLE_SELECTION = \"STOP_RECTANGLE_SELECTION\";\nexport function stopRectangleSelection() {\n  return {\n    type: STOP_RECTANGLE_SELECTION,\n  };\n}\n\nexport const STACK_SELECTED_ANCHORS = \"STACK_SELECTED_ANCHORS\";\nexport function stackSelectedAnchors(direction) {\n  return {\n    type: STACK_SELECTED_ANCHORS,\n    direction,\n  };\n}\n\nexport const DELETE_ELEMENT = \"DELETE_ELEMENT\";\nexport function deleteElement(selection) {\n  return {\n    type: DELETE_ELEMENT,\n    selection,\n  };\n}\n","export const MODE_SELECT = \"MODE_SELECT\";\nexport const MODE_DRAG = \"MODE_DRAG\";\nexport const MODE_CREATE_PATH_ELEMENT = \"MODE_CREATE_PATH_ELEMENT\";\nexport const MODE_CREATE_NODE_ELEMENT = \"MODE_CREATE_NODE_ELEMENT\";\nexport const MODE_RECTANGLE_SELECTION = \"MODE_RECTANGLE_SELECTION\";\n","import { MODE_SELECT } from \"./interactionModes\";\n\nexport const initial_state = {\n  mode: MODE_SELECT,\n  selection: [],\n  adhesivePoints: [],\n  weakLinks: [],\n  currentMagnet: {\n    attractor: null,\n    attracted: null,\n  },\n  pathComponents: {\n    byId: {\n      id1: {\n        id: \"id1\",\n        from: \"anchor1\",\n        to: \"anchor3\",\n        type: \"pR\",\n      },\n      id2: {\n        id: \"id2\",\n        from: \"anchor2\",\n        to: \"anchor3\",\n        type: \"empty led\",\n      },\n      id3: {\n        id: \"id3\",\n        from: \"anchor4\",\n        to: \"anchor3\",\n        type: \"lampe\",\n      },\n      id4: {\n        id: \"id4\",\n        from: \"anchor5\",\n        to: \"anchor3\",\n        type: \"lampe\",\n      },\n      id5: {\n        id: \"id5\",\n        position: \"anchor6\",\n        type: \"nmos\",\n        angle: -45,\n        positionAnchor: \"B\",\n      },\n      id6: {\n        id: \"id6\",\n        position: \"anchor7\",\n        type: \"nmos\",\n        angle: \"\",\n        positionAnchor: \"\",\n      },\n    },\n    allIds: [\"id1\", \"id2\", \"id3\", \"id4\", \"id5\", \"id6\"],\n  },\n  anchors: {\n    byId: {\n      anchor1: {\n        id: \"anchor1\",\n        x: 10,\n        y: 200,\n      },\n      anchor2: {\n        id: \"anchor2\",\n        x: 500,\n        y: 200,\n      },\n      anchor3: {\n        id: \"anchor3\",\n        x: 250,\n        y: 200,\n      },\n      anchor4: {\n        id: \"anchor4\",\n        x: 250,\n        y: 400,\n      },\n      anchor5: {\n        id: \"anchor5\",\n        x: 250,\n        y: 10,\n      },\n      anchor6: {\n        id: \"anchor6\",\n        x: 100,\n        y: 400,\n        isNodePosition: true,\n      },\n      anchor7: {\n        id: \"anchor7\",\n        x: 100,\n        y: 400,\n        isNodePosition: true,\n      },\n    },\n    allIds: [\"anchor1\", \"anchor2\", \"anchor3\", \"anchor4\", \"anchor5\"],\n  },\n};\n","export const MULTIPLICATIVE_CONST = 100;\n\nexport const R_LEN = 1.4;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\n\nconst R = 0.6 * 0.5 * MULTIPLICATIVE_CONST;\nconst r = (0.7071 * R).toFixed(3);\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        mode: state.mode,\n        // allows to create components directly without using the store\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nconst Lampe = ({\n  fromCoords,\n  toCoords,\n  anchors,\n  mode,\n  selected,\n  showHandles,\n  id,\n  ...props\n}) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const d = Math.sqrt((xFrom - xTo) ** 2 + (yFrom - yTo) ** 2);\n  const ratio = 1 / 2 - R / d;\n  const angle = parseInt(\n    (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n  );\n  return (\n    <g className={`component ${selected ? \"red\" : \"black\"}`}>\n      <g {...props}>\n        <g\n          style={{\n            transform: `translate(${(xFrom + xTo) / 2}px , ${\n              (yFrom + yTo) / 2\n            }px) rotate(${angle}deg)`,\n          }}\n        >\n          <circle cx={0} cy={0} r={R} />\n          <path d={`M -${r} -${r} L ${r} ${r} M -${r} ${r} L ${r} -${r}`} />\n        </g>\n        <path\n          d={`M ${xFrom} ${yFrom} L ${xFrom + ratio * (xTo - xFrom)} ${\n            yFrom + ratio * (yTo - yFrom)\n          }`}\n        />\n        <path\n          d={`M ${xTo} ${yTo} L ${xTo + ratio * (xFrom - xTo)} ${\n            yTo + ratio * (yFrom - yTo)\n          }`}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport const drawer = (element, from, to) =>\n  `\\\\draw (${((from.x / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)}, ${(\n    (-from.y / MULTIPLICATIVE_CONST) *\n    R_LEN\n  ).toFixed(2)}) to[lamp] (${((to.x / MULTIPLICATIVE_CONST) * R_LEN).toFixed(\n    2\n  )}, ${((-to.y / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)});`;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lampe);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\n\nconst height = 0.5;\nconst width = 0.4;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST;\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        mode: state.mode,\n        // allows to create components directly without using the store\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nconst EmptyDiode = ({\n  fromCoords,\n  toCoords,\n  anchors,\n  mode,\n  selected,\n  showHandles,\n  id,\n  ...props\n}) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const d = Math.sqrt((xFrom - xTo) ** 2 + (yFrom - yTo) ** 2);\n  const ratio = (d - width * MULTIPLICATIVE_CONST) / (2 * d); // ratio of the line use by connection\n  const angle = parseInt(\n    (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n  );\n  return (\n    <g className={`component ${selected ? \"red\" : \"black\"}`}>\n      <g {...props}>\n        <g\n          style={{\n            transform: `translate(${(xFrom + xTo) / 2}px , ${\n              (yFrom + yTo) / 2\n            }px) rotate(${angle}deg)`,\n          }}\n        >\n          <path\n            d={`M ${UNIT_X} 0 L ${-UNIT_X} ${-UNIT_Y} L ${-UNIT_X} ${UNIT_Y} Z`}\n          />\n          <path d={`M ${UNIT_X} ${UNIT_Y} L ${UNIT_X} ${-UNIT_Y}`} />\n        </g>\n\n        {/* here start the connection between dipole and anchors */}\n        <path\n          d={`M ${xFrom} ${yFrom} L ${xFrom + ratio * (xTo - xFrom)} ${\n            yFrom + ratio * (yTo - yFrom)\n          }`}\n        />\n        <path\n          d={`M ${xTo} ${yTo} L ${xTo + ratio * (xFrom - xTo)} ${\n            yTo + ratio * (yFrom - yTo)\n          }`}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport const drawer = (element, from, to) =>\n  `\\\\draw (${((from.x / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)}, ${(\n    (-from.y / MULTIPLICATIVE_CONST) *\n    R_LEN\n  ).toFixed(2)}) to[empty diode] (${(\n    (to.x / MULTIPLICATIVE_CONST) *\n    R_LEN\n  ).toFixed(2)}, ${((-to.y / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)});`;\n\nexport default connect(mapStateToProps)(EmptyDiode);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\n\nconst height = 0.8;\nconst height_2 = 0.3;\nconst width = 0.8;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST;\nconst UNIT_Y2 = 0.5 * height_2 * MULTIPLICATIVE_CONST;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST;\n\nexport const getAnchor = ({ fromCoords, toCoords }) => {\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const angle = Math.atan2(yTo - yFrom, xTo - xFrom);\n\n  const x = (xFrom + xTo) / 2 + 55 * Math.sin(angle);\n  const y = (yFrom + yTo) / 2 - 55 * Math.cos(angle);\n  return [{ name: \"wiper\", x, y }];\n};\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        mode: state.mode,\n        // allows to create components directly without using the store\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nconst PR = ({\n  fromCoords,\n  toCoords,\n  mode,\n  selected,\n  showHandles,\n  id,\n  wiper_pos = 0.5,\n  ...props\n}) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const d = Math.sqrt((xFrom - xTo) ** 2 + (yFrom - yTo) ** 2);\n\n  const ratio = (d - width * MULTIPLICATIVE_CONST) / (2 * d); // ratio of the line use by connection\n  const angle = parseInt(\n    (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n  );\n  return (\n    <g className={`component ${selected ? \"red\" : \"black\"}`}>\n      <g {...props}>\n        <g\n          style={{\n            transform: `translate(${(xFrom + xTo) / 2}px , ${\n              (yFrom + yTo) / 2\n            }px) rotate(${angle}deg)`,\n          }}\n        >\n          <path\n            d={`M ${(-6 / 6) * UNIT_X} 0 L ${(-5 / 6) * UNIT_X} ${-UNIT_Y2} L ${\n              (-3 / 6) * UNIT_X\n            } ${UNIT_Y2} L ${(-1 / 6) * UNIT_X} ${-UNIT_Y2} L ${\n              (1 / 6) * UNIT_X\n            } ${UNIT_Y2} L ${(3 / 6) * UNIT_X} ${-UNIT_Y2} L ${\n              (5 / 6) * UNIT_X\n            } ${UNIT_Y2} L ${(6 / 6) * UNIT_X} 0`}\n          />\n          <path\n            d={`M ${\n              -(0.5 - wiper_pos) * width * MULTIPLICATIVE_CONST\n            } ${-UNIT_Y} L ${\n              -(0.5 - wiper_pos) * width * MULTIPLICATIVE_CONST\n            } ${-UNIT_Y2}`}\n          />\n        </g>\n\n        {/* here start the connection between dipole and anchors */}\n        <path\n          d={`M ${xFrom} ${yFrom} L ${xFrom + ratio * (xTo - xFrom)} ${\n            yFrom + ratio * (yTo - yFrom)\n          }`}\n        />\n        <path\n          d={`M ${xTo} ${yTo} L ${xTo + ratio * (xFrom - xTo)} ${\n            yTo + ratio * (yFrom - yTo)\n          }`}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport const drawer = (element, from, to) =>\n  `\\\\draw (${((from.x / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)}, ${(\n    (-from.y / MULTIPLICATIVE_CONST) *\n    R_LEN\n  ).toFixed(2)}) to[pR] (${((to.x / MULTIPLICATIVE_CONST) * R_LEN).toFixed(\n    2\n  )}, ${((-to.y / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)});`;\n\nexport default connect(mapStateToProps)(PR);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { R_LEN, MULTIPLICATIVE_CONST } from \"./constantes\";\n\nconst height = 0.6;\nconst width = 0.5;\nconst capacitor_width = 0.4;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST;\n\nconst STEP = capacitor_width * UNIT_X;\n\nexport const getAnchor = ({ fromCoords, toCoords }) => {\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const angle = Math.atan2(yTo - yFrom, xTo - xFrom);\n\n  const x = (xFrom + xTo) / 2 + 55 * Math.sin(angle);\n  const y = (yFrom + yTo) / 2 - 55 * Math.cos(angle);\n  return [{ name: \"wiper\", x, y }];\n};\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        mode: state.mode,\n        // allows to create components directly without using the store\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nconst Vcapacitor = ({\n  fromCoords,\n  toCoords,\n  mode,\n  selected,\n  showHandles,\n  id,\n  ...props\n}) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const d = Math.sqrt((xFrom - xTo) ** 2 + (yFrom - yTo) ** 2);\n\n  const ratio = (d - 2 * STEP) / (2 * d); // ratio of the line use by connection\n  const angle = parseInt(\n    (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n  );\n  return (\n    <g className={`component ${selected ? \"red\" : \"black\"}`}>\n      <g {...props}>\n        <g\n          style={{\n            transform: `translate(${(xFrom + xTo) / 2}px , ${\n              (yFrom + yTo) / 2\n            }px) rotate(${angle}deg)`,\n          }}\n        >\n          <path d={`M  ${-STEP} ${-UNIT_Y} L ${-STEP} ${UNIT_Y}`} />\n\n          <path d={`M  ${STEP} ${-UNIT_Y} L ${STEP} ${UNIT_Y}`} />\n\n          <path d={`M ${-UNIT_X} ${-UNIT_Y} L ${UNIT_X} ${UNIT_Y}`} />\n        </g>\n\n        {/* here start the connection between dipole and anchors */}\n        <path\n          d={`M ${xFrom} ${yFrom} L ${xFrom + ratio * (xTo - xFrom)} ${\n            yFrom + ratio * (yTo - yFrom)\n          }`}\n        />\n        <path\n          d={`M ${xTo} ${yTo} L ${xTo + ratio * (xFrom - xTo)} ${\n            yTo + ratio * (yFrom - yTo)\n          }`}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport const drawer = (element, from, to) =>\n  `\\\\draw (${((from.x / MULTIPLICATIVE_CONST) * 1.4).toFixed(2)}, ${(\n    (-from.y / MULTIPLICATIVE_CONST) *\n    R_LEN\n  ).toFixed(2)}) to[variable capacitor] (${(\n    (to.x / MULTIPLICATIVE_CONST) *\n    R_LEN\n  ).toFixed(2)}, ${((-to.y / MULTIPLICATIVE_CONST) * 1.4).toFixed(2)});`;\n\nexport default connect(mapStateToProps)(Vcapacitor);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\n\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\n\nconst width = 0.7;\nconst gate_height = 0.35;\nconst base_height = 0.5;\n// const conn_height = 0;\nconst height = 1.1;\nconst base_width = 0.5;\nconst gate_width = 0.62;\n// const arrow_pos = 0.6;\n// const bodydiode_scale = 0.3;\n// const bodydiode_distance = 0.3;\n// const bodydiode_conn = 0.6;\n// const curr_direction = 1;\n\nconst UNIT_X = width * MULTIPLICATIVE_CONST;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST;\n\nconst getElementTranslation = (positionAnchor) => {\n  switch (positionAnchor) {\n    case \"B\":\n      return { x: UNIT_X, y: 0 };\n    case \"C\":\n      return { x: 0, y: UNIT_Y };\n    case \"E\":\n      return { x: 0, y: -UNIT_Y };\n    default:\n      return { x: 0, y: 0 };\n  }\n};\n\nexport const getAnchor = ({ positionAnchor, angle = 0, positionCoords }) => {\n  const { x, y } = positionCoords;\n\n  const { x: dx, y: dy } = getElementTranslation(positionAnchor);\n\n  const Cgap = getElementTranslation(\"C\");\n  const Bgap = getElementTranslation(\"B\");\n  const Egap = getElementTranslation(\"E\");\n  const radAngle = (Math.PI * angle) / 180;\n\n  const Crad = Math.atan2(dy - Cgap.y, dx - Cgap.x);\n  const Brad = Math.atan2(dy - Bgap.y, dx - Bgap.x);\n  const Erad = Math.atan2(dy - Egap.y, dx - Egap.x);\n\n  const distanceC = Math.sqrt((Cgap.x - dx) ** 2 + (Cgap.y - dy) ** 2);\n  const distanceB = Math.sqrt((Bgap.x - dx) ** 2 + (Bgap.y - dy) ** 2);\n  const distanceE = Math.sqrt((Egap.x - dx) ** 2 + (Egap.y - dy) ** 2);\n\n  return [\n    {\n      name: \"C\",\n      x: x + Math.cos(-radAngle + Crad) * distanceC,\n      y: y + Math.sin(-radAngle + Crad) * distanceC,\n    },\n    {\n      name: \"B\",\n      x: x + Math.cos(-radAngle + Brad) * distanceB,\n      y: y + Math.sin(-radAngle + Brad) * distanceB,\n    },\n    {\n      name: \"E\",\n      x: x + Math.cos(-radAngle + Erad) * distanceE,\n      y: y + Math.sin(-radAngle + Erad) * distanceE,\n    },\n  ];\n};\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        mode: state.mode,\n        // allows to create components directly without using the store\n        positionCoords: state.anchors.byId[props.position],\n      }\n    : {};\n};\n\nconst NMOS = ({\n  positionCoords,\n  positionAnchor = \"\",\n  angle = 0,\n  mode,\n  selected,\n  showHandles,\n  id,\n  ...props\n}) => {\n  if (!positionCoords) {\n    return null;\n  }\n  const { x: xAnchor, y: yAnchor } = positionCoords;\n  const { x: deltaX, y: deltaY } = getElementTranslation(positionAnchor);\n\n  return (\n    <g className={`component ${selected ? \"red\" : \"black\"}`}>\n      <g {...props}>\n        <g\n          style={{\n            transform: `translate(${xAnchor}px , ${yAnchor}px) rotate(${-angle}deg)`,\n          }}\n        >\n          <g\n            style={{\n              transform: `translate(${deltaX}px , ${deltaY}px)`,\n            }}\n          >\n            <path\n              d={`M ${0} ${-UNIT_Y} \n                  L ${0} ${-gate_height * UNIT_Y}\n                  L ${-base_width * UNIT_X} ${-gate_height * UNIT_Y}`}\n            />\n            <path\n              d={`M ${-base_width * UNIT_X} ${-base_height * UNIT_Y}\n                  L ${-base_width * UNIT_X} ${base_height * UNIT_Y}\n                  L ${-base_width * UNIT_X} ${gate_height * UNIT_Y}\n                  L ${0} ${gate_height * UNIT_Y}\n                  L ${0} ${UNIT_Y}`}\n            />\n            <path\n              d={`M ${-gate_width * UNIT_X} ${-gate_height * UNIT_Y}\n                  L ${-gate_width * UNIT_X} ${gate_height * UNIT_Y}`}\n              style={{ strokeWidth: 2 }}\n            />\n            <path\n              d={`M ${-gate_width * UNIT_X} 0\n                      L ${-UNIT_X} 0`}\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  );\n};\n\nexport const drawer = (element, position) => {\n  return `\\\\draw (${((position.x / MULTIPLICATIVE_CONST) * R_LEN).toFixed(\n    2\n  )}, ${((-position.y / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)}) node[nmos${\n    element.positionAnchor ? \" ,anchor=\" + element.positionAnchor : \"\"\n  }${\n    element.angle && element.angle !== 0 ? \" ,rotate=\" + element.angle : \"\"\n  }]{};`;\n};\n\nexport default connect(mapStateToProps)(NMOS);\n","import React from \"react\";\nimport Lampe, { drawer as lampeDrawer } from \"./Lampe\";\nimport EmptyDiode, { drawer as emptyDiodeDrawer } from \"./empty_diode\";\nimport PR, { getAnchor as pR_getAnchor, drawer as pRDrawer } from \"./pR\";\nimport Vcapacitor, {\n  getAnchor as vcapacitor_getAnchor,\n  drawer as vcapacitorDrawer,\n} from \"./vcapacitor\";\nimport NMOS, {\n  getAnchor as nmos_getAnchor,\n  drawer as nmosDrawer,\n} from \"./nmos\";\n\nconst getAnchors = {\n  lampe: () => [],\n  \"empty led\": () => [],\n  pR: (props) => pR_getAnchor(props),\n  nmos: (props) => nmos_getAnchor(props),\n  vcapacitor: (props) => vcapacitor_getAnchor(props),\n};\n\nconst getDrawer = {\n  lampe: lampeDrawer,\n  \"empty led\": emptyDiodeDrawer,\n  pR: pRDrawer,\n  nmos: nmosDrawer,\n  vcapacitor: vcapacitorDrawer,\n};\n\nexport const getElementAnchors = (element) => {\n  return getAnchors[element.type](element);\n};\n\nexport const drawElement = (element, position1, position2) => {\n  return getDrawer[element.type](element, position1, position2);\n};\n\nexport const isPath = {\n  lampe: true,\n  \"empty led\": true,\n  pR: true,\n  nmos: false,\n  vcapacitor: true,\n};\n\nconst components = {\n  lampe: (props) => <Lampe key={props.id} {...props} />,\n  \"empty led\": (props) => <EmptyDiode key={props.id} {...props} />,\n  pR: (props) => <PR key={props.id} {...props} />,\n  nmos: (props) => <NMOS key={props.id} {...props} />,\n  vcapacitor: (props) => <Vcapacitor key={props.id} {...props} />,\n};\n\nexport default components;\n","import { getElementAnchors, isPath } from \"../../components\";\n\nexport const getAdhesivePoints = (elementType) => {\n  const adhesivePoints = [];\n  if (isPath[elementType]) {\n    adhesivePoints.push({\n      type: \"ANCHOR\",\n      id: null,\n      dx: 0,\n      dy: 0,\n    });\n  }\n\n  const elementAnchors = getElementAnchors({\n    type: elementType,\n    fromCoords: { x: 0, y: 0 },\n    toCoords: { x: 0, y: 0 },\n    positionCoords: { x: 0, y: 0 },\n  });\n\n  elementAnchors.forEach(({ x, y, name }) => {\n    adhesivePoints.push({\n      type: isPath[elementType] ? \"PATH\" : \"NODE\", // TODO use constant file\n      name: name,\n      id: null,\n      dx: -x,\n      dy: -y,\n    });\n  });\n\n  return adhesivePoints;\n};\n\nexport const componentUseThisAnchor = (element, anchorId) => {\n  if (element.from && element.from === anchorId) {\n    return true;\n  }\n  if (element.to && element.to === anchorId) {\n    return true;\n  }\n  if (element.position && element.position === anchorId) {\n    return true;\n  }\n  return false;\n};\n\nexport const replaceComponentAnchor = (\n  element,\n  previousAnchorId,\n  newAnchorId\n) => {\n  const newElement = { ...element };\n  if (element.from && element.from === previousAnchorId) {\n    newElement.from = newAnchorId;\n  }\n  if (element.to && element.to === previousAnchorId) {\n    newElement.to = newAnchorId;\n  }\n  if (element.position && element.position === previousAnchorId) {\n    newElement.position = newAnchorId;\n  }\n  return { ...newElement };\n};\n\nexport const isInRectangle = ({ x, y }, { x0, y0, x1, y1 }) => {\n  return (\n    Math.abs(x - x0) + Math.abs(x - x1) <= Math.abs(x1 - x0) &&\n    Math.abs(y - y0) + Math.abs(y - y1) <= Math.abs(y1 - y0)\n  );\n};\n\nexport const isAnchor = (state, id) =>\n  id !== null && state.anchors.allIds.includes(id);\n","import { getElementAnchors } from \"../../components\";\n\nimport { replaceComponentAnchor } from \"./utils\";\n\nimport { MODE_DRAG, MODE_SELECT } from \"./interactionModes\";\n\nexport const startDragging = (state, action) => {\n  const anchorsToMove = [];\n  const adhesivePoints = [];\n\n  state.selection.forEach((selectedId) => {\n    if (state.anchors.allIds.includes(selectedId)) {\n      if (adhesivePoints.findIndex((elem) => elem.id === selectedId) === -1) {\n        adhesivePoints.push({\n          type: \"ANCHOR\",\n          id: selectedId,\n          dx: action.x - state.anchors.byId[selectedId].x,\n          dy: action.y - state.anchors.byId[selectedId].y,\n        });\n      }\n    } else if (state.pathComponents.allIds.includes(selectedId)) {\n      const anchors = getElementAnchors({\n        ...state.pathComponents.byId[selectedId],\n        fromCoords:\n          state.pathComponents.byId[selectedId].from &&\n          state.anchors.byId[state.pathComponents.byId[selectedId].from],\n        toCoords:\n          state.pathComponents.byId[selectedId].to &&\n          state.anchors.byId[state.pathComponents.byId[selectedId].to],\n        positionCoords:\n          state.pathComponents.byId[selectedId].position &&\n          state.anchors.byId[state.pathComponents.byId[selectedId].position],\n      });\n\n      anchors.forEach(({ x, y, name }) => {\n        adhesivePoints.push({\n          type: state.pathComponents.byId[selectedId].position\n            ? \"NODE\"\n            : \"PATH\", // TODO use constant file\n          name: name,\n          id: selectedId,\n          dx: action.x - x,\n          dy: action.y - y,\n        });\n      });\n      if (\n        state.pathComponents.byId[selectedId].from &&\n        adhesivePoints.findIndex(\n          (elem) => elem.id === state.pathComponents.byId[selectedId].from\n        ) === -1\n      ) {\n        //the from anchor is new\n        const fromId = state.pathComponents.byId[selectedId].from;\n        adhesivePoints.push({\n          type: \"ANCHOR\", // TODO use constant file\n          id: fromId,\n          dx: action.x - state.anchors.byId[fromId].x,\n          dy: action.y - state.anchors.byId[fromId].y,\n        });\n      }\n      if (\n        state.pathComponents.byId[selectedId].to &&\n        adhesivePoints.findIndex(\n          (elem) => elem.id === state.pathComponents.byId[selectedId].to\n        ) === -1\n      ) {\n        //the to anchor is new\n        const toId = state.pathComponents.byId[selectedId].to;\n        adhesivePoints.push({\n          type: \"ANCHOR\",\n          id: toId,\n          dx: action.x - state.anchors.byId[toId].x,\n          dy: action.y - state.anchors.byId[toId].y,\n        });\n      }\n    }\n  });\n\n  const pile = [...state.selection];\n  const nodeSeen = [];\n  while (pile.length > 0) {\n    const selectedId = pile.pop();\n\n    if (state.anchors.allIds.includes(selectedId)) {\n      if (!anchorsToMove.includes(selectedId)) {\n        anchorsToMove.push(selectedId);\n      }\n    } else if (state.pathComponents.allIds.includes(selectedId)) {\n      if (\n        state.pathComponents.byId[selectedId].from &&\n        !anchorsToMove.includes(state.pathComponents.byId[selectedId].from)\n      ) {\n        anchorsToMove.push(state.pathComponents.byId[selectedId].from);\n      }\n      if (\n        state.pathComponents.byId[selectedId].to &&\n        !anchorsToMove.includes(state.pathComponents.byId[selectedId].to)\n      ) {\n        anchorsToMove.push(state.pathComponents.byId[selectedId].to);\n      }\n      if (state.pathComponents.byId[selectedId].position) {\n        if (\n          !anchorsToMove.includes(\n            state.pathComponents.byId[selectedId].position\n          )\n        ) {\n          anchorsToMove.push(state.pathComponents.byId[selectedId].position);\n        }\n        if (!nodeSeen.includes(selectedId)) {\n          nodeSeen.push(selectedId);\n          state.weakLinks.forEach(({ anchorId, nodeId }) => {\n            if (nodeId === selectedId && !anchorsToMove.includes(anchorId)) {\n              anchorsToMove.push(anchorId);\n            }\n          });\n        }\n      }\n    }\n  }\n\n  return {\n    ...state,\n    mode: MODE_DRAG,\n    anchorsToMove: [...anchorsToMove],\n    adhesivePoints: [...adhesivePoints],\n    originalPosition: { x: action.x, y: action.y },\n    alreadyMoved: { x: 0, y: 0 },\n    weakLinksToRemove: [\n      ...state.weakLinks\n        .filter(\n          ({ anchorId, nodeId }) =>\n            anchorsToMove.includes(anchorId) &&\n            !anchorsToMove.includes(state.pathComponents.byId[nodeId].position)\n        )\n        .map(({ anchorId, nodeId }) => anchorId + \"-\" + nodeId),\n    ],\n  };\n};\n\nexport const stopDragging = (state, action) => {\n  if (\n    state.currentMagnet.attractor &&\n    state.currentMagnet.attracted &&\n    state.currentMagnet.attracted.type === \"ANCHOR\" &&\n    state.currentMagnet.attractor.type === \"ANCHOR\"\n  ) {\n    // we need to fusion those anchors\n    const anchorToRemoveID = state.currentMagnet.attracted.id;\n    const anchorToUseId = state.currentMagnet.attractor.id;\n\n    // remove anchor\n    const anchorToRemoveIDIndex = state.anchors.allIds.findIndex(\n      (id) => id === anchorToRemoveID\n    );\n    const {\n      [anchorToRemoveID]: anchorToRemove,\n      ...remainingAnchors\n    } = state.anchors.byId;\n\n    //const update elements\n    const newByIDElements = {};\n    state.pathComponents.allIds.forEach((id) => {\n      newByIDElements[id] = replaceComponentAnchor(\n        state.pathComponents.byId[id],\n        anchorToRemoveID,\n        anchorToUseId\n      );\n    });\n\n    return {\n      ...state,\n      anchors: {\n        byId: { ...remainingAnchors },\n        allIds: [\n          ...state.anchors.allIds.slice(0, anchorToRemoveIDIndex),\n          ...state.anchors.allIds.slice(anchorToRemoveIDIndex + 1),\n        ],\n      },\n      pathComponents: {\n        ...state.pathComponents,\n        byId: { ...newByIDElements },\n      },\n      mode: MODE_SELECT,\n      anchorsToMove: [],\n      originalPosition: {},\n      alreadyMoved: {},\n      weakLinksToRemove: [],\n      weakLinks: [\n        ...state.weakLinks.filter(\n          ({ anchorId, nodeId }) =>\n            !state.weakLinksToRemove.includes(anchorId + \"-\" + nodeId)\n        ),\n      ],\n    };\n  }\n\n  if (\n    state.currentMagnet.attractor &&\n    state.currentMagnet.attracted &&\n    ((state.currentMagnet.attracted.type === \"NODE\" &&\n      state.currentMagnet.attractor.type === \"ANCHOR\") ||\n      (state.currentMagnet.attracted.type === \"ANCHOR\" &&\n        state.currentMagnet.attractor.type === \"NODE\"))\n  ) {\n    const nodeId =\n      state.currentMagnet.attracted.type === \"NODE\"\n        ? state.currentMagnet.attracted.id\n        : state.currentMagnet.attractor.id;\n    const anchorId =\n      state.currentMagnet.attracted.type === \"ANCHOR\"\n        ? state.currentMagnet.attracted.id\n        : state.currentMagnet.attractor.id;\n    const name =\n      state.currentMagnet.attracted.type === \"NODE\"\n        ? state.currentMagnet.attracted.name\n        : state.currentMagnet.attractor.name;\n\n    return {\n      ...state,\n      mode: MODE_SELECT,\n      anchorsToMove: [],\n      originalPosition: {},\n      alreadyMoved: {},\n      weakLinksToRemove: [],\n      weakLinks: [\n        ...state.weakLinks.filter(\n          ({ anchorId, nodeId }) =>\n            !state.weakLinksToRemove.includes(anchorId + \"-\" + nodeId)\n        ),\n        { anchorId, nodeId, name },\n      ],\n    };\n  }\n\n  return {\n    ...state,\n    mode: MODE_SELECT,\n    anchorsToMove: [],\n    originalPosition: {},\n    alreadyMoved: {},\n\n    weakLinksToRemove: [],\n\n    weakLinks: [\n      ...state.weakLinks.filter(\n        ({ anchorId, nodeId }) =>\n          !state.weakLinksToRemove.includes(anchorId + \"-\" + nodeId)\n      ),\n    ],\n  };\n};\n\nexport const updatePosition = (state, action) => {\n  const { x, y, shiftPress } = action;\n  const { x: originalX, y: originalY } = state.originalPosition;\n\n  let newMoveX, newMoveY;\n  // if shift is pressed only allow to move along x or y axis\n  if (shiftPress) {\n    if (Math.abs(x - originalX) > Math.abs(y - originalY)) {\n      newMoveX = x - originalX;\n      newMoveY = 0;\n    } else {\n      newMoveX = 0;\n      newMoveY = y - originalY;\n    }\n  } else {\n    newMoveX = x - originalX;\n    newMoveY = y - originalY;\n  }\n\n  const anchorById = state.anchors.byId;\n  state.anchorsToMove.forEach((anchorId) => {\n    anchorById[anchorId] = {\n      ...anchorById[anchorId],\n      x: anchorById[anchorId].x + newMoveX - state.alreadyMoved.x,\n      y: anchorById[anchorId].y + newMoveY - state.alreadyMoved.y,\n    };\n  });\n\n  return {\n    ...state,\n    anchors: {\n      ...state.anchors,\n      byId: { ...anchorById },\n    },\n    alreadyMoved: {\n      x: newMoveX,\n      y: newMoveY,\n    },\n  };\n};\n","import { componentUseThisAnchor } from \"./utils\";\n\nconst deleteElement = (state, action) => {\n  const selection = action.selection;\n  if (\n    selection.length === 1 &&\n    state.pathComponents.allIds.includes(selection[0])\n  ) {\n    // we only consider the deletion of a component (not anchors)\n    const componentId = selection[0];\n\n    const anchorToChange = [\"from\", \"to\", \"position\"]\n      .map((arg) => state.pathComponents.byId[componentId][arg])\n      .filter((id) => !!id);\n\n    // get the list of of ids of anchors that are not anymore used by components\n    const anchorToRemove = anchorToChange.filter((anchorId) => {\n      return (\n        state.pathComponents.allIds.filter((elementId) =>\n          componentUseThisAnchor(state.pathComponents.byId[elementId], anchorId)\n        ).length === 1\n      );\n    });\n\n    const newAnchors = { ...state.anchors.byId };\n    anchorToRemove.forEach((id) => delete newAnchors[id]);\n\n    const newComponents = { ...state.pathComponents.byId };\n    delete newComponents[componentId];\n    return {\n      ...state,\n      pathComponents: {\n        allIds: [\n          ...state.pathComponents.allIds.filter((id) => id !== componentId),\n        ],\n        byId: { ...newComponents },\n      },\n      anchors: {\n        byId: { ...newAnchors },\n        allIds: [\n          ...state.anchors.allIds.filter((id) => !anchorToRemove.includes(id)),\n        ],\n      },\n      weakLinks: [\n        ...state.weakLinks.filter(\n          ({ anchorId, nodeId, name }) =>\n            nodeId !== componentId && !anchorToRemove.includes(anchorId)\n        ),\n      ],\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default deleteElement;\n","import { getAdhesivePoints, isAnchor } from \"./utils\";\n\nimport { MODE_CREATE_PATH_ELEMENT } from \"./interactionModes\";\n\nimport { v4 as uuid } from \"uuid\";\n\nexport const startCreatePathElement = (state, action) => {\n  return {\n    ...state,\n    selection: [],\n    adhesivePoints: [...getAdhesivePoints(action.elementType)],\n    mode: MODE_CREATE_PATH_ELEMENT,\n    newPath: {\n      elementType: action.elementType,\n      isFromValidated: false,\n      from: { x: null, y: null },\n      to: { x: null, y: null },\n      attractorTo: null,\n      attractorFrom: null,\n    },\n  };\n};\n\nexport const validateFirstStepPathElement = (state, action) => {\n  return {\n    ...state,\n    newPath: {\n      ...state.newPath,\n      attractorFrom: state.currentMagnet.attractor && {\n        ...state.currentMagnet.attractor,\n      },\n      to: { x: null, y: null },\n      attractorTo: null,\n      isFromValidated: true,\n      movedAfterFromCreation: false,\n    },\n  };\n};\n\nexport const invalidateFirstStepPathElement = (state, action) => {\n  if (state.newPath.movedAfterFromCreation && state.newPath.isFromValidated) {\n    return {\n      ...state,\n      newPath: {\n        ...state.newPath,\n        from: { ...state.newPath.to },\n        attractorFrom: state.newPath.attractorTo && {\n          ...state.newPath.attractorTo,\n        },\n        to: { x: null, y: null },\n        attractorTo: null,\n        isFromValidated: false,\n      },\n    };\n  } else {\n    return state;\n  }\n};\n\nexport const savePathElement = (state, action) => {\n  const attractorTo = state.currentMagnet.attractor && {\n    ...state.currentMagnet.attractor,\n  };\n  const { attractorFrom, from, to, elementType } = state.newPath;\n\n  const newId_element = uuid();\n\n  const fromAnchor =\n    attractorFrom && attractorFrom.type === \"ANCHOR\"\n      ? attractorFrom.id\n      : uuid();\n  const toAnchor =\n    attractorTo && attractorTo.type === \"ANCHOR\" ? attractorTo.id : uuid();\n\n  // create anchors if necessary\n  let newAnchors = { ...state.anchors };\n  if (!attractorFrom || attractorFrom.type !== \"ANCHOR\") {\n    newAnchors = {\n      byId: {\n        ...newAnchors.byId,\n        [fromAnchor]: {\n          id: fromAnchor,\n          x: from.x,\n          y: from.y,\n        },\n      },\n      allIds: [...newAnchors.allIds, fromAnchor],\n    };\n  }\n  if (!attractorTo || attractorTo.type !== \"ANCHOR\") {\n    newAnchors = {\n      byId: {\n        ...newAnchors.byId,\n        [toAnchor]: {\n          id: toAnchor,\n          x: to.x,\n          y: to.y,\n        },\n      },\n      allIds: [...newAnchors.allIds, toAnchor],\n    };\n  }\n\n  // create weak links if necessary\n  const newWeakLinks = [];\n  if (attractorFrom && attractorFrom.type === \"NODE\") {\n    newWeakLinks.push({\n      anchorId: fromAnchor,\n      nodeId: attractorFrom.id,\n      name: attractorFrom.name,\n    });\n  }\n  if (attractorTo && attractorTo.type === \"NODE\") {\n    newWeakLinks.push({\n      anchorId: toAnchor,\n      nodeId: attractorTo.id,\n      name: attractorTo.name,\n    });\n  }\n\n  return {\n    ...state,\n    newPath: {\n      ...state.newPath,\n      isFromValidated: false,\n      from: {\n        ...to,\n      },\n      attractorFrom: attractorTo && { ...attractorTo },\n      to: {\n        x: null,\n        y: null,\n      },\n    },\n    pathComponents: {\n      byId: {\n        ...state.pathComponents.byId,\n        [newId_element]: {\n          id: newId_element,\n          from: fromAnchor,\n          to: toAnchor,\n          type: elementType,\n        },\n      },\n      allIds: [...state.pathComponents.allIds, newId_element],\n    },\n    anchors: { ...newAnchors },\n    weakLinks: [...state.weakLinks, ...newWeakLinks],\n  };\n};\n\nexport const updatePosition = (state, action) => {\n  const { x, y } = action;\n  if (state.newPath.isFromValidated) {\n    return {\n      ...state,\n      newPath: {\n        ...state.newPath,\n        to: { x: x, y: y },\n        movedAfterFromCreation: true,\n      },\n    };\n  } else {\n    return {\n      ...state,\n      newPath: {\n        ...state.newPath,\n        from: { x: x, y: y },\n      },\n    };\n  }\n};\n","import { isInRectangle } from \"./utils\";\n\nimport { MODE_SELECT, MODE_RECTANGLE_SELECTION } from \"./interactionModes\";\n\nexport const updatePosition = (state, action) => {\n  const { x, y } = action;\n  const newRectangle = {\n    ...state.rectangleSelection,\n    x1: x,\n    y1: y,\n  };\n\n  return {\n    ...state,\n    selection: [\n      ...state.anchors.allIds.filter((id) =>\n        isInRectangle(state.anchors.byId[id], newRectangle)\n      ),\n    ],\n    rectangleSelection: {\n      ...state.rectangleSelection,\n      x1: x,\n      y1: y,\n    },\n  };\n};\n\nexport const stopRectangleSelection = (state, action) => {\n  // add equality verification, if rectangle has no area it's probably a single click\n  // so we reset the selection\n  return {\n    ...state,\n    mode: MODE_SELECT,\n    rectangleSelection: {},\n    selection:\n      state.rectangleSelection.x0 === state.rectangleSelection.x1 ||\n      state.rectangleSelection.y0 === state.rectangleSelection.y1\n        ? []\n        : [...state.selection],\n  };\n};\n\nexport const startRectangleSelection = (state, action) => {\n  return {\n    ...state,\n    mode: MODE_RECTANGLE_SELECTION,\n    rectangleSelection: {\n      x0: action.x,\n      y0: action.y,\n      x1: action.x,\n      y1: action.y,\n    },\n  };\n};\n","import { MODE_CREATE_NODE_ELEMENT } from \"./interactionModes\";\n\nimport { getAdhesivePoints, isAnchor } from \"./utils\";\n\nimport { v4 as uuid } from \"uuid\";\n\nexport const updatePosition = (state, action) => {\n  const { x, y } = action;\n  return {\n    ...state,\n    newNode: {\n      ...state.newNode,\n      position: { x: x, y: y },\n    },\n  };\n};\n\nexport const startNodeCreation = (state, action) => {\n  return {\n    ...state,\n    selection: [],\n    adhesivePoints: [...getAdhesivePoints(action.elementType)],\n    mode: MODE_CREATE_NODE_ELEMENT,\n    newNode: {\n      elementType: action.elementType,\n      position: { x: null, y: null },\n    },\n  };\n};\n\nexport const saveNodeCreation = (state, action) => {\n  if (\n    state.mode === MODE_CREATE_NODE_ELEMENT &&\n    state.newNode.position.x !== null &&\n    state.newNode.position.y !== null\n  ) {\n    const newId_element = uuid();\n    const positionId = uuid();\n\n    const newWeakLink = [];\n\n    if (state.currentMagnet.attractor && state.currentMagnet.attracted) {\n      // node created relatively to an anchor\n      // We will link this anchor to the new node\n      const anchorId =\n        state.currentMagnet.attracted.type === \"ANCHOR\"\n          ? state.currentMagnet.attracted.id\n          : state.currentMagnet.attractor.id;\n      const anchorName =\n        state.currentMagnet.attracted.type === \"ANCHOR\"\n          ? state.currentMagnet.attractor.name\n          : state.currentMagnet.attracted.name;\n\n      newWeakLink.push({ anchorId, nodeId: newId_element, name: anchorName });\n    }\n\n    return {\n      ...state,\n      newNode: {\n        ...state.newNode,\n        position: { x: null, y: null },\n      },\n      pathComponents: {\n        byId: {\n          ...state.pathComponents.byId,\n          [newId_element]: {\n            id: newId_element,\n            position: positionId,\n            type: state.newNode.elementType,\n          },\n        },\n        allIds: [...state.pathComponents.allIds, newId_element],\n      },\n      anchors: {\n        ...state.anchors,\n        byId: {\n          ...state.anchors.byId,\n          [positionId]: {\n            id: positionId,\n            x: state.newNode.position.x,\n            y: state.newNode.position.y,\n            isNodePosition: true,\n          },\n        },\n      },\n      weakLinks: [...state.weakLinks, ...newWeakLink],\n    };\n  }\n  return state;\n};\n","import { componentUseThisAnchor, replaceComponentAnchor } from \"./utils\";\n\nimport { v4 as uuid } from \"uuid\";\n\nexport const stackAnchors = (state, action) => {\n  const anchorsSelected = state.selection.filter(\n    (id) => id in state.anchors.byId\n  );\n  if (\n    anchorsSelected.length <= 1 ||\n    ![\"U\", \"D\", \"L\", \"R\"].includes(action.direction)\n  ) {\n    return state;\n  } else {\n    const newPosition = {};\n\n    anchorsSelected.forEach((id, index) => {\n      const anchor = state.anchors.byId[id];\n\n      switch (action.direction) {\n        case \"U\":\n          newPosition.y =\n            index === 0 ? anchor.y : Math.min(newPosition.y, anchor.y);\n          break;\n        case \"D\":\n          newPosition.y =\n            index === 0 ? anchor.y : Math.max(newPosition.y, anchor.y);\n          break;\n        case \"L\":\n          newPosition.x =\n            index === 0 ? anchor.x : Math.min(newPosition.x, anchor.x);\n          break;\n        case \"R\":\n          newPosition.x =\n            index === 0 ? anchor.x : Math.max(newPosition.x, anchor.x);\n          break;\n        default:\n          break;\n      }\n    });\n\n    anchorsSelected.forEach((id) => {\n      state.anchors.byId[id] = {\n        ...state.anchors.byId[id],\n        ...newPosition,\n      };\n    });\n    return {\n      ...state,\n      anchors: {\n        byId: { ...state.anchors.byId },\n        allIds: state.anchors.allIds,\n      },\n    };\n  }\n};\n\nexport const splitAnchor = (state, action) => {\n  let anchorId = action.anchorId;\n  if (\n    !anchorId &&\n    state.selection.length === 1 &&\n    state.anchors.allIds.includes(state.selection[0])\n  ) {\n    anchorId = state.selection[0];\n  }\n  if (anchorId && state.anchors.allIds.includes(anchorId)) {\n    const componentsToChange = state.pathComponents.allIds.filter((id) =>\n      componentUseThisAnchor(state.pathComponents.byId[id], anchorId)\n    );\n    if (componentsToChange.length <= 1) {\n      return state;\n    }\n\n    const newAnchors = state.anchors;\n    const newComponents = state.pathComponents.byId;\n\n    componentsToChange.slice(1).forEach((componentId) => {\n      const newAnchorId = uuid();\n\n      newComponents[componentId] = replaceComponentAnchor(\n        state.pathComponents.byId[componentId],\n        anchorId,\n        newAnchorId\n      );\n\n      newAnchors.allIds = [newAnchorId, ...newAnchors.allIds];\n      newAnchors.byId = {\n        ...newAnchors.byId,\n        [newAnchorId]: { ...newAnchors.byId[anchorId] },\n      };\n    });\n\n    return {\n      ...state,\n      pathComponents: {\n        ...state.pathComponents,\n        byId: { ...newComponents },\n      },\n      anchors: {\n        allIds: [...newAnchors.allIds],\n        byId: { ...newAnchors.byId },\n      },\n    };\n  }\n  return state;\n};\n","import { createStore } from \"redux\";\nimport {\n  START_DRAGGING,\n  START_SELECT,\n  TOGGLE_SELECTION,\n  STOP_DRAGGING,\n  START_CREATE_PATH_ELEMENT,\n  START_CREATE_NODE_ELEMENT,\n  ELEMENT_CREATION_NEXT_STEP,\n  VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  SAVE_PATH_ELEMENT_CREATION,\n  UPDATE_POSITION,\n  SPLIT_ANCHOR,\n  START_RECTANGLE_SELECTION,\n  STOP_RECTANGLE_SELECTION,\n  STACK_SELECTED_ANCHORS,\n  DELETE_ELEMENT,\n} from \"../actions\";\n\nimport {\n  MODE_SELECT,\n  MODE_DRAG,\n  MODE_CREATE_PATH_ELEMENT,\n  MODE_CREATE_NODE_ELEMENT,\n  MODE_RECTANGLE_SELECTION,\n} from \"./interactionModes\";\n\nimport { initial_state } from \"./debugInitialState\";\n\nimport {\n  startDragging,\n  stopDragging,\n  updatePosition as draggingUpdatePosition,\n} from \"./dragging\";\n\nimport deleteElement from \"./delete\";\nimport {\n  startCreatePathElement,\n  validateFirstStepPathElement,\n  invalidateFirstStepPathElement,\n  savePathElement,\n  updatePosition as pathCreationUpdatePosition,\n} from \"./pathCreation\";\n\nimport {\n  stopRectangleSelection,\n  startRectangleSelection,\n  updatePosition as rectangleSelectionUpdatePosition,\n} from \"./rectangleSelection\";\n\nimport {\n  startNodeCreation,\n  saveNodeCreation,\n  updatePosition as nodeCreationUpdatePosition,\n} from \"./nodeCreation\";\n\nimport { stackAnchors, splitAnchor } from \"./anchorHelper\";\n\nfunction update(state = initial_state, action) {\n  switch (action.type) {\n    case TOGGLE_SELECTION:\n      if (action.reset) {\n        return {\n          ...state,\n          selection: [action.objectId],\n        };\n      } else {\n        const index = state.selection.findIndex((x) => x === action.objectId);\n        if (index >= 0) {\n          return {\n            ...state,\n            selection: [\n              ...state.selection.slice(0, index),\n              ...state.selection.slice(index + 1),\n            ],\n          };\n        } else {\n          return {\n            ...state,\n            selection: [...state.selection, action.objectId],\n          };\n        }\n      }\n    case START_SELECT:\n      return {\n        ...state,\n        selection: [],\n        adhesivePoints: [],\n        mode: MODE_SELECT,\n      };\n\n    case START_DRAGGING:\n      return startDragging(state, action);\n\n    case STOP_DRAGGING:\n      return stopDragging(state, action);\n\n    case UPDATE_POSITION:\n      const { attractor, attracted } = action;\n      switch (state.mode) {\n        case MODE_DRAG:\n          return {\n            ...draggingUpdatePosition(state, action),\n            currentMagnet: { attractor, attracted },\n          };\n\n        case MODE_CREATE_PATH_ELEMENT:\n          return {\n            ...pathCreationUpdatePosition(state, action),\n            currentMagnet: { attractor, attracted },\n          };\n\n        case MODE_CREATE_NODE_ELEMENT:\n          return {\n            ...nodeCreationUpdatePosition(state, action),\n            currentMagnet: { attractor, attracted },\n          };\n\n        case MODE_RECTANGLE_SELECTION:\n          return {\n            ...rectangleSelectionUpdatePosition(state, action),\n            currentMagnet: { attractor, attracted },\n          };\n\n        default:\n          return {\n            ...state,\n            currentMagnet: { attractor, attracted },\n          };\n      }\n\n    case START_CREATE_PATH_ELEMENT:\n      return startCreatePathElement(state, action);\n\n    case START_CREATE_NODE_ELEMENT:\n      return startNodeCreation(state, action);\n\n    case ELEMENT_CREATION_NEXT_STEP:\n      return saveNodeCreation(state, action);\n\n    case VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION:\n      return validateFirstStepPathElement(state, action);\n\n    case INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION:\n      return invalidateFirstStepPathElement(state, action);\n\n    case SAVE_PATH_ELEMENT_CREATION:\n      return savePathElement(state, action);\n\n    case SPLIT_ANCHOR:\n      return splitAnchor(state, action);\n\n    case START_RECTANGLE_SELECTION:\n      return startRectangleSelection(state, action);\n\n    case STOP_RECTANGLE_SELECTION:\n      return stopRectangleSelection(state, action);\n\n    case STACK_SELECTED_ANCHORS:\n      return stackAnchors(state, action);\n\n    case DELETE_ELEMENT:\n      return deleteElement(state, action);\n\n    default:\n      return state;\n  }\n}\n\n// Create a Redux store holding the state of your app.\n// Its API is { subscribe, dispatch, getState }.\nlet store = createStore(update);\n\nexport default store;\n","import React from \"react\";\nimport components from \"../components\";\nimport { connect } from \"react-redux\";\nimport { MODE_SELECT } from \"../redux/store/interactionModes\";\nimport { toggleSelection, startDragging } from \"../redux/actions\";\n\nconst mapDispatchToProps = (dispatch, { svgRef }) => {\n  return {\n    toggleSelection: (objectId, reset) =>\n      dispatch(toggleSelection(objectId, reset)),\n    startDragging: (x, y) => {\n      const { x: xOffset, y: yOffset } = svgRef.current.getBoundingClientRect();\n      dispatch(startDragging(x - xOffset, y - yOffset));\n    },\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    pathComponents: state.pathComponents,\n    selection: state.selection,\n    mode: state.mode,\n  };\n};\n\nconst Components = ({\n  pathComponents,\n  selection,\n  mode,\n  startDragging,\n  toggleSelection,\n}) => (\n  <>\n    {pathComponents.allIds.map(\n      (id) =>\n        pathComponents.byId[id].type &&\n        components[pathComponents.byId[id].type]({\n          ...pathComponents.byId[id],\n          onMouseDown:\n            mode === MODE_SELECT\n              ? (event) => {\n                  event.stopPropagation();\n                  if (\n                    !event.ctrlKey &&\n                    selection.includes(pathComponents.byId[id].id)\n                  ) {\n                    startDragging(\n                      event.nativeEvent.clientX,\n                      event.nativeEvent.clientY\n                    );\n                  } else {\n                    toggleSelection(pathComponents.byId[id].id, !event.ctrlKey);\n                  }\n                }\n              : null,\n          selected: selection.includes(pathComponents.byId[id].id),\n          // showHandles: mode === MODE_LINK,\n        })\n    )}\n  </>\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Components);\n","import React from \"react\";\n\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { MODE_SELECT } from \"../redux/store/interactionModes\";\nimport { toggleSelection, startDragging } from \"../redux/actions\";\n\nconst mapDispatchToProps = (dispatch, { svgRef }) => {\n  return {\n    toggleSelection: (objectId, reset) =>\n      dispatch(toggleSelection(objectId, reset)),\n    startDragging: (x, y) => {\n      const { x: xOffset, y: yOffset } = svgRef.current.getBoundingClientRect();\n      dispatch(startDragging(x - xOffset, y - yOffset));\n    },\n  };\n};\nconst mapStateToProps = (state, { id }) => {\n  return {\n    x: state.anchors.byId[id].x,\n    y: state.anchors.byId[id].y,\n    mode: state.mode,\n    selected: state.selection.includes(id),\n  };\n};\n\nconst Anchor = ({\n  id,\n  x,\n  y,\n  mode,\n  selected,\n  startDragging,\n  toggleSelection,\n}) => (\n  <circle\n    cx={x}\n    cy={y}\n    r={5}\n    className={`anchor ${selected ? \"selected\" : \"\"}`}\n    onMouseDown={\n      mode === MODE_SELECT\n        ? (event) => {\n            event.stopPropagation();\n            if (!event.ctrlKey && selected) {\n              startDragging(\n                event.nativeEvent.clientX,\n                event.nativeEvent.clientY\n              );\n            } else {\n              toggleSelection(id, !event.ctrlKey);\n            }\n          }\n        : null\n    }\n  />\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Anchor);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Anchor from \"../atoms/anchor\";\n\nconst mapStateToProps = (state) => {\n  return {\n    anchorIds: state.anchors.allIds,\n  };\n};\n\nconst Anchors = ({ anchorIds, svgRef }) => (\n  <>\n    {anchorIds.map((id) => (\n      <Anchor key={id} id={id} svgRef={svgRef} />\n    ))}\n  </>\n);\n\nexport default connect(mapStateToProps)(Anchors);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { updatePosition, stopDragging } from \"../redux/actions\";\nimport { MODE_DRAG } from \"../redux/store/interactionModes\";\nconst mapDispatchToProps = (dispatch, { attractor, attracted }) => {\n  return {\n    updatePosition: (x, y) =>\n      dispatch(updatePosition({ x, y, attractor, attracted })),\n    stopDragging: () => dispatch(stopDragging()),\n  };\n};\n\nconst Magnet = ({\n  id,\n  x,\n  y,\n  dx,\n  dy,\n  color,\n  mode,\n  updatePosition,\n  stopDragging,\n}) => {\n  const [isUsed, setIsUsed] = useState(false);\n\n  return (\n    <>\n      {isUsed && (\n        <circle\n          cx={x}\n          cy={y}\n          r={5}\n          style={{\n            fill: \"none\",\n            stroke: \"red\",\n            strokeWidth: 2,\n          }}\n        />\n      )}\n      <circle\n        cx={x + dx}\n        cy={y + dy}\n        r={10}\n        style={{\n          fill: color || \"transparent\",\n        }}\n        onMouseEnter={(event) => {\n          event.stopPropagation();\n          updatePosition(x + dx, y + dy);\n          setIsUsed(true);\n        }}\n        onMouseLeave={() => setIsUsed(false)}\n        onMouseMove={\n          (event) => event.stopPropagation() //stop the propagation\n        }\n        onMouseUp={\n          mode === MODE_DRAG\n            ? (event) => {\n                event.stopPropagation();\n                stopDragging();\n              }\n            : null\n        }\n      />\n    </>\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(Magnet);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  MODE_CREATE_PATH_ELEMENT,\n  MODE_CREATE_NODE_ELEMENT,\n  MODE_DRAG,\n} from \"../redux/store/interactionModes\";\n\nimport Magnet from \"../atoms/magnet\";\nimport { getElementAnchors } from \"../components\";\n\nconst mapStateToProps = (state) => {\n  return {\n    anchors: state.anchors,\n    pathComponents: state.pathComponents,\n    mode: state.mode,\n    anchorsToMove: state.anchorsToMove,\n    selection: state.selection,\n    adhesivePoints: state.adhesivePoints || null,\n  };\n};\n\nconst isMoving = (element, anchorsToMove) => {\n  // help function to filter magnets\n  if (!anchorsToMove) {\n    return false;\n  }\n  if (typeof element == \"string\" && anchorsToMove.includes(element)) {\n    return true;\n  }\n  if (element.from && anchorsToMove.includes(element.from)) {\n    return true;\n  }\n  if (element.to && anchorsToMove.includes(element.to)) {\n    return true;\n  }\n  if (element.position && anchorsToMove.includes(element.position)) {\n    return true;\n  }\n  return false;\n};\n\nconst Magnets = ({\n  mode,\n  anchors,\n  pathComponents,\n  anchorsToMove,\n  adhesivePoints,\n}) => {\n  if (\n    mode !== MODE_DRAG &&\n    mode !== MODE_CREATE_NODE_ELEMENT &&\n    mode !== MODE_CREATE_PATH_ELEMENT\n  ) {\n    return null;\n  }\n\n  return (\n    <>\n      {pathComponents.allIds\n        .filter((id) => !isMoving(pathComponents.byId[id], anchorsToMove))\n        .reduce(\n          (accumulator, id) => [\n            ...accumulator,\n            ...getElementAnchors({\n              ...pathComponents.byId[id],\n              fromCoords:\n                pathComponents.byId[id].from &&\n                anchors.byId[pathComponents.byId[id].from],\n              toCoords:\n                pathComponents.byId[id].to &&\n                anchors.byId[pathComponents.byId[id].to],\n              positionCoords:\n                pathComponents.byId[id].position &&\n                anchors.byId[pathComponents.byId[id].position],\n            }).map(({ x, y, name }) =>\n              adhesivePoints.reduce(\n                (\n                  accu,\n                  { type, dx, dy, name: nameAdhesive = \"\", id: idAdhesive }\n                ) => {\n                  return [\n                    ...accu,\n                    <Magnet\n                      key={`${id}-${name}<-${idAdhesive}-${nameAdhesive || \"\"}`}\n                      x={x}\n                      dx={dx}\n                      y={y}\n                      dy={dy}\n                      mode={mode}\n                      attractor={{\n                        type: pathComponents.byId[id].position\n                          ? \"NODE\"\n                          : \"PATH\",\n                        name: name,\n                        id: id,\n                      }}\n                      attracted={{\n                        type: type,\n                        name: nameAdhesive,\n                        id: idAdhesive,\n                      }}\n                    />,\n                  ];\n                },\n                []\n              )\n            ),\n          ],\n          []\n        )}\n      {anchors.allIds\n        .filter((id) => !isMoving(id, anchorsToMove))\n        .map((id) =>\n          adhesivePoints.reduce(\n            (\n              accu,\n              { type, dx, dy, name: nameAdhesive = \"\", id: idAdhesive }\n            ) => {\n              return [\n                ...accu,\n                <Magnet\n                  key={`${id}<-${idAdhesive}-${nameAdhesive || \"\"}`}\n                  x={anchors.byId[id].x}\n                  dx={dx}\n                  y={anchors.byId[id].y}\n                  dy={dy}\n                  mode={mode}\n                  attractor={{ type: \"ANCHOR\", name: \"\", id: id }}\n                  attracted={{\n                    type: type,\n                    name: nameAdhesive,\n                    id: idAdhesive,\n                  }}\n                />,\n              ];\n            },\n            []\n          )\n        )}\n    </>\n  );\n};\n\nexport default connect(mapStateToProps)(Magnets);\n","import React, { useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport components from \"../components\";\nimport {\n  updatePosition,\n  stopDragging,\n  validateFirstStepPathElementCreation,\n  invalidateFirstStepPathElementCreation,\n  savePathElementCreation,\n  nextStepOfElementCreation,\n  startRectangleSelection,\n  stopRectangleSelection,\n} from \"../redux/actions\";\nimport {\n  MODE_DRAG,\n  MODE_CREATE_PATH_ELEMENT,\n  MODE_CREATE_NODE_ELEMENT,\n  MODE_SELECT,\n  MODE_RECTANGLE_SELECTION,\n} from \"../redux/store/interactionModes\";\n\nimport Components from \"./components\";\nimport Anchors from \"./anchors\";\nimport Magnets from \"./magnets\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updatePosition: (x, y, shiftPress) =>\n      dispatch(updatePosition({ x, y, shiftPress })),\n    stopDragging: () => dispatch(stopDragging()),\n    validateFirstStepPathElementCreation: () =>\n      dispatch(validateFirstStepPathElementCreation()),\n    invalidateFirstStepPathElementCreation: () =>\n      dispatch(invalidateFirstStepPathElementCreation()),\n    savePathElementCreation: () => dispatch(savePathElementCreation()),\n    nextStepOfElementCreation: () => dispatch(nextStepOfElementCreation()),\n    startRectangleSelection: (x, y) => dispatch(startRectangleSelection(x, y)),\n    stopRectangleSelection: () => dispatch(stopRectangleSelection()),\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    mode: state.mode,\n    newPath: state.newPath,\n    newNode: state.newNode,\n    rectangleSelection: state.rectangleSelection,\n  };\n};\n\nconst Container = ({\n  mode,\n  newPath,\n  newNode,\n  rectangleSelection,\n  stopDragging,\n  updatePosition,\n  validateFirstStepPathElementCreation,\n  invalidateFirstStepPathElementCreation,\n  savePathElementCreation,\n  nextStepOfElementCreation,\n  startRectangleSelection,\n  stopRectangleSelection,\n}) => {\n  const svgRef = useRef();\n\n  const followMouse = (event) => {\n    const { x: xOffset, y: yOffset } = svgRef.current.getBoundingClientRect();\n\n    switch (mode) {\n      case MODE_DRAG:\n      case MODE_CREATE_PATH_ELEMENT:\n      case MODE_CREATE_NODE_ELEMENT:\n      case MODE_RECTANGLE_SELECTION:\n        updatePosition(\n          event.nativeEvent.clientX - xOffset,\n          event.nativeEvent.clientY - yOffset,\n          event.shiftKey\n        );\n        break;\n      default:\n        break;\n    }\n  };\n\n  const click = (event) => {\n    const { x: xOffset, y: yOffset } = svgRef.current.getBoundingClientRect();\n\n    switch (mode) {\n      case MODE_SELECT:\n        event.stopPropagation();\n        startRectangleSelection(\n          event.nativeEvent.clientX - xOffset,\n          event.nativeEvent.clientY - yOffset\n        );\n        break;\n      case MODE_CREATE_PATH_ELEMENT:\n        event.stopPropagation();\n        if (newPath.isFromValidated) {\n          savePathElementCreation(\n            event.nativeEvent.clientX - xOffset,\n            event.nativeEvent.clientY - yOffset\n          );\n        } else {\n          validateFirstStepPathElementCreation();\n        }\n        break;\n      case MODE_CREATE_NODE_ELEMENT:\n        event.stopPropagation();\n        nextStepOfElementCreation();\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <p>{mode}</p>\n      <p>{newNode && newNode.from && newNode.elementType}</p>\n      <p>{(newPath && newPath.elementType) || \"none\"}</p>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 1000 600\"\n        style={{ width: 1000, height: 600, background: \"lightgray\" }}\n        onMouseMove={\n          mode === MODE_DRAG ||\n          mode === MODE_CREATE_PATH_ELEMENT ||\n          mode === MODE_CREATE_NODE_ELEMENT ||\n          mode === MODE_RECTANGLE_SELECTION\n            ? followMouse\n            : null\n        }\n        onMouseDown={click}\n        onMouseUp={\n          mode === MODE_DRAG\n            ? () => stopDragging()\n            : mode === MODE_RECTANGLE_SELECTION\n            ? (event) => {\n                event.stopPropagation();\n                stopRectangleSelection();\n              }\n            : null\n        }\n        ref={svgRef}\n      >\n        <Components svgRef={svgRef} />\n\n        {/* display the path element in during its creation */}\n\n        {mode === MODE_CREATE_PATH_ELEMENT && // the element\n          newPath &&\n          newPath.isFromValidated &&\n          newPath.to &&\n          newPath.to.x !== null &&\n          newPath.to.y !== null &&\n          newPath.from &&\n          newPath.from.x !== null &&\n          newPath.from.y !== null &&\n          components[newPath.elementType]({\n            fromCoords: newPath.from,\n            toCoords: newPath.to,\n          })}\n        {mode === MODE_CREATE_PATH_ELEMENT && //the anchor TO\n          newPath &&\n          newPath.isFromValidated &&\n          newPath.to.x !== null &&\n          newPath.to.y !== null && (\n            <circle cx={newPath.to.x} cy={newPath.to.y} r={5} />\n          )}\n        {mode === MODE_CREATE_PATH_ELEMENT && // the anchor FROM\n          newPath &&\n          newPath.from &&\n          newPath.from.x !== null &&\n          newPath.from.y !== null && (\n            <circle\n              cx={newPath.from.x}\n              cy={newPath.from.y}\n              r={5}\n              onMouseEnter={invalidateFirstStepPathElementCreation}\n            />\n          )}\n\n        {/* display the path element in during its creation */}\n\n        {mode === MODE_CREATE_NODE_ELEMENT && // the element\n          newNode &&\n          newNode.position &&\n          newNode.position.x !== null &&\n          newNode.position.y !== null &&\n          components[newNode.elementType]({\n            positionCoords: newNode.position,\n          })}\n        {mode === MODE_CREATE_NODE_ELEMENT && // the anchor POSITION\n          newNode &&\n          newNode.position &&\n          newNode.position.x !== null &&\n          newNode.position.y !== null && (\n            <circle cx={newNode.position.x} cy={newNode.position.y} r={5} />\n          )}\n\n        <Anchors svgRef={svgRef} />\n        <Magnets svgRef={svgRef} />\n\n        {mode === MODE_RECTANGLE_SELECTION && (\n          <path\n            d={`M ${rectangleSelection.x0} ${rectangleSelection.y0} L  ${rectangleSelection.x0} ${rectangleSelection.y1} L ${rectangleSelection.x1} ${rectangleSelection.y1} L  ${rectangleSelection.x1} ${rectangleSelection.y0} Z`}\n            style={{ fill: \"transparent\", stroke: \"red\", strokeWidth: 1 }}\n          />\n        )}\n      </svg>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\n","import { drawElement } from \"../../components\";\n\nconst isNode = (element) => !!element.position;\n\nfunction getCircuitikz(state) {\n  const circuitText = [\"\\\\begin{circuitikz}[american]\"];\n\n  state.pathComponents.allIds.forEach((elementId) => {\n    const element = state.pathComponents.byId[elementId];\n    if (isNode(element)) {\n      circuitText.push(\n        drawElement(element, state.anchors.byId[element.position])\n      );\n    } else {\n      circuitText.push(\n        drawElement(\n          element,\n          state.anchors.byId[element.from],\n          state.anchors.byId[element.to]\n        )\n      );\n    }\n  });\n\n  circuitText.push(\"\\\\end{circuitikz}\");\n\n  return circuitText;\n}\n\nexport default getCircuitikz;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport getCircuitikz from \"../redux/store/getCircuitikz\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst copyCode = (code) => {\n  navigator.clipboard.writeText(code).then(\n    function () {},\n    function () {}\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { code: getCircuitikz(state) };\n};\n\nconst LatexDisplay = ({ code }) => (\n  <>\n    <DialogTitle>Your LaTEX code</DialogTitle>\n    <DialogContent>\n      <pre>\n        {code.slice(0, code.length - 1).join(\"\\n\\t\") +\n          \"\\n\" +\n          code[code.length - 1]}\n      </pre>\n    </DialogContent>\n    <DialogActions>\n      <Button\n        autoFocus\n        onClick={() => {\n          copyCode(\n            code.slice(0, code.length - 1).join(\"\\n\\t\") +\n              \"\\n\" +\n              code[code.length - 1]\n          );\n        }}\n      >\n        Copy\n      </Button>\n    </DialogActions>\n  </>\n);\n\nexport default connect(mapStateToProps, null)(LatexDisplay);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst mapStateToProps = (state) => {\n  if (\n    state.selection.length < 1 ||\n    !state.pathComponents.allIds.includes(state.selection[0])\n  ) {\n    return {};\n  }\n  const idOfInterest = state.selection[0];\n  return {\n    options: state.pathComponents.byId[idOfInterest],\n  };\n};\n\nconst ElementOptions = ({ options = null }) => {\n  if (options === null) {\n    return null;\n  }\n  return (\n    <List>\n      {Object.keys(options).map((name) => (\n        <ListItem button key={name}>\n          <ListItemText primary={name} secondary={options[name]} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default connect(mapStateToProps)(ElementOptions);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MODE_DRAG, MODE_SELECT } from \"./redux/store/interactionModes\";\n\nimport Container from \"./container/index.js\";\nimport LatexDisplay from \"./container/latexDisplay\";\nimport ElementOptions from \"./container/elementOptions\";\n\nimport components, { isPath } from \"./components\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport {\n  startSelect,\n  startCreatePathElement,\n  startCreateNodeElement,\n  splitAnchor,\n  stackSelectedAnchors,\n  deleteElement,\n} from \"./redux/actions\";\n\nconst drawerWidth = 180;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  toolBar: {\n    justifyContent: \"space-between\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst mapStateToProps = (state) => {\n  return {\n    mode: state.mode,\n    selection: state.selection,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startSelect: () => dispatch(startSelect()),\n    startCreatePathElement: (elementType) =>\n      dispatch(startCreatePathElement(elementType)),\n    startCreateNodeElement: (elementType) =>\n      dispatch(startCreateNodeElement(elementType)),\n    splitAnchor: () => dispatch(splitAnchor()),\n    stackSelectedAnchors: (direction) =>\n      dispatch(stackSelectedAnchors(direction)),\n    deleteElement: (selection) => {\n      dispatch(deleteElement(selection));\n    },\n  };\n};\n\nfunction App({\n  mode,\n  selection,\n  startSelect,\n  startCreatePathElement,\n  startCreateNodeElement,\n  splitAnchor,\n  stackSelectedAnchors,\n  deleteElement,\n}) {\n  const classes = useStyles();\n  const [showColde, setShowCode] = useState(false);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      switch (event.key) {\n        case \"ArrowRight\":\n          stackSelectedAnchors(\"R\");\n          break;\n        case \"ArrowLeft\":\n          stackSelectedAnchors(\"L\");\n          break;\n        case \"ArrowUp\":\n          stackSelectedAnchors(\"U\");\n          break;\n        case \"ArrowDown\":\n          stackSelectedAnchors(\"D\");\n          break;\n        case \"s\":\n          splitAnchor();\n          break;\n        case \"Delete\":\n          deleteElement(selection);\n          break;\n        default:\n          console.log(event.key);\n          break;\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [splitAnchor, stackSelectedAnchors, deleteElement, selection]);\n\n  return (\n    // TODO : Proper listen key event\n    <div className={classes.root} tabIndex=\"0\" onMouseDown={startSelect}>\n      <CssBaseline />\n\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolBar}>\n          <Typography variant=\"h6\" noWrap>\n            Clipped drawer\n          </Typography>\n\n          <Button color=\"inherit\" onClick={() => setShowCode(true)}>\n            LaTEX\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <List>\n            {Object.keys(components).map((name) => (\n              <ListItem\n                button\n                key={name}\n                onMouseDown={(event) => {\n                  event.stopPropagation();\n                  if (isPath[name]) {\n                    startCreatePathElement(name);\n                  } else {\n                    startCreateNodeElement(name);\n                  }\n                }}\n              >\n                <ListItemText primary={name} />\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 100 50\"\n                  style={{ width: 100, height: 50 }}\n                >\n                  {components[name]({ x: 50, y: 25 })}\n                </svg>\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </Drawer>\n      <Drawer\n        anchor=\"right\"\n        variant=\"persistent\"\n        open={\n          (mode === MODE_SELECT || mode === MODE_DRAG) && selection.length === 1\n        }\n      >\n        <Toolbar />\n        <ElementOptions />\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        <Container />\n      </main>\n\n      <Dialog\n        open={showColde}\n        onClose={() => {\n          setShowCode(false);\n        }}\n      >\n        <LatexDisplay />\n      </Dialog>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}