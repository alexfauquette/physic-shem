{"version":3,"sources":["redux/actions/index.js","components/constantes.js","components/Lampe.js","components/empty_diode.js","components/pR.js","components/vcapacitor.js","components/nmos.js","components/index.js","redux/store/index.js","container/components.js","atoms/anchor.js","container/anchors.js","atoms/magnet.js","container/magnets.js","container/index.js","redux/store/getCircuitikz.js","container/latexDisplay.js","container/elementOptions.js","App.js","serviceWorker.js","index.js"],"names":["START_DRAGGING","startDragging","x","y","type","STOP_DRAGGING","stopDragging","attractor","attracted","UPDATE_POSITION","updatePosition","id","shiftPress","START_SELECT","TOGGLE_SELECTION","toggleSelection","objectId","reset","START_CREATE_PATH_ELEMENT","VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION","INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION","SAVE_PATH_ELEMENT_CREATION","START_CREATE_NODE_ELEMENT","ELEMENT_CREATION_NEXT_STEP","SPLIT_ANCHOR","START_RECTANGLE_SELECTION","STOP_RECTANGLE_SELECTION","STACK_SELECTED_ANCHORS","MULTIPLICATIVE_CONST","R_LEN","r","toFixed","connect","state","props","mode","fromCoords","anchors","byId","from","toCoords","to","dispatch","selected","showHandles","xFrom","yFrom","xTo","yTo","ratio","Math","sqrt","angle","parseInt","atan2","PI","className","style","transform","cx","cy","d","width","UNIT_X","UNIT_Y2","wiper_pos","UNIT_Y","capacitor_width","getElementTranslation","positionAnchor","positionCoords","position","xAnchor","yAnchor","deltaX","deltaY","gate_height","strokeWidth","getAnchors","lampe","pR","name","sin","cos","pR_getAnchor","nmos","dx","dy","Cgap","Bgap","Egap","radAngle","Crad","Brad","Erad","distanceC","distanceB","distanceE","nmos_getAnchor","vcapacitor","vcapacitor_getAnchor","getDrawer","element","getElementAnchors","drawElement","position1","position2","isPath","components","MODE_SELECT","MODE_DRAG","MODE_CREATE_PATH_ELEMENT","MODE_CREATE_NODE_ELEMENT","MODE_RECTANGLE_SELECTION","getAdhesivePoints","elementType","adhesivePoints","push","forEach","componentUseThisAnchor","anchorId","replaceComponentAnchor","previousAnchorId","newAnchorId","newElement","isInRectangle","x0","y0","x1","y1","abs","isAnchor","allIds","includes","initial_state","selection","links","scene","uuid","pathComponents","id1","id2","id3","id4","id5","id6","anchor1","anchor2","anchor3","anchor4","anchor5","anchor6","anchor7","store","createStore","action","index","findIndex","slice","anchorsToMove","selectedId","elem","fromId","toId","positionId","originalPosition","alreadyMoved","anchorToRemoveID","anchorToUseId","anchorToRemoveIDIndex","remainingAnchors","newByIDElements","newMoveX","newMoveY","anchorById","newPath","isFromValidated","movedAfterFromCreation","newNode","newRectangle","rectangleSelection","filter","newId_element","newId_anchor","newAnchors","newId_anchor_from","newId_anchor_to","length","componentsToChange","newComponents","componentId","anchorsSelected","console","log","direction","newPosition","anchor","min","max","svgRef","current","getBoundingClientRect","xOffset","yOffset","map","onMouseDown","event","stopPropagation","ctrlKey","nativeEvent","clientX","clientY","anchorIds","color","useState","isUsed","setIsUsed","fill","stroke","onMouseEnter","onMouseLeave","onMouseMove","onMouseUp","isMoving","reduce","accumulator","accu","nameAdhesive","idAdhesive","validateFirstStepPathElementCreation","invalidateFirstStepPathElementCreation","savePathElementCreation","nextStepOfElementCreation","startRectangleSelection","stopRectangleSelection","useRef","xmlns","viewBox","height","shiftKey","ref","getCircuitikz","circuitText","elementId","isNode","code","DialogTitle","DialogContent","join","DialogActions","Button","autoFocus","onClick","navigator","clipboard","writeText","then","copyCode","idOfInterest","options","List","Object","keys","ListItem","button","ListItemText","primary","secondary","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","toolBar","justifyContent","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","startSelect","startCreatePathElement","startCreateNodeElement","splitAnchor","stackSelectedAnchors","classes","showColde","setShowCode","useEffect","handleKeyDown","key","document","addEventListener","removeEventListener","tabIndex","CssBaseline","AppBar","Toolbar","Typography","variant","noWrap","Drawer","paper","open","Dialog","onClose","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f82a17cd.chunk.js","sourcesContent":["export const START_DRAGGING = \"START_DRAGGING\";\nexport function startDragging(x, y) {\n  return {\n    type: START_DRAGGING,\n    x,\n    y,\n  };\n}\n\nexport const STOP_DRAGGING = \"STOP_DRAGGING\";\nexport function stopDragging(attractor, attracted) {\n  return {\n    type: STOP_DRAGGING,\n    attractor: attractor || null,\n    attracted: attracted || null,\n  };\n}\n\nexport const UPDATE_POSITION = \"UPDATE_POSITION\";\nexport function updatePosition({ x, y, id, shiftPress }) {\n  return {\n    type: UPDATE_POSITION,\n    x,\n    y,\n    id: id || null,\n    shiftPress,\n  };\n}\n\nexport const START_SELECT = \"START_SELECT\";\nexport function startSelect() {\n  return {\n    type: START_SELECT,\n  };\n}\n\nexport const TOGGLE_SELECTION = \"TOGGLE_SELECTION\";\nexport function toggleSelection(objectId, reset) {\n  return {\n    type: TOGGLE_SELECTION,\n    objectId,\n    reset,\n  };\n}\n\nexport const START_CREATE_PATH_ELEMENT = \"START_CREATE_PATH_ELEMENT\";\nexport function startCreatePathElement(elementType) {\n  return {\n    type: START_CREATE_PATH_ELEMENT,\n    elementType,\n  };\n}\n\nexport const VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION =\n  \"VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION\";\nexport function validateFirstStepPathElementCreation() {\n  return {\n    type: VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  };\n}\n\nexport const INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION =\n  \"INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION\";\nexport function invalidateFirstStepPathElementCreation() {\n  return {\n    type: INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  };\n}\n\nexport const SAVE_PATH_ELEMENT_CREATION = \"SAVE_PATH_ELEMENT_CREATION\";\nexport function savePathElementCreation() {\n  return {\n    type: SAVE_PATH_ELEMENT_CREATION,\n  };\n}\n\nexport const START_CREATE_NODE_ELEMENT = \"START_CREATE_NODE_ELEMENT\";\nexport function startCreateNodeElement(elementType) {\n  return {\n    type: START_CREATE_NODE_ELEMENT,\n    elementType,\n  };\n}\n\nexport const ELEMENT_CREATION_NEXT_STEP = \"ELEMENT_CREATION_NEXT_STEP\";\nexport function nextStepOfElementCreation() {\n  return {\n    type: ELEMENT_CREATION_NEXT_STEP,\n  };\n}\n\nexport const SPLIT_ANCHOR = \"SPLIT_ANCHOR\";\nexport function splitAnchor(anchorId) {\n  return {\n    type: SPLIT_ANCHOR,\n    anchorId: anchorId || null,\n  };\n}\n\nexport const START_RECTANGLE_SELECTION = \"START_RECTANGLE_SELECTION\";\nexport function startRectangleSelection(x, y) {\n  return {\n    type: START_RECTANGLE_SELECTION,\n    x,\n    y,\n  };\n}\n\nexport const STOP_RECTANGLE_SELECTION = \"STOP_RECTANGLE_SELECTION\";\nexport function stopRectangleSelection() {\n  return {\n    type: STOP_RECTANGLE_SELECTION,\n  };\n}\n\nexport const STACK_SELECTED_ANCHORS = \"STACK_SELECTED_ANCHORS\";\nexport function stackSelectedAnchors(direction) {\n  return {\n    type: STACK_SELECTED_ANCHORS,\n    direction,\n  };\n}\n","export const MULTIPLICATIVE_CONST = 100;\n\nexport const R_LEN = 1.4;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\n\nconst R = 0.6 * 0.5 * MULTIPLICATIVE_CONST;\nconst r = (0.7071 * R).toFixed(3);\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        mode: state.mode,\n        // allows to create components directly without using the store\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nconst Lampe = ({\n  fromCoords,\n  toCoords,\n  anchors,\n  mode,\n  selected,\n  showHandles,\n  id,\n  ...props\n}) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const d = Math.sqrt((xFrom - xTo) ** 2 + (yFrom - yTo) ** 2);\n  const ratio = 1 / 2 - R / d;\n  const angle = parseInt(\n    (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n  );\n  return (\n    <g className={`component ${selected ? \"red\" : \"black\"}`}>\n      <g {...props}>\n        <g\n          style={{\n            transform: `translate(${(xFrom + xTo) / 2}px , ${\n              (yFrom + yTo) / 2\n            }px) rotate(${angle}deg)`,\n          }}\n        >\n          <circle cx={0} cy={0} r={R} />\n          <path d={`M -${r} -${r} L ${r} ${r} M -${r} ${r} L ${r} -${r}`} />\n        </g>\n        <path\n          d={`M ${xFrom} ${yFrom} L ${xFrom + ratio * (xTo - xFrom)} ${\n            yFrom + ratio * (yTo - yFrom)\n          }`}\n        />\n        <path\n          d={`M ${xTo} ${yTo} L ${xTo + ratio * (xFrom - xTo)} ${\n            yTo + ratio * (yFrom - yTo)\n          }`}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport const drawer = (element, from, to) =>\n  `\\\\draw (${((from.x / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)}, ${(\n    (-from.y / MULTIPLICATIVE_CONST) *\n    R_LEN\n  ).toFixed(2)}) to[lamp] (${((to.x / MULTIPLICATIVE_CONST) * R_LEN).toFixed(\n    2\n  )}, ${((-to.y / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)});`;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lampe);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\n\nconst height = 0.5;\nconst width = 0.4;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST;\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        mode: state.mode,\n        // allows to create components directly without using the store\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nconst EmptyDiode = ({\n  fromCoords,\n  toCoords,\n  anchors,\n  mode,\n  selected,\n  showHandles,\n  id,\n  ...props\n}) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const d = Math.sqrt((xFrom - xTo) ** 2 + (yFrom - yTo) ** 2);\n  const ratio = (d - width * MULTIPLICATIVE_CONST) / (2 * d); // ratio of the line use by connection\n  const angle = parseInt(\n    (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n  );\n  return (\n    <g className={`component ${selected ? \"red\" : \"black\"}`}>\n      <g {...props}>\n        <g\n          style={{\n            transform: `translate(${(xFrom + xTo) / 2}px , ${\n              (yFrom + yTo) / 2\n            }px) rotate(${angle}deg)`,\n          }}\n        >\n          <path\n            d={`M ${UNIT_X} 0 L ${-UNIT_X} ${-UNIT_Y} L ${-UNIT_X} ${UNIT_Y} Z`}\n          />\n          <path d={`M ${UNIT_X} ${UNIT_Y} L ${UNIT_X} ${-UNIT_Y}`} />\n        </g>\n\n        {/* here start the connection between dipole and anchors */}\n        <path\n          d={`M ${xFrom} ${yFrom} L ${xFrom + ratio * (xTo - xFrom)} ${\n            yFrom + ratio * (yTo - yFrom)\n          }`}\n        />\n        <path\n          d={`M ${xTo} ${yTo} L ${xTo + ratio * (xFrom - xTo)} ${\n            yTo + ratio * (yFrom - yTo)\n          }`}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport const drawer = (element, from, to) =>\n  `\\\\draw (${((from.x / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)}, ${(\n    (-from.y / MULTIPLICATIVE_CONST) *\n    R_LEN\n  ).toFixed(2)}) to[empty diode] (${(\n    (to.x / MULTIPLICATIVE_CONST) *\n    R_LEN\n  ).toFixed(2)}, ${((-to.y / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)});`;\n\nexport default connect(mapStateToProps)(EmptyDiode);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\n\nconst height = 0.8;\nconst height_2 = 0.3;\nconst width = 0.8;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST;\nconst UNIT_Y2 = 0.5 * height_2 * MULTIPLICATIVE_CONST;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST;\n\nexport const getAnchor = ({ fromCoords, toCoords }) => {\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const angle = Math.atan2(yTo - yFrom, xTo - xFrom);\n\n  const x = (xFrom + xTo) / 2 + 55 * Math.sin(angle);\n  const y = (yFrom + yTo) / 2 - 55 * Math.cos(angle);\n  return [{ name: \"wiper\", x, y }];\n};\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        mode: state.mode,\n        // allows to create components directly without using the store\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nconst PR = ({\n  fromCoords,\n  toCoords,\n  mode,\n  selected,\n  showHandles,\n  id,\n  wiper_pos = 0.5,\n  ...props\n}) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const d = Math.sqrt((xFrom - xTo) ** 2 + (yFrom - yTo) ** 2);\n\n  const ratio = (d - width * MULTIPLICATIVE_CONST) / (2 * d); // ratio of the line use by connection\n  const angle = parseInt(\n    (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n  );\n  return (\n    <g className={`component ${selected ? \"red\" : \"black\"}`}>\n      <g {...props}>\n        <g\n          style={{\n            transform: `translate(${(xFrom + xTo) / 2}px , ${\n              (yFrom + yTo) / 2\n            }px) rotate(${angle}deg)`,\n          }}\n        >\n          <path\n            d={`M ${(-6 / 6) * UNIT_X} 0 L ${(-5 / 6) * UNIT_X} ${-UNIT_Y2} L ${\n              (-3 / 6) * UNIT_X\n            } ${UNIT_Y2} L ${(-1 / 6) * UNIT_X} ${-UNIT_Y2} L ${\n              (1 / 6) * UNIT_X\n            } ${UNIT_Y2} L ${(3 / 6) * UNIT_X} ${-UNIT_Y2} L ${\n              (5 / 6) * UNIT_X\n            } ${UNIT_Y2} L ${(6 / 6) * UNIT_X} 0`}\n          />\n          <path\n            d={`M ${\n              -(0.5 - wiper_pos) * width * MULTIPLICATIVE_CONST\n            } ${-UNIT_Y} L ${\n              -(0.5 - wiper_pos) * width * MULTIPLICATIVE_CONST\n            } ${-UNIT_Y2}`}\n          />\n        </g>\n\n        {/* here start the connection between dipole and anchors */}\n        <path\n          d={`M ${xFrom} ${yFrom} L ${xFrom + ratio * (xTo - xFrom)} ${\n            yFrom + ratio * (yTo - yFrom)\n          }`}\n        />\n        <path\n          d={`M ${xTo} ${yTo} L ${xTo + ratio * (xFrom - xTo)} ${\n            yTo + ratio * (yFrom - yTo)\n          }`}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport const drawer = (element, from, to) =>\n  `\\\\draw (${((from.x / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)}, ${(\n    (-from.y / MULTIPLICATIVE_CONST) *\n    R_LEN\n  ).toFixed(2)}) to[pR] (${((to.x / MULTIPLICATIVE_CONST) * R_LEN).toFixed(\n    2\n  )}, ${((-to.y / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)});`;\n\nexport default connect(mapStateToProps)(PR);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { R_LEN, MULTIPLICATIVE_CONST } from \"./constantes\";\n\nconst height = 0.6;\nconst width = 0.5;\nconst capacitor_width = 0.4;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST;\n\nconst STEP = capacitor_width * UNIT_X;\n\nexport const getAnchor = ({ fromCoords, toCoords }) => {\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const angle = Math.atan2(yTo - yFrom, xTo - xFrom);\n\n  const x = (xFrom + xTo) / 2 + 55 * Math.sin(angle);\n  const y = (yFrom + yTo) / 2 - 55 * Math.cos(angle);\n  return [{ name: \"wiper\", x, y }];\n};\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        mode: state.mode,\n        // allows to create components directly without using the store\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nconst Vcapacitor = ({\n  fromCoords,\n  toCoords,\n  mode,\n  selected,\n  showHandles,\n  id,\n  ...props\n}) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const d = Math.sqrt((xFrom - xTo) ** 2 + (yFrom - yTo) ** 2);\n\n  const ratio = (d - 2 * STEP) / (2 * d); // ratio of the line use by connection\n  const angle = parseInt(\n    (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n  );\n  return (\n    <g className={`component ${selected ? \"red\" : \"black\"}`}>\n      <g {...props}>\n        <g\n          style={{\n            transform: `translate(${(xFrom + xTo) / 2}px , ${\n              (yFrom + yTo) / 2\n            }px) rotate(${angle}deg)`,\n          }}\n        >\n          <path d={`M  ${-STEP} ${-UNIT_Y} L ${-STEP} ${UNIT_Y}`} />\n\n          <path d={`M  ${STEP} ${-UNIT_Y} L ${STEP} ${UNIT_Y}`} />\n\n          <path d={`M ${-UNIT_X} ${-UNIT_Y} L ${UNIT_X} ${UNIT_Y}`} />\n        </g>\n\n        {/* here start the connection between dipole and anchors */}\n        <path\n          d={`M ${xFrom} ${yFrom} L ${xFrom + ratio * (xTo - xFrom)} ${\n            yFrom + ratio * (yTo - yFrom)\n          }`}\n        />\n        <path\n          d={`M ${xTo} ${yTo} L ${xTo + ratio * (xFrom - xTo)} ${\n            yTo + ratio * (yFrom - yTo)\n          }`}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport const drawer = (element, from, to) =>\n  `\\\\draw (${((from.x / MULTIPLICATIVE_CONST) * 1.4).toFixed(2)}, ${(\n    (-from.y / MULTIPLICATIVE_CONST) *\n    R_LEN\n  ).toFixed(2)}) to[variable capacitor] (${(\n    (to.x / MULTIPLICATIVE_CONST) *\n    R_LEN\n  ).toFixed(2)}, ${((-to.y / MULTIPLICATIVE_CONST) * 1.4).toFixed(2)});`;\n\nexport default connect(mapStateToProps)(Vcapacitor);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\n\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\n\nconst width = 0.7;\nconst gate_height = 0.35;\nconst base_height = 0.5;\n// const conn_height = 0;\nconst height = 1.1;\nconst base_width = 0.5;\nconst gate_width = 0.62;\n// const arrow_pos = 0.6;\n// const bodydiode_scale = 0.3;\n// const bodydiode_distance = 0.3;\n// const bodydiode_conn = 0.6;\n// const curr_direction = 1;\n\nconst UNIT_X = width * MULTIPLICATIVE_CONST;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST;\n\nconst getElementTranslation = (positionAnchor) => {\n  switch (positionAnchor) {\n    case \"B\":\n      return { x: UNIT_X, y: 0 };\n    case \"C\":\n      return { x: 0, y: UNIT_Y };\n    case \"E\":\n      return { x: 0, y: -UNIT_Y };\n    default:\n      return { x: 0, y: 0 };\n  }\n};\n\nexport const getAnchor = ({ positionAnchor, angle = 0, positionCoords }) => {\n  const { x, y } = positionCoords;\n\n  const { x: dx, y: dy } = getElementTranslation(positionAnchor);\n\n  const Cgap = getElementTranslation(\"C\");\n  const Bgap = getElementTranslation(\"B\");\n  const Egap = getElementTranslation(\"E\");\n  const radAngle = (Math.PI * angle) / 180;\n\n  const Crad = Math.atan2(dy - Cgap.y, dx - Cgap.x);\n  const Brad = Math.atan2(dy - Bgap.y, dx - Bgap.x);\n  const Erad = Math.atan2(dy - Egap.y, dx - Egap.x);\n\n  const distanceC = Math.sqrt((Cgap.x - dx) ** 2 + (Cgap.y - dy) ** 2);\n  const distanceB = Math.sqrt((Bgap.x - dx) ** 2 + (Bgap.y - dy) ** 2);\n  const distanceE = Math.sqrt((Egap.x - dx) ** 2 + (Egap.y - dy) ** 2);\n\n  return [\n    {\n      name: \"C\",\n      x: x + Math.cos(-radAngle + Crad) * distanceC,\n      y: y + Math.sin(-radAngle + Crad) * distanceC,\n    },\n    {\n      name: \"B\",\n      x: x + Math.cos(-radAngle + Brad) * distanceB,\n      y: y + Math.sin(-radAngle + Brad) * distanceB,\n    },\n    {\n      name: \"E\",\n      x: x + Math.cos(-radAngle + Erad) * distanceE,\n      y: y + Math.sin(-radAngle + Erad) * distanceE,\n    },\n  ];\n};\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        mode: state.mode,\n        // allows to create components directly without using the store\n        positionCoords: state.anchors.byId[props.position],\n      }\n    : {};\n};\n\nconst NMOS = ({\n  positionCoords,\n  positionAnchor = \"\",\n  angle = 0,\n  mode,\n  selected,\n  showHandles,\n  id,\n  ...props\n}) => {\n  if (!positionCoords) {\n    return null;\n  }\n  const { x: xAnchor, y: yAnchor } = positionCoords;\n  const { x: deltaX, y: deltaY } = getElementTranslation(positionAnchor);\n\n  return (\n    <g className={`component ${selected ? \"red\" : \"black\"}`}>\n      <g {...props}>\n        <g\n          style={{\n            transform: `translate(${xAnchor}px , ${yAnchor}px) rotate(${-angle}deg)`,\n          }}\n        >\n          <g\n            style={{\n              transform: `translate(${deltaX}px , ${deltaY}px)`,\n            }}\n          >\n            <path\n              d={`M ${0} ${-UNIT_Y} \n                  L ${0} ${-gate_height * UNIT_Y}\n                  L ${-base_width * UNIT_X} ${-gate_height * UNIT_Y}`}\n            />\n            <path\n              d={`M ${-base_width * UNIT_X} ${-base_height * UNIT_Y}\n                  L ${-base_width * UNIT_X} ${base_height * UNIT_Y}\n                  L ${-base_width * UNIT_X} ${gate_height * UNIT_Y}\n                  L ${0} ${gate_height * UNIT_Y}\n                  L ${0} ${UNIT_Y}`}\n            />\n            <path\n              d={`M ${-gate_width * UNIT_X} ${-gate_height * UNIT_Y}\n                  L ${-gate_width * UNIT_X} ${gate_height * UNIT_Y}`}\n              style={{ strokeWidth: 2 }}\n            />\n            <path\n              d={`M ${-gate_width * UNIT_X} 0\n                      L ${-UNIT_X} 0`}\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  );\n};\n\nexport const drawer = (element, position) => {\n  return `\\\\draw (${((position.x / MULTIPLICATIVE_CONST) * R_LEN).toFixed(\n    2\n  )}, ${((-position.y / MULTIPLICATIVE_CONST) * R_LEN).toFixed(2)}) node[nmos${\n    element.positionAnchor ? \" ,anchor=\" + element.positionAnchor : \"\"\n  }${\n    element.angle && element.angle !== 0 ? \" ,rotate=\" + element.angle : \"\"\n  }]{};`;\n};\n\nexport default connect(mapStateToProps)(NMOS);\n","import React from \"react\";\nimport Lampe, { drawer as lampeDrawer } from \"./Lampe\";\nimport EmptyDiode, { drawer as emptyDiodeDrawer } from \"./empty_diode\";\nimport PR, { getAnchor as pR_getAnchor, drawer as pRDrawer } from \"./pR\";\nimport Vcapacitor, {\n  getAnchor as vcapacitor_getAnchor,\n  drawer as vcapacitorDrawer,\n} from \"./vcapacitor\";\nimport NMOS, {\n  getAnchor as nmos_getAnchor,\n  drawer as nmosDrawer,\n} from \"./nmos\";\n\nconst getAnchors = {\n  lampe: () => [],\n  \"empty led\": () => [],\n  pR: (props) => pR_getAnchor(props),\n  nmos: (props) => nmos_getAnchor(props),\n  vcapacitor: (props) => vcapacitor_getAnchor(props),\n};\n\nconst getDrawer = {\n  lampe: lampeDrawer,\n  \"empty led\": emptyDiodeDrawer,\n  pR: pRDrawer,\n  nmos: nmosDrawer,\n  vcapacitor: vcapacitorDrawer,\n};\n\nexport const getElementAnchors = (element) => {\n  return getAnchors[element.type](element);\n};\n\nexport const drawElement = (element, position1, position2) => {\n  return getDrawer[element.type](element, position1, position2);\n};\n\nexport const isPath = {\n  lampe: true,\n  \"empty led\": true,\n  pR: true,\n  nmos: false,\n  vcapacitor: true,\n};\n\nconst components = {\n  lampe: (props) => <Lampe key={props.id} {...props} />,\n  \"empty led\": (props) => <EmptyDiode key={props.id} {...props} />,\n  pR: (props) => <PR key={props.id} {...props} />,\n  nmos: (props) => <NMOS key={props.id} {...props} />,\n  vcapacitor: (props) => <Vcapacitor key={props.id} {...props} />,\n};\n\nexport default components;\n","import { createStore } from \"redux\";\nimport {\n  START_DRAGGING,\n  START_SELECT,\n  TOGGLE_SELECTION,\n  STOP_DRAGGING,\n  START_CREATE_PATH_ELEMENT,\n  START_CREATE_NODE_ELEMENT,\n  ELEMENT_CREATION_NEXT_STEP,\n  VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  SAVE_PATH_ELEMENT_CREATION,\n  UPDATE_POSITION,\n  SPLIT_ANCHOR,\n  START_RECTANGLE_SELECTION,\n  STOP_RECTANGLE_SELECTION,\n  STACK_SELECTED_ANCHORS,\n} from \"../actions\";\n\nimport { getElementAnchors, isPath } from \"../../components\";\n\nimport { v4 as uuid } from \"uuid\";\n\nexport const MODE_SELECT = \"MODE_SELECT\";\nexport const MODE_DRAG = \"MODE_DRAG\";\nexport const MODE_DELETE = \"MODE_DELETE\";\nexport const MODE_SPLIT_ANCHOR = \"MODE_SPLIT_ANCHOR\";\nexport const MODE_CREATE_PATH_ELEMENT = \"MODE_CREATE_PATH_ELEMENT\";\nexport const MODE_CREATE_NODE_ELEMENT = \"MODE_CREATE_NODE_ELEMENT\";\nexport const MODE_RECTANGLE_SELECTION = \"MODE_RECTANGLE_SELECTION\";\n\nconst getAdhesivePoints = (elementType) => {\n  const adhesivePoints = [];\n  if (isPath[elementType]) {\n    adhesivePoints.push({\n      type: \"ANCHOR\",\n      id: null,\n      dx: 0,\n      dy: 0,\n    });\n  } else {\n    adhesivePoints.push({\n      type: \"ANCHOR\",\n      id: null,\n      dx: 0,\n      dy: 0,\n    });\n    const anchors = getElementAnchors({\n      type: elementType,\n      fromCoords: { x: 0, y: 0 },\n      toCoords: { x: 0, y: 0 },\n      positionCoords: { x: 0, y: 0 },\n    });\n    anchors.forEach(({ x, y, name }) => {\n      adhesivePoints.push({\n        type: \"COMPONENT\", // TODO use constant file\n        name: name,\n        id: null,\n        dx: -x,\n        dy: -y,\n      });\n    });\n  }\n  return adhesivePoints;\n};\n\nconst componentUseThisAnchor = (element, anchorId) => {\n  if (element.from && element.from === anchorId) {\n    return true;\n  }\n  if (element.to && element.to === anchorId) {\n    return true;\n  }\n  if (element.position && element.position === anchorId) {\n    return true;\n  }\n  return false;\n};\n\nconst replaceComponentAnchor = (element, previousAnchorId, newAnchorId) => {\n  const newElement = { ...element };\n  if (element.from && element.from === previousAnchorId) {\n    newElement.from = newAnchorId;\n  }\n  if (element.to && element.to === previousAnchorId) {\n    newElement.to = newAnchorId;\n  }\n  if (element.position && element.position === previousAnchorId) {\n    newElement.position = newAnchorId;\n  }\n  return { ...newElement };\n};\n\nconst isInRectangle = ({ x, y }, { x0, y0, x1, y1 }) => {\n  return (\n    Math.abs(x - x0) + Math.abs(x - x1) <= Math.abs(x1 - x0) &&\n    Math.abs(y - y0) + Math.abs(y - y1) <= Math.abs(y1 - y0)\n  );\n};\n\nconst isAnchor = (state, id) =>\n  id !== null && state.anchors.allIds.includes(id);\n\nconst initial_state = {\n  mode: MODE_SELECT,\n  selection: [],\n  links: [],\n  adhesivePoints: [],\n  scene: [\n    {\n      id: uuid(),\n      x: 50,\n      y: 50,\n      type: \"lampe\",\n    },\n    {\n      id: uuid(),\n      x: 150,\n      y: 150,\n      type: \"lampe\",\n    },\n    {\n      id: uuid(),\n      x: 50,\n      y: 150,\n      type: \"resistance\",\n    },\n  ],\n  pathComponents: {\n    byId: {\n      id1: {\n        id: \"id1\",\n        from: \"anchor1\",\n        to: \"anchor3\",\n        type: \"pR\",\n      },\n      id2: {\n        id: \"id2\",\n        from: \"anchor2\",\n        to: \"anchor3\",\n        type: \"empty led\",\n      },\n      id3: {\n        id: \"id3\",\n        from: \"anchor4\",\n        to: \"anchor3\",\n        type: \"lampe\",\n      },\n      id4: {\n        id: \"id4\",\n        from: \"anchor5\",\n        to: \"anchor3\",\n        type: \"lampe\",\n      },\n      id5: {\n        id: \"id5\",\n        position: \"anchor6\",\n        type: \"nmos\",\n        angle: -45,\n        positionAnchor: \"B\",\n      },\n      id6: {\n        id: \"id6\",\n        position: \"anchor7\",\n        type: \"nmos\",\n        angle: \"\",\n        positionAnchor: \"\",\n      },\n    },\n    allIds: [\"id1\", \"id2\", \"id3\", \"id4\", \"id5\", \"id6\"],\n  },\n  anchors: {\n    byId: {\n      anchor1: {\n        id: \"anchor1\",\n        x: 10,\n        y: 200,\n      },\n      anchor2: {\n        id: \"anchor2\",\n        x: 500,\n        y: 200,\n      },\n      anchor3: {\n        id: \"anchor3\",\n        x: 250,\n        y: 200,\n      },\n      anchor4: {\n        id: \"anchor4\",\n        x: 250,\n        y: 400,\n      },\n      anchor5: {\n        id: \"anchor5\",\n        x: 250,\n        y: 10,\n      },\n      anchor6: {\n        id: \"anchor6\",\n        x: 100,\n        y: 400,\n      },\n      anchor7: {\n        id: \"anchor7\",\n        x: 100,\n        y: 400,\n      },\n    },\n    allIds: [\n      \"anchor1\",\n      \"anchor2\",\n      \"anchor3\",\n      \"anchor4\",\n      \"anchor5\",\n      \"anchor6\",\n      \"anchor7\",\n    ],\n  },\n};\n\nfunction update(state = initial_state, action) {\n  switch (action.type) {\n    case TOGGLE_SELECTION:\n      if (action.reset) {\n        return {\n          ...state,\n          selection: [action.objectId],\n        };\n      } else {\n        const index = state.selection.findIndex((x) => x === action.objectId);\n        if (index >= 0) {\n          return {\n            ...state,\n            selection: [\n              ...state.selection.slice(0, index),\n              ...state.selection.slice(index + 1),\n            ],\n          };\n        } else {\n          return {\n            ...state,\n            selection: [...state.selection, action.objectId],\n          };\n        }\n      }\n    case START_SELECT:\n      return {\n        ...state,\n        selection: [],\n        adhesivePoints: [],\n        mode: MODE_SELECT,\n      };\n    case START_DRAGGING:\n      const anchorsToMove = [];\n      const adhesivePoints = [];\n\n      state.selection.forEach((selectedId) => {\n        if (state.anchors.allIds.includes(selectedId)) {\n          if (\n            adhesivePoints.findIndex((elem) => elem.id === selectedId) === -1\n          ) {\n            adhesivePoints.push({\n              type: \"ANCHOR\",\n              id: selectedId,\n              dx: action.x - state.anchors.byId[selectedId].x,\n              dy: action.y - state.anchors.byId[selectedId].y,\n            });\n          }\n        } else if (state.pathComponents.allIds.includes(selectedId)) {\n          const anchors = getElementAnchors({\n            ...state.pathComponents.byId[selectedId],\n            fromCoords:\n              state.pathComponents.byId[selectedId].from &&\n              state.anchors.byId[state.pathComponents.byId[selectedId].from],\n            toCoords:\n              state.pathComponents.byId[selectedId].to &&\n              state.anchors.byId[state.pathComponents.byId[selectedId].to],\n            positionCoords:\n              state.pathComponents.byId[selectedId].position &&\n              state.anchors.byId[\n                state.pathComponents.byId[selectedId].position\n              ],\n          });\n          anchors.forEach(({ x, y, name }) => {\n            if (\n              !(\n                state.pathComponents.byId[selectedId].positionAnchor &&\n                name === state.pathComponents.byId[selectedId].positionAnchor\n              )\n            ) {\n              // if the anchor is not the one giving the position\n              adhesivePoints.push({\n                type: \"COMPONENT\", // TODO use constant file\n                name: name,\n                id: selectedId,\n                dx: action.x - x,\n                dy: action.y - y,\n              });\n            }\n          });\n          if (\n            state.pathComponents.byId[selectedId].from &&\n            adhesivePoints.findIndex(\n              (elem) => elem.id === state.pathComponents.byId[selectedId].from\n            ) === -1\n          ) {\n            //the from anchor is new\n            const fromId = state.pathComponents.byId[selectedId].from;\n            adhesivePoints.push({\n              type: \"ANCHOR\", // TODO use constant file\n              id: fromId,\n              dx: action.x - state.anchors.byId[fromId].x,\n              dy: action.y - state.anchors.byId[fromId].y,\n            });\n          }\n          if (\n            state.pathComponents.byId[selectedId].to &&\n            adhesivePoints.findIndex(\n              (elem) => elem.id === state.pathComponents.byId[selectedId].to\n            ) === -1\n          ) {\n            //the to anchor is new\n            const toId = state.pathComponents.byId[selectedId].to;\n            adhesivePoints.push({\n              type: \"ANCHOR\",\n              id: toId,\n              dx: action.x - state.anchors.byId[toId].x,\n              dy: action.y - state.anchors.byId[toId].y,\n            });\n          }\n          if (\n            state.pathComponents.byId[selectedId].position &&\n            adhesivePoints.findIndex(\n              (elem) =>\n                elem.id === state.pathComponents.byId[selectedId].position\n            ) === -1\n          ) {\n            //the position anchor is new\n            const positionId = state.pathComponents.byId[selectedId].position;\n            adhesivePoints.push({\n              type: \"ANCHOR\",\n              id: positionId,\n              dx: action.x - state.anchors.byId[positionId].x,\n              dy: action.y - state.anchors.byId[positionId].y,\n            });\n          }\n        }\n      });\n\n      state.selection.forEach((selectedId) => {\n        if (state.anchors.allIds.includes(selectedId)) {\n          if (!anchorsToMove.includes(selectedId)) {\n            anchorsToMove.push(selectedId);\n          }\n        } else if (state.pathComponents.allIds.includes(selectedId)) {\n          if (\n            state.pathComponents.byId[selectedId].from &&\n            !anchorsToMove.includes(state.pathComponents.byId[selectedId].from)\n          ) {\n            anchorsToMove.push(state.pathComponents.byId[selectedId].from);\n          }\n          if (\n            state.pathComponents.byId[selectedId].to &&\n            !anchorsToMove.includes(state.pathComponents.byId[selectedId].to)\n          ) {\n            anchorsToMove.push(state.pathComponents.byId[selectedId].to);\n          }\n          if (\n            state.pathComponents.byId[selectedId].position &&\n            !anchorsToMove.includes(\n              state.pathComponents.byId[selectedId].position\n            )\n          ) {\n            anchorsToMove.push(state.pathComponents.byId[selectedId].position);\n          }\n        }\n      });\n      return {\n        ...state,\n        mode: MODE_DRAG,\n        anchorsToMove: [...anchorsToMove],\n        adhesivePoints: [...adhesivePoints],\n        originalPosition: { x: action.x, y: action.y },\n        alreadyMoved: { x: 0, y: 0 },\n      };\n    case STOP_DRAGGING:\n      if (\n        action.attractor &&\n        action.attracted &&\n        action.attracted.type === \"ANCHOR\" &&\n        action.attractor.type === \"ANCHOR\"\n      ) {\n        // we need to fusion those anchors\n        const anchorToRemoveID = action.attracted.id;\n        const anchorToUseId = action.attractor.id;\n\n        // remove anchor\n        const anchorToRemoveIDIndex = state.anchors.allIds.findIndex(\n          (id) => id === anchorToRemoveID\n        );\n        const {\n          [anchorToRemoveID]: anchorToRemove,\n          ...remainingAnchors\n        } = state.anchors.byId;\n\n        //const update elements\n        const newByIDElements = {};\n        state.pathComponents.allIds.forEach((id) => {\n          newByIDElements[id] = replaceComponentAnchor(\n            state.pathComponents.byId[id],\n            anchorToRemoveID,\n            anchorToUseId\n          );\n        });\n\n        return {\n          ...state,\n          anchors: {\n            byId: { ...remainingAnchors },\n            allIds: [\n              ...state.anchors.allIds.slice(0, anchorToRemoveIDIndex),\n              ...state.anchors.allIds.slice(anchorToRemoveIDIndex + 1),\n            ],\n          },\n          pathComponents: {\n            ...state.pathComponents,\n            byId: { ...newByIDElements },\n          },\n          mode: MODE_SELECT,\n          anchorsToMove: [],\n          originalPosition: {},\n          alreadyMoved: {},\n        };\n      }\n\n      return {\n        ...state,\n        mode: MODE_SELECT,\n        anchorsToMove: [],\n        originalPosition: {},\n        alreadyMoved: {},\n      };\n\n    case UPDATE_POSITION:\n      const { x, y, id, shiftPress } = action;\n      switch (state.mode) {\n        case MODE_DRAG:\n          let newMoveX, newMoveY;\n          if (shiftPress) {\n            if (\n              Math.abs(x - state.originalPosition.x) >\n              Math.abs(y - state.originalPosition.y)\n            ) {\n              newMoveX = x - state.originalPosition.x;\n              newMoveY = 0;\n            } else {\n              newMoveX = 0;\n              newMoveY = y - state.originalPosition.y;\n            }\n          } else {\n            newMoveX = x - state.originalPosition.x;\n            newMoveY = y - state.originalPosition.y;\n          }\n\n          const anchorById = state.anchors.byId;\n          state.anchorsToMove.forEach((anchorId) => {\n            anchorById[anchorId] = {\n              ...anchorById[anchorId],\n              x: anchorById[anchorId].x + newMoveX - state.alreadyMoved.x,\n              y: anchorById[anchorId].y + newMoveY - state.alreadyMoved.y,\n            };\n          });\n\n          return {\n            ...state,\n            anchors: {\n              ...state.anchors,\n              byId: { ...anchorById },\n            },\n            alreadyMoved: {\n              x: newMoveX,\n              y: newMoveY,\n            },\n          };\n\n        case MODE_CREATE_PATH_ELEMENT:\n          if (state.newPath.isFromValidated) {\n            return {\n              ...state,\n              newPath: {\n                ...state.newPath,\n                to: { x: action.x, y: action.y, id: action.id },\n                movedAfterFromCreation: true,\n              },\n            };\n          } else {\n            return {\n              ...state,\n              newPath: {\n                ...state.newPath,\n                from: { x: action.x, y: action.y, id: action.id },\n              },\n            };\n          }\n        case MODE_CREATE_NODE_ELEMENT:\n          return {\n            ...state,\n            newNode: {\n              ...state.newNode,\n              position: { x: action.x, y: action.y, id: action.id },\n            },\n          };\n        case MODE_RECTANGLE_SELECTION:\n          const newRectangle = {\n            ...state.rectangleSelection,\n            x1: x,\n            y1: y,\n          };\n\n          return {\n            ...state,\n            selection: [\n              ...state.anchors.allIds.filter((id) =>\n                isInRectangle(state.anchors.byId[id], newRectangle)\n              ),\n            ],\n            rectangleSelection: {\n              ...state.rectangleSelection,\n              x1: x,\n              y1: y,\n            },\n          };\n        default:\n          return state;\n      }\n\n    case START_CREATE_PATH_ELEMENT: {\n      return {\n        ...state,\n        selection: [],\n        adhesivePoints: [...getAdhesivePoints(action.elementType)],\n        mode: MODE_CREATE_PATH_ELEMENT,\n        newPath: {\n          elementType: action.elementType,\n          isFromValidated: false,\n          from: { x: null, y: null, id: null },\n          to: { x: null, y: null, id: null },\n        },\n      };\n    }\n    case START_CREATE_NODE_ELEMENT:\n      return {\n        ...state,\n        selection: [],\n        adhesivePoints: [...getAdhesivePoints(action.elementType)],\n        mode: MODE_CREATE_NODE_ELEMENT,\n        newNode: {\n          elementType: action.elementType,\n          position: { x: null, y: null, id: null },\n        },\n      };\n    case ELEMENT_CREATION_NEXT_STEP:\n      if (\n        state.mode === MODE_CREATE_NODE_ELEMENT &&\n        state.newNode.position.x !== null &&\n        state.newNode.position.y !== null\n      ) {\n        const newId_element = uuid();\n        const newId_anchor = uuid();\n\n        let newAnchors = state.anchors;\n        if (\n          state.newNode.position.id === null ||\n          !state.anchors.allIds.includes(state.newNode.position.id)\n        ) {\n          newAnchors = {\n            byId: {\n              ...state.anchors.byId,\n              [newId_anchor]: {\n                id: newId_anchor,\n                x: state.newNode.position.x,\n                y: state.newNode.position.y,\n              },\n            },\n            allIds: [...state.anchors.allIds, newId_anchor],\n          };\n        }\n\n        const positionId =\n          state.newNode.position.id &&\n          state.anchors.allIds.includes(state.newNode.position.id)\n            ? state.newNode.position.id\n            : newId_anchor;\n\n        return {\n          ...state,\n          newNode: {\n            ...state.newNode,\n            position: { x: null, y: null, id: null },\n          },\n          pathComponents: {\n            byId: {\n              ...state.pathComponents.byId,\n              [newId_element]: {\n                id: newId_element,\n                position: positionId,\n                type: state.newNode.elementType,\n              },\n            },\n            allIds: [...state.pathComponents.allIds, newId_element],\n          },\n          anchors: { ...newAnchors },\n        };\n      }\n      return state;\n    case VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION:\n      return {\n        ...state,\n        newPath: {\n          ...state.newPath,\n          to: { x: null, y: null, id: null },\n          isFromValidated: true,\n          movedAfterFromCreation: false,\n        },\n      };\n    case INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION:\n      if (\n        state.newPath.movedAfterFromCreation &&\n        state.newPath.isFromValidated\n      ) {\n        return {\n          ...state,\n          newPath: {\n            ...state.newPath,\n            from: { ...state.newPath.to },\n            to: { x: null, y: null, id: null },\n            isFromValidated: false,\n          },\n        };\n      } else {\n        return state;\n      }\n    case SAVE_PATH_ELEMENT_CREATION:\n      const newId_element = uuid();\n      const newId_anchor_from = uuid();\n      const newId_anchor_to = uuid();\n\n      let newAnchors = { ...state.anchors };\n\n      if (\n        !isAnchor(state, state.newPath.from.id) &&\n        isAnchor(state, state.newPath.to.id)\n      ) {\n        newAnchors = {\n          byId: {\n            ...state.anchors.byId,\n            [newId_anchor_from]: {\n              id: newId_anchor_from,\n              x: state.newPath.from.x,\n              y: state.newPath.from.y,\n            },\n          },\n          allIds: [...state.anchors.allIds, newId_anchor_from],\n        };\n      } else if (\n        !isAnchor(state, state.newPath.to.id) &&\n        isAnchor(state, state.newPath.from.id)\n      ) {\n        newAnchors = {\n          byId: {\n            ...state.anchors.byId,\n            [newId_anchor_to]: {\n              id: newId_anchor_to,\n              x: state.newPath.to.x,\n              y: state.newPath.to.y,\n            },\n          },\n          allIds: [...state.anchors.allIds, newId_anchor_to],\n        };\n      } else if (\n        !isAnchor(state, state.newPath.from.id) &&\n        !isAnchor(state, state.newPath.to.id)\n      ) {\n        newAnchors = {\n          byId: {\n            ...state.anchors.byId,\n            [newId_anchor_from]: {\n              id: newId_anchor_from,\n              x: state.newPath.from.x,\n              y: state.newPath.from.y,\n            },\n            [newId_anchor_to]: {\n              id: newId_anchor_to,\n              x: state.newPath.to.x,\n              y: state.newPath.to.y,\n            },\n          },\n          allIds: [...state.anchors.allIds, newId_anchor_from, newId_anchor_to],\n        };\n      }\n      return {\n        ...state,\n        newPath: {\n          ...state.newPath,\n          isFromValidated: false,\n          from: {\n            ...state.newPath.to,\n            id: isAnchor(state, state.newPath.to.id)\n              ? state.newPath.to.id\n              : newId_anchor_to,\n          },\n          to: {\n            x: null,\n            y: null,\n            id: null,\n          },\n        },\n        pathComponents: {\n          byId: {\n            ...state.pathComponents.byId,\n            [newId_element]: {\n              id: newId_element,\n              from: isAnchor(state, state.newPath.from.id)\n                ? state.newPath.from.id\n                : newId_anchor_from,\n              to: isAnchor(state, state.newPath.to.id)\n                ? state.newPath.to.id\n                : newId_anchor_to,\n              type: state.newPath.elementType,\n            },\n          },\n          allIds: [...state.pathComponents.allIds, newId_element],\n        },\n        anchors: { ...newAnchors },\n      };\n    case SPLIT_ANCHOR:\n      let anchorId = action.anchorId;\n      if (\n        !anchorId &&\n        state.selection.length === 1 &&\n        state.anchors.allIds.includes(state.selection[0])\n      ) {\n        anchorId = state.selection[0];\n      }\n      if (anchorId && state.anchors.allIds.includes(anchorId)) {\n        const componentsToChange = state.pathComponents.allIds.filter((id) =>\n          componentUseThisAnchor(state.pathComponents.byId[id], anchorId)\n        );\n        if (componentsToChange.length <= 1) {\n          return state;\n        }\n\n        const newAnchors = state.anchors;\n        const newComponents = state.pathComponents.byId;\n\n        componentsToChange.slice(1).forEach((componentId) => {\n          const newAnchorId = uuid();\n\n          newComponents[componentId] = replaceComponentAnchor(\n            state.pathComponents.byId[componentId],\n            anchorId,\n            newAnchorId\n          );\n\n          newAnchors.allIds = [newAnchorId, ...newAnchors.allIds];\n          newAnchors.byId = {\n            ...newAnchors.byId,\n            [newAnchorId]: { ...newAnchors.byId[anchorId] },\n          };\n        });\n\n        return {\n          ...state,\n          pathComponents: {\n            ...state.pathComponents,\n            byId: { ...newComponents },\n          },\n          anchors: {\n            allIds: [...newAnchors.allIds],\n            byId: { ...newAnchors.byId },\n          },\n        };\n      }\n      return state;\n    case START_RECTANGLE_SELECTION:\n      return {\n        ...state,\n        mode: MODE_RECTANGLE_SELECTION,\n        rectangleSelection: {\n          x0: action.x,\n          y0: action.y,\n          x1: action.x,\n          y1: action.y,\n        },\n      };\n    case STOP_RECTANGLE_SELECTION:\n      // add equality verification, if rectangle has no area it's probably a single click\n      // so we reset the selection\n      return {\n        ...state,\n        mode: MODE_SELECT,\n        rectangleSelection: {},\n        selection:\n          state.rectangleSelection.x0 === state.rectangleSelection.x1 ||\n          state.rectangleSelection.y0 === state.rectangleSelection.y1\n            ? []\n            : [...state.selection],\n      };\n    case STACK_SELECTED_ANCHORS:\n      const anchorsSelected = state.selection.filter(\n        (id) => id in state.anchors.byId\n      );\n      console.log(anchorsSelected);\n      if (\n        anchorsSelected.length <= 1 ||\n        ![\"U\", \"D\", \"L\", \"R\"].includes(action.direction)\n      ) {\n        return state;\n      } else {\n        const newPosition = {};\n\n        anchorsSelected.forEach((id, index) => {\n          const anchor = state.anchors.byId[id];\n\n          switch (action.direction) {\n            case \"U\":\n              newPosition.y =\n                index === 0 ? anchor.y : Math.min(newPosition.y, anchor.y);\n              break;\n            case \"D\":\n              newPosition.y =\n                index === 0 ? anchor.y : Math.max(newPosition.y, anchor.y);\n              break;\n            case \"L\":\n              newPosition.x =\n                index === 0 ? anchor.x : Math.min(newPosition.x, anchor.x);\n              break;\n            case \"R\":\n              newPosition.x =\n                index === 0 ? anchor.x : Math.max(newPosition.x, anchor.x);\n              break;\n            default:\n              break;\n          }\n        });\n\n        anchorsSelected.forEach((id) => {\n          state.anchors.byId[id] = {\n            ...state.anchors.byId[id],\n            ...newPosition,\n          };\n        });\n        return {\n          ...state,\n          anchors: {\n            byId: { ...state.anchors.byId },\n            allIds: state.anchors.allIds,\n          },\n        };\n      }\n    default:\n      return state;\n  }\n}\n\n// Create a Redux store holding the state of your app.\n// Its API is { subscribe, dispatch, getState }.\nlet store = createStore(update);\n\nexport default store;\n","import React from \"react\";\nimport components from \"../components\";\nimport { connect } from \"react-redux\";\nimport { MODE_SELECT } from \"../redux/store\";\nimport { toggleSelection, startDragging } from \"../redux/actions\";\n\nconst mapDispatchToProps = (dispatch, { svgRef }) => {\n  return {\n    toggleSelection: (objectId, reset) =>\n      dispatch(toggleSelection(objectId, reset)),\n    startDragging: (x, y) => {\n      const { x: xOffset, y: yOffset } = svgRef.current.getBoundingClientRect();\n      dispatch(startDragging(x - xOffset, y - yOffset));\n    },\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    pathComponents: state.pathComponents,\n    selection: state.selection,\n    mode: state.mode,\n  };\n};\n\nconst Components = ({\n  pathComponents,\n  selection,\n  mode,\n  startDragging,\n  toggleSelection,\n}) => (\n  <>\n    {pathComponents.allIds.map(\n      (id) =>\n        pathComponents.byId[id].type &&\n        components[pathComponents.byId[id].type]({\n          ...pathComponents.byId[id],\n          onMouseDown:\n            mode === MODE_SELECT\n              ? (event) => {\n                  event.stopPropagation();\n                  if (\n                    !event.ctrlKey &&\n                    selection.includes(pathComponents.byId[id].id)\n                  ) {\n                    startDragging(\n                      event.nativeEvent.clientX,\n                      event.nativeEvent.clientY\n                    );\n                  } else {\n                    toggleSelection(pathComponents.byId[id].id, !event.ctrlKey);\n                  }\n                }\n              : null,\n          selected: selection.includes(pathComponents.byId[id].id),\n          // showHandles: mode === MODE_LINK,\n        })\n    )}\n  </>\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Components);\n","import React from \"react\";\n\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { MODE_SELECT } from \"../redux/store\";\nimport { toggleSelection, startDragging } from \"../redux/actions\";\n\nconst mapDispatchToProps = (dispatch, { svgRef }) => {\n  return {\n    toggleSelection: (objectId, reset) =>\n      dispatch(toggleSelection(objectId, reset)),\n    startDragging: (x, y) => {\n      const { x: xOffset, y: yOffset } = svgRef.current.getBoundingClientRect();\n      dispatch(startDragging(x - xOffset, y - yOffset));\n    },\n  };\n};\nconst mapStateToProps = (state, { id }) => {\n  return {\n    x: state.anchors.byId[id].x,\n    y: state.anchors.byId[id].y,\n    mode: state.mode,\n    selected: state.selection.includes(id),\n  };\n};\n\nconst Anchor = ({\n  id,\n  x,\n  y,\n  mode,\n  selected,\n  startDragging,\n  toggleSelection,\n}) => (\n  <circle\n    cx={x}\n    cy={y}\n    r={5}\n    className={`anchor ${selected ? \"selected\" : \"\"}`}\n    onMouseDown={\n      mode === MODE_SELECT\n        ? (event) => {\n            event.stopPropagation();\n            if (!event.ctrlKey && selected) {\n              startDragging(\n                event.nativeEvent.clientX,\n                event.nativeEvent.clientY\n              );\n            } else {\n              toggleSelection(id, !event.ctrlKey);\n            }\n          }\n        : null\n    }\n  />\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Anchor);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Anchor from \"../atoms/anchor\";\n\nconst mapStateToProps = (state) => {\n  return {\n    anchorIds: state.anchors.allIds,\n  };\n};\n\nconst Anchors = ({ anchorIds, svgRef }) => (\n  <>\n    {anchorIds.map((id) => (\n      <Anchor key={id} id={id} svgRef={svgRef} />\n    ))}\n  </>\n);\n\nexport default connect(mapStateToProps)(Anchors);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { updatePosition, stopDragging } from \"../redux/actions\";\nimport { MODE_DRAG } from \"../redux/store\";\nconst mapDispatchToProps = (dispatch, { attractor, attracted }) => {\n  return {\n    updatePosition: (x, y) =>\n      dispatch(updatePosition({ x, y, id: attractor.id })),\n    stopDragging: () => dispatch(stopDragging(attractor, attracted)),\n  };\n};\n\nconst Magnet = ({\n  id,\n  x,\n  y,\n  dx,\n  dy,\n  color,\n  mode,\n  updatePosition,\n  stopDragging,\n}) => {\n  const [isUsed, setIsUsed] = useState(false);\n\n  return (\n    <>\n      {isUsed && (\n        <circle\n          cx={x}\n          cy={y}\n          r={5}\n          style={{\n            fill: \"none\",\n            stroke: \"red\",\n            strokeWidth: 2,\n          }}\n        />\n      )}\n      <circle\n        cx={x + dx}\n        cy={y + dy}\n        r={10}\n        style={{\n          fill: color || \"transparent\",\n        }}\n        onMouseEnter={(event) => {\n          event.stopPropagation();\n          updatePosition(x + dx, y + dy);\n          setIsUsed(true);\n        }}\n        onMouseLeave={() => setIsUsed(false)}\n        onMouseMove={\n          (event) => event.stopPropagation() //stop the propagation\n        }\n        onMouseUp={\n          mode === MODE_DRAG\n            ? (event) => {\n                event.stopPropagation();\n                stopDragging();\n              }\n            : null\n        }\n      />\n    </>\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(Magnet);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  MODE_CREATE_PATH_ELEMENT,\n  MODE_CREATE_NODE_ELEMENT,\n  MODE_DRAG,\n} from \"../redux/store\";\n\nimport Magnet from \"../atoms/magnet\";\nimport { getElementAnchors } from \"../components\";\n\nconst mapStateToProps = (state) => {\n  return {\n    anchors: state.anchors,\n    pathComponents: state.pathComponents,\n    mode: state.mode,\n    anchorsToMove: state.anchorsToMove,\n    selection: state.selection,\n    adhesivePoints: state.adhesivePoints || null,\n  };\n};\n\nconst isMoving = (element, anchorsToMove) => {\n  // help function to filter magnets\n  if (!anchorsToMove) {\n    return false;\n  }\n  if (typeof element == \"string\" && anchorsToMove.includes(element)) {\n    return true;\n  }\n  if (element.from && anchorsToMove.includes(element.from)) {\n    return true;\n  }\n  if (element.to && anchorsToMove.includes(element.to)) {\n    return true;\n  }\n  if (element.position && anchorsToMove.includes(element.position)) {\n    return true;\n  }\n  return false;\n};\n\nconst Magnets = ({\n  mode,\n  anchors,\n  pathComponents,\n  anchorsToMove,\n  adhesivePoints,\n}) => {\n  if (\n    mode !== MODE_DRAG &&\n    mode !== MODE_CREATE_NODE_ELEMENT &&\n    mode !== MODE_CREATE_PATH_ELEMENT\n  ) {\n    return null;\n  }\n\n  return (\n    <>\n      {pathComponents.allIds\n        .filter((id) => !isMoving(pathComponents.byId[id], anchorsToMove))\n        .reduce(\n          (accumulator, id) => [\n            ...accumulator,\n            ...getElementAnchors({\n              ...pathComponents.byId[id],\n              fromCoords:\n                pathComponents.byId[id].from &&\n                anchors.byId[pathComponents.byId[id].from],\n              toCoords:\n                pathComponents.byId[id].to &&\n                anchors.byId[pathComponents.byId[id].to],\n              positionCoords:\n                pathComponents.byId[id].position &&\n                anchors.byId[pathComponents.byId[id].position],\n            }).map(({ x, y, name }) =>\n              adhesivePoints.reduce(\n                (\n                  accu,\n                  { type, dx, dy, name: nameAdhesive = \"\", id: idAdhesive }\n                ) => {\n                  return [\n                    ...accu,\n                    <Magnet\n                      key={`${id}-${name}<-${idAdhesive}-${nameAdhesive || \"\"}`}\n                      x={x}\n                      dx={dx}\n                      y={y}\n                      dy={dy}\n                      mode={mode}\n                      attractor={{ type: \"COMPONENT\", name: name, id: id }}\n                      attracted={{\n                        type: type,\n                        name: nameAdhesive,\n                        id: idAdhesive,\n                      }}\n                    />,\n                  ];\n                },\n                []\n              )\n            ),\n          ],\n          []\n        )}\n      {anchors.allIds\n        .filter((id) => !isMoving(id, anchorsToMove))\n        .map((id) =>\n          adhesivePoints.reduce(\n            (\n              accu,\n              { type, dx, dy, name: nameAdhesive = \"\", id: idAdhesive }\n            ) => {\n              return [\n                ...accu,\n                <Magnet\n                  key={`${id}<-${idAdhesive}-${nameAdhesive || \"\"}`}\n                  x={anchors.byId[id].x}\n                  dx={dx}\n                  y={anchors.byId[id].y}\n                  dy={dy}\n                  mode={mode}\n                  attractor={{ type: \"ANCHOR\", name: \"\", id: id }}\n                  attracted={{\n                    type: type,\n                    name: nameAdhesive,\n                    id: idAdhesive,\n                  }}\n                />,\n              ];\n            },\n            []\n          )\n        )}\n    </>\n  );\n};\n\nexport default connect(mapStateToProps)(Magnets);\n","import React, { useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport components from \"../components\";\nimport {\n  updatePosition,\n  stopDragging,\n  validateFirstStepPathElementCreation,\n  invalidateFirstStepPathElementCreation,\n  savePathElementCreation,\n  nextStepOfElementCreation,\n  startRectangleSelection,\n  stopRectangleSelection,\n} from \"../redux/actions\";\nimport {\n  MODE_DRAG,\n  MODE_CREATE_PATH_ELEMENT,\n  MODE_CREATE_NODE_ELEMENT,\n  MODE_SELECT,\n  MODE_RECTANGLE_SELECTION,\n} from \"../redux/store\";\n\nimport Components from \"./components\";\nimport Anchors from \"./anchors\";\nimport Magnets from \"./magnets\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updatePosition: (x, y, shiftPress) =>\n      dispatch(updatePosition({ x, y, shiftPress })),\n    stopDragging: () => dispatch(stopDragging()),\n    validateFirstStepPathElementCreation: () =>\n      dispatch(validateFirstStepPathElementCreation()),\n    invalidateFirstStepPathElementCreation: () =>\n      dispatch(invalidateFirstStepPathElementCreation()),\n    savePathElementCreation: () => dispatch(savePathElementCreation()),\n    nextStepOfElementCreation: () => dispatch(nextStepOfElementCreation()),\n    startRectangleSelection: (x, y) => dispatch(startRectangleSelection(x, y)),\n    stopRectangleSelection: () => dispatch(stopRectangleSelection()),\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    mode: state.mode,\n    newPath: state.newPath,\n    newNode: state.newNode,\n    rectangleSelection: state.rectangleSelection,\n  };\n};\n\nconst Container = ({\n  mode,\n  newPath,\n  newNode,\n  rectangleSelection,\n  stopDragging,\n  updatePosition,\n  validateFirstStepPathElementCreation,\n  invalidateFirstStepPathElementCreation,\n  savePathElementCreation,\n  nextStepOfElementCreation,\n  startRectangleSelection,\n  stopRectangleSelection,\n}) => {\n  const svgRef = useRef();\n\n  const followMouse = (event) => {\n    const { x: xOffset, y: yOffset } = svgRef.current.getBoundingClientRect();\n\n    switch (mode) {\n      case MODE_DRAG:\n      case MODE_CREATE_PATH_ELEMENT:\n      case MODE_CREATE_NODE_ELEMENT:\n      case MODE_RECTANGLE_SELECTION:\n        updatePosition(\n          event.nativeEvent.clientX - xOffset,\n          event.nativeEvent.clientY - yOffset,\n          event.shiftKey\n        );\n        break;\n      default:\n        break;\n    }\n  };\n\n  const click = (event) => {\n    const { x: xOffset, y: yOffset } = svgRef.current.getBoundingClientRect();\n\n    switch (mode) {\n      case MODE_SELECT:\n        event.stopPropagation();\n        startRectangleSelection(\n          event.nativeEvent.clientX - xOffset,\n          event.nativeEvent.clientY - yOffset\n        );\n        break;\n      case MODE_CREATE_PATH_ELEMENT:\n        event.stopPropagation();\n        if (newPath.isFromValidated) {\n          savePathElementCreation(\n            event.nativeEvent.clientX - xOffset,\n            event.nativeEvent.clientY - yOffset\n          );\n        } else {\n          validateFirstStepPathElementCreation();\n        }\n        break;\n      case MODE_CREATE_NODE_ELEMENT:\n        event.stopPropagation();\n        nextStepOfElementCreation();\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <p>{mode}</p>\n      <p>{newNode && newNode.from && newNode.elementType}</p>\n      <p>{(newPath && newPath.elementType) || \"none\"}</p>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 1000 600\"\n        style={{ width: 1000, height: 600 }}\n        onMouseMove={\n          mode === MODE_DRAG ||\n          mode === MODE_CREATE_PATH_ELEMENT ||\n          mode === MODE_CREATE_NODE_ELEMENT ||\n          mode === MODE_RECTANGLE_SELECTION\n            ? followMouse\n            : null\n        }\n        onMouseDown={click}\n        onMouseUp={\n          mode === MODE_DRAG\n            ? () => stopDragging()\n            : mode === MODE_RECTANGLE_SELECTION\n            ? (event) => {\n                event.stopPropagation();\n                stopRectangleSelection();\n              }\n            : null\n        }\n        ref={svgRef}\n      >\n        <Components svgRef={svgRef} />\n\n        {/* display the path element in during its creation */}\n\n        {mode === MODE_CREATE_PATH_ELEMENT && // the element\n          newPath &&\n          newPath.isFromValidated &&\n          newPath.to &&\n          newPath.to.x !== null &&\n          newPath.to.y !== null &&\n          newPath.from &&\n          newPath.from.x !== null &&\n          newPath.from.y !== null &&\n          components[newPath.elementType]({\n            fromCoords: newPath.from,\n            toCoords: newPath.to,\n          })}\n        {mode === MODE_CREATE_PATH_ELEMENT && //the anchor TO\n          newPath &&\n          newPath.isFromValidated &&\n          newPath.to.x !== null &&\n          newPath.to.y !== null && (\n            <circle cx={newPath.to.x} cy={newPath.to.y} r={5} />\n          )}\n        {mode === MODE_CREATE_PATH_ELEMENT && // the anchor FROM\n          newPath &&\n          newPath.from &&\n          newPath.from.x !== null &&\n          newPath.from.y !== null && (\n            <circle\n              cx={newPath.from.x}\n              cy={newPath.from.y}\n              r={5}\n              onMouseEnter={invalidateFirstStepPathElementCreation}\n            />\n          )}\n\n        {/* display the path element in during its creation */}\n\n        {mode === MODE_CREATE_NODE_ELEMENT && // the element\n          newNode &&\n          newNode.position &&\n          newNode.position.x !== null &&\n          newNode.position.y !== null &&\n          components[newNode.elementType]({\n            positionCoords: newNode.position,\n          })}\n        {mode === MODE_CREATE_NODE_ELEMENT && // the anchor POSITION\n          newNode &&\n          newNode.position &&\n          newNode.position.x !== null &&\n          newNode.position.y !== null && (\n            <circle cx={newNode.position.x} cy={newNode.position.y} r={5} />\n          )}\n\n        <Anchors svgRef={svgRef} />\n        <Magnets svgRef={svgRef} />\n\n        {mode === MODE_RECTANGLE_SELECTION && (\n          <path\n            d={`M ${rectangleSelection.x0} ${rectangleSelection.y0} L  ${rectangleSelection.x0} ${rectangleSelection.y1} L ${rectangleSelection.x1} ${rectangleSelection.y1} L  ${rectangleSelection.x1} ${rectangleSelection.y0} Z`}\n            style={{ fill: \"transparent\", stroke: \"red\", strokeWidth: 1 }}\n          />\n        )}\n      </svg>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\n","import { drawElement } from \"../../components\";\n\nconst isNode = (element) => !!element.position;\n\nfunction getCircuitikz(state) {\n  const circuitText = [\"\\\\begin{circuitikz}[american]\"];\n\n  state.pathComponents.allIds.forEach((elementId) => {\n    const element = state.pathComponents.byId[elementId];\n    if (isNode(element)) {\n      circuitText.push(\n        drawElement(element, state.anchors.byId[element.position])\n      );\n    } else {\n      circuitText.push(\n        drawElement(\n          element,\n          state.anchors.byId[element.from],\n          state.anchors.byId[element.to]\n        )\n      );\n    }\n  });\n\n  circuitText.push(\"\\\\end{circuitikz}\");\n\n  return circuitText;\n}\n\nexport default getCircuitikz;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport getCircuitikz from \"../redux/store/getCircuitikz\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst copyCode = (code) => {\n  navigator.clipboard.writeText(code).then(\n    function () {},\n    function () {}\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { code: getCircuitikz(state) };\n};\n\nconst LatexDisplay = ({ code }) => (\n  <>\n    <DialogTitle>Your LaTEX code</DialogTitle>\n    <DialogContent>\n      <pre>\n        {code.slice(0, code.length - 1).join(\"\\n\\t\") +\n          \"\\n\" +\n          code[code.length - 1]}\n      </pre>\n    </DialogContent>\n    <DialogActions>\n      <Button\n        autoFocus\n        onClick={() => {\n          copyCode(\n            code.slice(0, code.length - 1).join(\"\\n\\t\") +\n              \"\\n\" +\n              code[code.length - 1]\n          );\n        }}\n      >\n        Copy\n      </Button>\n    </DialogActions>\n  </>\n);\n\nexport default connect(mapStateToProps, null)(LatexDisplay);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst mapStateToProps = (state) => {\n  if (\n    state.selection.length < 1 ||\n    !state.pathComponents.allIds.includes(state.selection[0])\n  ) {\n    return {};\n  }\n  const idOfInterest = state.selection[0];\n  return {\n    options: state.pathComponents.byId[idOfInterest],\n  };\n};\n\nconst ElementOptions = ({ options = null }) => {\n  if (options === null) {\n    return null;\n  }\n  return (\n    <List>\n      {Object.keys(options).map((name) => (\n        <ListItem button key={name}>\n          <ListItemText primary={name} secondary={options[name]} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default connect(mapStateToProps)(ElementOptions);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MODE_SELECT } from \"./redux/store\";\n\nimport Container from \"./container/index.js\";\nimport LatexDisplay from \"./container/latexDisplay\";\nimport ElementOptions from \"./container/elementOptions\";\n\nimport components, { isPath } from \"./components\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport {\n  startSelect,\n  startCreatePathElement,\n  startCreateNodeElement,\n  splitAnchor,\n  stackSelectedAnchors,\n} from \"./redux/actions\";\n\nconst drawerWidth = 180;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  toolBar: {\n    justifyContent: \"space-between\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst mapStateToProps = (state) => {\n  return {\n    mode: state.mode,\n    selection: state.selection,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startSelect: () => dispatch(startSelect()),\n    startCreatePathElement: (elementType) =>\n      dispatch(startCreatePathElement(elementType)),\n    startCreateNodeElement: (elementType) =>\n      dispatch(startCreateNodeElement(elementType)),\n    splitAnchor: () => dispatch(splitAnchor()),\n    stackSelectedAnchors: (direction) =>\n      dispatch(stackSelectedAnchors(direction)),\n  };\n};\n\nfunction App({\n  mode,\n  selection,\n  startSelect,\n  startCreatePathElement,\n  startCreateNodeElement,\n  splitAnchor,\n  stackSelectedAnchors,\n}) {\n  const classes = useStyles();\n  const [showColde, setShowCode] = useState(false);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      switch (event.key) {\n        case \"ArrowRight\":\n          stackSelectedAnchors(\"R\");\n          break;\n        case \"ArrowLeft\":\n          stackSelectedAnchors(\"L\");\n          break;\n        case \"ArrowUp\":\n          stackSelectedAnchors(\"U\");\n          break;\n        case \"ArrowDown\":\n          stackSelectedAnchors(\"D\");\n          break;\n        case \"s\":\n          splitAnchor();\n          break;\n        default:\n          console.log(event.key);\n          break;\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [splitAnchor, stackSelectedAnchors]);\n\n  return (\n    // TODO : Proper listen key event\n    <div className={classes.root} tabIndex=\"0\" onMouseDown={startSelect}>\n      <CssBaseline />\n\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolBar}>\n          <Typography variant=\"h6\" noWrap>\n            Clipped drawer\n          </Typography>\n\n          <Button color=\"inherit\" onClick={() => setShowCode(true)}>\n            LaTEX\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <List>\n            {Object.keys(components).map((name) => (\n              <ListItem\n                button\n                key={name}\n                onMouseDown={(event) => {\n                  event.stopPropagation();\n                  if (isPath[name]) {\n                    startCreatePathElement(name);\n                  } else {\n                    startCreateNodeElement(name);\n                  }\n                }}\n              >\n                <ListItemText primary={name} />\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 100 50\"\n                  style={{ width: 100, height: 50 }}\n                >\n                  {components[name]({ x: 50, y: 25 })}\n                </svg>\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </Drawer>\n      <Drawer\n        anchor=\"right\"\n        variant=\"persistent\"\n        open={mode === MODE_SELECT && selection.length === 1}\n      >\n        <Toolbar />\n        <ElementOptions />\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        <Container />\n      </main>\n\n      <Dialog\n        open={showColde}\n        onClose={() => {\n          setShowCode(false);\n        }}\n      >\n        <LatexDisplay />\n      </Dialog>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}