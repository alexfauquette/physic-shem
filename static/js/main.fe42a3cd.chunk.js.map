{"version":3,"sources":["redux/actions/index.js","redux/store/interactionModes.js","redux/store/displayOptions.js","redux/store/magnetsOptions.js","redux/store/debugInitialState.js","components/constantes.js","atoms/currant.js","atoms/label.js","components/hoc/pathComponents.js","components/Lampe.js","components/empty_diode.js","components/pR.js","components/vcapacitor.js","components/nmos.js","components/vee.js","components/vcc.js","components/C.js","components/R.js","components/battery1.js","components/switch.js","components/short.js","components/rightUp.js","components/upRight.js","components/index.js","redux/store/utils.js","redux/store/dragging.js","redux/store/delete.js","redux/store/pathCreation.js","redux/store/rectangleSelection.js","redux/store/nodeCreation.js","redux/store/anchorHelper.js","redux/store/index.js","container/toolbar.js","container/components.js","atoms/anchor.js","container/anchors.js","atoms/magnet.js","container/magnets.js","container/index.js","redux/store/getCircuitikz.js","container/latexDisplay.js","container/elementOptions.js","container/leftMenu.js","App.js","serviceWorker.js","index.js"],"names":["START_DRAGGING","startDragging","x","y","type","STOP_DRAGGING","stopDragging","UPDATE_POSITION","updatePosition","attractor","attracted","shiftPress","START_SELECT","startSelect","TOGGLE_SELECTION","toggleSelection","objectId","reset","START_CREATE_PATH_ELEMENT","startCreatePathElement","elementType","VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION","INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION","SAVE_PATH_ELEMENT_CREATION","START_CREATE_NODE_ELEMENT","ELEMENT_CREATION_NEXT_STEP","SPLIT_ANCHOR","START_RECTANGLE_SELECTION","STOP_RECTANGLE_SELECTION","STACK_SELECTED_ANCHORS","stackSelectedAnchors","direction","DELETE_ELEMENT","UPDATE_COMPONENT","ZOOM","START_MOVE_PAPER","MOVE_PAPER","END_MOVE_PAPER","SET_MODE_MOVE_PAPER","UPDATE_MAGNET_OPTION","updateMagnetOption","optionName","optionValue","MODE_SELECT","MODE_DRAG","MODE_CREATE_PATH_ELEMENT","MODE_CREATE_NODE_ELEMENT","MODE_RECTANGLE_SELECTION","MODE_MOVE_PAPER","reducer_displayOptions","state","action","mode","newZoom","zoom","newWidth","newHeight","displayOptions","newX","width","newY","height","dragging","x0","y0","movePaper","isDragging","toggleDragging","reducer_magnetsOptions","magnetsOptions","defaultCurrant","show","currantText","currantIsForward","currantIsAbove","currantIsAfter","initial_state","isGridAttracting","gridSpace","isPathCoordinatesAttracting","isNodeAnchorsAttracting","selection","adhesivePoints","weakLinks","currentMagnet","pathComponents","byId","id5","id","position","angle","id6","positionAnchor","allIds","anchors","anchor6","isNodePosition","nodeId","anchor7","MULTIPLICATIVE_CONST","R_LEN","getTextAnchor","textAnchor","alignmentBaseline","CurrantArrow","fromCoords","toCoords","ratio","xFrom","yFrom","xTo","yTo","xI","yI","style","fill","stroke","d","transform","transformOrigin","Math","sin","PI","cos","random","isAbove","Label","text","xL","yL","mapStateToProps","props","from","to","withPathAttributes","component","connect","selected","onMouseDown","currant","label","annotation","mirror","invert","sqrt","parseInt","atan2","className","getPathAttributes","element","currantAttribute","getCurrantAttribute","getLabelAttribute","getAnnotationAttribute","r","toFixed","cx","cy","UNIT_X","UNIT_Y2","wiper_pos","UNIT_Y","capacitor_width","getElementTranslation","positionCoords","showHandles","xAnchor","yAnchor","deltaX","deltaY","base_height","gate_height","strokeWidth","STEP","Arrow","theta1","theta2","x1","y1","x2","y2","isOpen","withArrow","getAnchors","pR","name","pR_getAnchor","nmos","dx","dy","Cgap","Bgap","Egap","radAngle","Crad","Brad","Erad","distanceC","distanceB","distanceE","nmos_getAnchor","vee","vee_getAnchor","vcc","vcc_getAnchor","getDrawer","short","rightUp","upRight","lampe","positionInformations","anchor","coord","parseFloat","vcapacitor","C","R","battery1","switch","getElementAnchors","drawElement","position1","position2","isPath","isMultyPole","structure","bipoles","sources","references","transistors","components","getAdhesivePoints","push","forEach","componentUseThisAnchor","anchorId","replaceComponentAnchor","previousAnchorId","newAnchorId","newElement","anchorsToMove","selectedId","includes","findIndex","elem","fromId","toId","pile","nodeSeen","pop","length","originalPosition","alreadyMoved","weakLinksToRemove","filter","map","anchorToRemoveID","anchorToUseId","anchorToRemoveIDIndex","remainingAnchors","newByIDElements","slice","newWeakLink","nameAnchor","newMoveX","newMoveY","originalX","originalY","abs","anchorById","deleteElement","componentId","anchorToRemove","arg","elementId","newAnchors","newComponents","newPath","isFromValidated","validateFirstStepPathElement","attractorFrom","attractorTo","movedAfterFromCreation","invalidateFirstStepPathElement","savePathElement","newId_element","uuid","fromAnchor","toAnchor","newWeakLinks","newRectangle","rectangleSelection","isInRectangle","stopRectangleSelection","startRectangleSelection","newNode","startNodeCreation","saveNodeCreation","positionId","newPositions","toUpdate","deltaToAdd","anchorName","rotateNode","value","prevAngle","newAngle","prevAnchors","rotationHelper","IdToUpdate","toRemove","index","console","log","stackAnchors","anchorsSelected","movedAnchors","newPosition","min","max","undefined","splitAnchor","componentsToChange","weakLinksToCopy","linkedAnchorId","linkToCopy","store","createStore","refSpace","modX","modY","round","draggingUpdatePosition","pathCreationUpdatePosition","nodeCreationUpdatePosition","rectangleSelectionUpdatePosition","dispatch","setZoom","setModeMovePaper","IconButton","event","stopPropagation","SvgIcon","color","disabled","Select","onChange","target","MenuItem","svgRef","current","getBoundingClientRect","xOffset","yOffset","svgWidth","svgHeight","SVG_X","SVG_Y","SVG_WIDTH","SVG_HEIGHT","ctrlKey","nativeEvent","clientX","clientY","anchorIds","useState","isUsed","setIsUsed","onMouseEnter","onMouseLeave","onMouseMove","onMouseUp","isMoving","reduce","accumulator","accu","nameAdhesive","idAdhesive","validateFirstStepPathElementCreation","invalidateFirstStepPathElementCreation","savePathElementCreation","nextStepOfElementCreation","startMovePaper","xmlns","viewBox","background","shiftKey","ref","patternUnits","simplifyNumber","rep","getCoordId","getCoord","coords","coordId","removeDrawnElements","drawnElements","listeOfId","compareCoord","coordId1","coordId2","endingPaths1","endingPaths","nodeAssociated1","nodeAssociated","endingPaths2","nodeAssociated2","drawPathFromCoord","startCoordId","nbOfCoordinateUsed","elementsToAdd","nbOfCreatedNames","nextName","currantCoordId","currantCoord","nextPaths","startingPaths","arrivingPaths","nextNode","coordIsNew","getCircuitikz","nodeReference","fromCoord","toCoord","fromCoordId","toCoordId","parent","parentAnchor","associatedIds","positionCoord","positionCoordId","childId","initializeCoords","nodeNumberOfNames","circuitText","multiAnchorNodeIds","isNode","sort","id1","id2","join","coordsToPlot","Object","keys","idToPlot","indexOf","splice","code","DialogTitle","DialogContent","DialogActions","Button","autoFocus","onClick","navigator","clipboard","writeText","then","copyCode","inputElement","update","ListItem","TextField","onKeyDown","e","onChangeCapture","button","ListItemText","primary","ListItemSecondaryAction","Input","inputProps","step","FormControlLabel","control","checked","Checkbox","idOfInterest","options","handleInputChange","updateComponent","List","n","startCreateNodeElement","openSection","setOpenSection","sectionName","Collapse","in","timeout","unmountOnExit","paddingLeft","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","toolBar","justifyContent","flexShrink","drawerPaper","drawerContainer","overflow","optionDrawer","optionDrawerPaper","content","flexGrow","padding","spacing","pathIds","isPaperDragged","endMovePaper","classes","showCode","setShowCode","useRef","useEffect","handleKeyDown","key","document","addEventListener","removeEventListener","tabIndex","CssBaseline","AppBar","Toolbar","Typography","variant","noWrap","Drawer","paper","open","Dialog","onClose","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fe42a3cd.chunk.js","sourcesContent":["export const START_DRAGGING = \"START_DRAGGING\";\nexport function startDragging(x, y) {\n  return {\n    type: START_DRAGGING,\n    x,\n    y,\n  };\n}\n\nexport const STOP_DRAGGING = \"STOP_DRAGGING\";\nexport function stopDragging() {\n  return {\n    type: STOP_DRAGGING,\n  };\n}\n\nexport const UPDATE_POSITION = \"UPDATE_POSITION\";\nexport function updatePosition({ x, y, attractor, attracted, shiftPress }) {\n  // TODO : id should be remove\n  return {\n    type: UPDATE_POSITION,\n    x,\n    y,\n    attractor: attractor || null,\n    attracted: attracted || null,\n    shiftPress,\n  };\n}\n\nexport const START_SELECT = \"START_SELECT\";\nexport function startSelect() {\n  return {\n    type: START_SELECT,\n  };\n}\n\nexport const TOGGLE_SELECTION = \"TOGGLE_SELECTION\";\nexport function toggleSelection(objectId, reset) {\n  return {\n    type: TOGGLE_SELECTION,\n    objectId,\n    reset,\n  };\n}\n\nexport const START_CREATE_PATH_ELEMENT = \"START_CREATE_PATH_ELEMENT\";\nexport function startCreatePathElement(elementType) {\n  return {\n    type: START_CREATE_PATH_ELEMENT,\n    elementType,\n  };\n}\n\nexport const VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION =\n  \"VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION\";\nexport function validateFirstStepPathElementCreation() {\n  return {\n    type: VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  };\n}\n\nexport const INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION =\n  \"INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION\";\nexport function invalidateFirstStepPathElementCreation() {\n  return {\n    type: INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  };\n}\n\nexport const SAVE_PATH_ELEMENT_CREATION = \"SAVE_PATH_ELEMENT_CREATION\";\nexport function savePathElementCreation() {\n  return {\n    type: SAVE_PATH_ELEMENT_CREATION,\n  };\n}\n\nexport const START_CREATE_NODE_ELEMENT = \"START_CREATE_NODE_ELEMENT\";\nexport function startCreateNodeElement(elementType) {\n  return {\n    type: START_CREATE_NODE_ELEMENT,\n    elementType,\n  };\n}\n\nexport const ELEMENT_CREATION_NEXT_STEP = \"ELEMENT_CREATION_NEXT_STEP\";\nexport function nextStepOfElementCreation() {\n  return {\n    type: ELEMENT_CREATION_NEXT_STEP,\n  };\n}\n\nexport const SPLIT_ANCHOR = \"SPLIT_ANCHOR\";\nexport function splitAnchor(anchorId) {\n  return {\n    type: SPLIT_ANCHOR,\n    anchorId: anchorId || null,\n  };\n}\n\nexport const START_RECTANGLE_SELECTION = \"START_RECTANGLE_SELECTION\";\nexport function startRectangleSelection(x, y) {\n  return {\n    type: START_RECTANGLE_SELECTION,\n    x,\n    y,\n  };\n}\n\nexport const STOP_RECTANGLE_SELECTION = \"STOP_RECTANGLE_SELECTION\";\nexport function stopRectangleSelection() {\n  return {\n    type: STOP_RECTANGLE_SELECTION,\n  };\n}\n\nexport const STACK_SELECTED_ANCHORS = \"STACK_SELECTED_ANCHORS\";\nexport function stackSelectedAnchors(direction) {\n  return {\n    type: STACK_SELECTED_ANCHORS,\n    direction,\n  };\n}\n\nexport const DELETE_ELEMENT = \"DELETE_ELEMENT\";\nexport function deleteElement(selection) {\n  return {\n    type: DELETE_ELEMENT,\n    selection,\n  };\n}\n\nexport const UPDATE_COMPONENT = \"UPDATE_COMPONENT\";\nexport function updateComponent(id, name, value) {\n  return {\n    type: UPDATE_COMPONENT,\n    id,\n    name,\n    value,\n  };\n}\n\nexport const ZOOM = \"ZOOM\";\nexport function setZoom(zoom) {\n  return {\n    type: ZOOM,\n    zoom,\n  };\n}\n\nexport const START_MOVE_PAPER = \"START_MOVE_PAPER\";\nexport function startMovePaper(x, y) {\n  return {\n    type: START_MOVE_PAPER,\n    x,\n    y,\n  };\n}\n\nexport const MOVE_PAPER = \"MOVE_PAPER\";\nexport function movePaper(x, y) {\n  return {\n    type: MOVE_PAPER,\n    x,\n    y,\n  };\n}\n\nexport const END_MOVE_PAPER = \"END_MOVE_PAPER\";\nexport function endMovePaper() {\n  return {\n    type: END_MOVE_PAPER,\n  };\n}\n\nexport const SET_MODE_MOVE_PAPER = \"SET_MODE_MOVE_PAPER\";\nexport function setModeMovePaper() {\n  return {\n    type: SET_MODE_MOVE_PAPER,\n  };\n}\n\nexport const UPDATE_MAGNET_OPTION = \"UPDATE_MAGNET_OPTION\";\nexport function updateMagnetOption(optionName, optionValue) {\n  return {\n    type: UPDATE_MAGNET_OPTION,\n    optionName,\n    optionValue,\n  };\n}\n","export const MODE_SELECT = \"MODE_SELECT\";\nexport const MODE_DRAG = \"MODE_DRAG\";\nexport const MODE_CREATE_PATH_ELEMENT = \"MODE_CREATE_PATH_ELEMENT\";\nexport const MODE_CREATE_NODE_ELEMENT = \"MODE_CREATE_NODE_ELEMENT\";\nexport const MODE_RECTANGLE_SELECTION = \"MODE_RECTANGLE_SELECTION\";\n\n// for dragging the all svg\nexport const MODE_MOVE_PAPER = \"MODE_MOVE_PAPER\";\n","import {\n  ZOOM,\n  START_MOVE_PAPER,\n  MOVE_PAPER,\n  END_MOVE_PAPER,\n  SET_MODE_MOVE_PAPER,\n} from \"../actions\";\nimport { MODE_MOVE_PAPER } from \"./interactionModes\";\n\n// If we want to use A4 format (not sure it's useful)\n// const PAGE_WIDTH = 2100;\n// const PAGE_HEIGHT = 2970;\nconst PAGE_WIDTH = 800;\nconst PAGE_HEIGHT = 500;\n\nexport const default_displayOptions = {\n  x: 0,\n  y: 0,\n  zoom: 1,\n  width: PAGE_WIDTH,\n  height: PAGE_HEIGHT,\n  dragging: {\n    isDragging: false,\n    x0: null,\n    y0: null,\n  },\n};\n\nconst zoom = (state, action) => {\n  const newZoom = action.zoom;\n  const newWidth = PAGE_WIDTH / newZoom;\n  const newHeight = PAGE_HEIGHT / newZoom;\n\n  const { x, y, width, height } = state.displayOptions;\n\n  // this do the center on the middle (no useful until SVG heigh is fixed to fit the screen size)\n  const newX = x + width / 2 - newWidth / 2;\n  const newY = y + height / 2 - newHeight / 2;\n\n  return {\n    ...state,\n    displayOptions: {\n      ...state.displayOptions,\n      x: newX,\n      y: newY,\n      zoom: newZoom,\n      width: newWidth,\n      height: newHeight,\n    },\n  };\n};\n\nconst toggleDragging = (state, action) => {\n  const { x = null, y = null } = action;\n  return {\n    ...state,\n    displayOptions: {\n      ...state.displayOptions,\n      dragging: {\n        isDragging: !state.displayOptions.dragging.isDragging,\n        x0: x,\n        y0: y,\n      },\n    },\n  };\n};\n\nconst movePaper = (state, action) => {\n  const { x, y } = action;\n  const { x0, y0 } = state.displayOptions.dragging;\n  return {\n    ...state,\n    displayOptions: {\n      ...state.displayOptions,\n      x: state.displayOptions.x + (x0 - x) / state.displayOptions.zoom,\n      y: state.displayOptions.y + (y0 - y) / state.displayOptions.zoom,\n      dragging: {\n        ...state.displayOptions.dragging,\n        x0: x,\n        y0: y,\n      },\n    },\n  };\n};\n\nconst reducer_displayOptions = (state, action) => {\n  switch (action.type) {\n    case SET_MODE_MOVE_PAPER:\n      return { ...state, mode: MODE_MOVE_PAPER };\n    case ZOOM:\n      return zoom(state, action);\n    case MOVE_PAPER:\n      return movePaper(state, action);\n    case START_MOVE_PAPER:\n    case END_MOVE_PAPER:\n      return toggleDragging(state, action);\n    default:\n      return state;\n  }\n};\nexport default reducer_displayOptions;\n","import { UPDATE_MAGNET_OPTION } from \"../actions\";\n\nexport const default_magnetsOptions = {\n  isGridAttracting: true,\n  gridSpace: 1,\n  isPathCoordinatesAttracting: true,\n  isNodeAnchorsAttracting: true,\n};\n\nconst reducer_magnetsOptions = (state, action) => {\n  const { type, optionName, optionValue = null } = action;\n  switch (type) {\n    case UPDATE_MAGNET_OPTION:\n      if (optionValue === null) {\n        return {\n          ...state,\n          magnetsOptions: {\n            ...state.magnetsOptions,\n            [optionName]: !state.magnetsOptions[optionName],\n          },\n        };\n      } else {\n        return {\n          ...state,\n          magnetsOptions: {\n            ...state.magnetsOptions,\n            [optionName]: optionValue,\n          },\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default reducer_magnetsOptions;\n","import { MODE_SELECT } from \"./interactionModes\";\nimport { default_displayOptions } from \"./displayOptions\";\nimport { default_magnetsOptions } from \"./magnetsOptions\";\n\nexport const defaultCurrant = {\n  show: false,\n  currantText: \"\",\n  currantIsForward: true,\n  currantIsAbove: true,\n  currantIsAfter: true,\n};\n\nexport const initial_state = {\n  displayOptions: default_displayOptions,\n  magnetsOptions: default_magnetsOptions,\n  mode: MODE_SELECT,\n  selection: [],\n  adhesivePoints: [],\n  weakLinks: [],\n  currentMagnet: {\n    attractor: null,\n    attracted: null,\n  },\n  pathComponents: {\n    byId: {\n      // id1: {\n      //   id: \"id1\",\n      //   from: \"anchor1\",\n      //   to: \"anchor3\",\n      //   type: \"pR\",\n      //   currant: { ...defaultCurrant },\n      // },\n      // id2: {\n      //   id: \"id2\",\n      //   from: \"anchor2\",\n      //   to: \"anchor3\",\n      //   type: \"empty led\",\n      //   currant: { ...defaultCurrant },\n      // },\n      // id3: {\n      //   id: \"id3\",\n      //   from: \"anchor4\",\n      //   to: \"anchor3\",\n      //   type: \"lampe\",\n      //   label: \"label\",\n      //   annotation: \"annotation\",\n      //   currant: { ...defaultCurrant },\n      //   mirror: false,\n      //   invert: false,\n      // },\n      // id4: {\n      //   id: \"id4\",\n      //   from: \"anchor5\",\n      //   to: \"anchor3\",\n      //   type: \"lampe\",\n      //   label: \"label\",\n      //   annotation: \"annotation\",\n      //   currant: { ...defaultCurrant },\n      //   mirror: false,\n      //   invert: false,\n      // },\n      id5: {\n        id: \"id5\",\n        position: \"anchor6\",\n        type: \"nmos\",\n        angle: -45,\n      },\n      id6: {\n        id: \"id6\",\n        position: \"anchor7\",\n        type: \"nmos\",\n        angle: \"\",\n        positionAnchor: \"\",\n      },\n    },\n    allIds: [\n      // \"id1\", \"id2\", \"id3\", \"id4\",\n      \"id5\",\n      \"id6\",\n    ],\n  },\n  anchors: {\n    byId: {\n      // anchor1: {\n      //   id: \"anchor1\",\n      //   x: 10,\n      //   y: 200,\n      // },\n      // anchor2: {\n      //   id: \"anchor2\",\n      //   x: 500,\n      //   y: 200,\n      // },\n      // anchor3: {\n      //   id: \"anchor3\",\n      //   x: 250,\n      //   y: 200,\n      // },\n      // anchor4: {\n      //   id: \"anchor4\",\n      //   x: 250,\n      //   y: 400,\n      // },\n      // anchor5: {\n      //   id: \"anchor5\",\n      //   x: 250,\n      //   y: 10,\n      // },\n      anchor6: {\n        id: \"anchor6\",\n        x: 100,\n        y: 400,\n        isNodePosition: true,\n        nodeId: \"id5\",\n      },\n      anchor7: {\n        id: \"anchor7\",\n        x: 200,\n        y: 400,\n        isNodePosition: true,\n        nodeId: \"id6\",\n      },\n    },\n    allIds: [\n      // \"anchor1\", \"anchor2\", \"anchor3\", \"anchor4\", \"anchor5\"\n    ],\n  },\n};\n","// this factor is used to get a good ratio between coordinates and line width\nexport const MULTIPLICATIVE_CONST = 100;\n\nexport const R_LEN = 1.4;\n","import React from \"react\";\n\nconst getTextAnchor = (angle, currantIsAbove) => {\n  if (-5 < angle && angle < 5) {\n    return {\n      textAnchor: \"middle\",\n      alignmentBaseline: currantIsAbove ? \"baseline\" : \"hanging\",\n    };\n  }\n  if (-86 < angle && angle <= -5) {\n    return {\n      textAnchor: currantIsAbove ? \"end\" : \"start\",\n      alignmentBaseline: currantIsAbove ? \"baseline\" : \"hanging\",\n    };\n  }\n  if (-95 < angle && angle <= -86) {\n    return {\n      textAnchor: currantIsAbove ? \"end\" : \"start\",\n      alignmentBaseline: \"middle\",\n    };\n  }\n  if (-176 < angle && angle <= -95) {\n    return {\n      textAnchor: currantIsAbove ? \"end\" : \"start\",\n      alignmentBaseline: currantIsAbove ? \"hanging\" : \"baseline\",\n    };\n  }\n\n  if (angle >= 5 && angle < 86) {\n    return {\n      textAnchor: currantIsAbove ? \"start\" : \"end\",\n      alignmentBaseline: currantIsAbove ? \"baseline\" : \"hanging\",\n    };\n  }\n  if (angle >= 86 && angle < 95) {\n    return {\n      textAnchor: currantIsAbove ? \"start\" : \"end\",\n      alignmentBaseline: \"middle\",\n    };\n  }\n  if (angle >= 95 && angle < 176) {\n    return {\n      textAnchor: currantIsAbove ? \"start\" : \"end\",\n      alignmentBaseline: currantIsAbove ? \"hanging\" : \"baseline\",\n    };\n  }\n  return {\n    textAnchor: \"middle\",\n    alignmentBaseline: currantIsAbove ? \"hanging\" : \"baseline\",\n  };\n};\n\nexport const getCurrantAttribute = ({\n  show,\n  currantText,\n  currantIsForward,\n  currantIsAbove,\n  currantIsAfter,\n}) => {\n  if (!show) {\n    return \"\";\n  }\n  const text = currantText || \"$$$$\";\n  if (!currantIsAfter) {\n    const position = currantIsAbove ? \"^\" : \"_\";\n    const direction = currantIsForward ? \">\" : \"<\";\n    return `i${direction}${position}=${text}`;\n  } else {\n    const position = currantIsAbove ? \"^\" : \"_\";\n    const direction = currantIsForward ? \">\" : \"<\";\n    return `i${position}${direction}=${text}`;\n  }\n};\n\nconst CurrantArrow = ({\n  fromCoords,\n  toCoords,\n  currantText,\n  ratio = null,\n  angle = null,\n  currantIsForward = true,\n  currantIsAbove = true,\n  currantIsAfter = true,\n}) => {\n  if (\n    !fromCoords ||\n    !toCoords ||\n    !currantText ||\n    angle === null ||\n    ratio === null\n  ) {\n    return null;\n  }\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const xI = currantIsAfter\n    ? xTo + (ratio * (xFrom - xTo)) / 2\n    : xFrom + (ratio * (xTo - xFrom)) / 2;\n  const yI = currantIsAfter\n    ? yTo + (ratio * (yFrom - yTo)) / 2\n    : yFrom + (ratio * (yTo - yFrom)) / 2;\n  const rI = 15;\n\n  return (\n    <g\n      style={{\n        fill: \"black\",\n        stroke: \"none\",\n      }}\n    >\n      <path\n        d={`M ${xI + 0.5 * rI} ${yI} L  ${xI - 0.5 * rI} ${yI + 0.5 * rI} L  ${\n          xI - 0.5 * rI\n        } ${yI - 0.5 * rI} Z`}\n        style={{\n          transform: `rotate(${angle + (currantIsForward ? 0 : 180)}deg)`,\n          transformOrigin: `${xI}px ${yI}px`,\n        }}\n      />\n      <text\n        key={Math.random()}\n        x={\n          xI -\n          (currantIsAbove ? -0.5 * rI : 0.5 * rI) *\n            Math.sin((angle / 180) * Math.PI)\n        }\n        y={\n          yI +\n          (currantIsAbove ? -0.5 * rI : 0.5 * rI) *\n            Math.cos((angle / 180) * Math.PI)\n        }\n        style={{ ...getTextAnchor(angle, currantIsAbove) }}\n      >\n        {currantText}\n      </text>\n    </g>\n  );\n};\n\nexport default CurrantArrow;\n","import React from \"react\";\n\nconst getTextAnchor = (angle, isAbove, x, y) => {\n  if (-20 < angle && angle < 20) {\n    return {\n      textAnchor: \"middle\",\n      alignmentBaseline: isAbove ? \"baseline\" : \"hanging\",\n    };\n  }\n  if (-110 < angle && angle < -70) {\n    return {\n      textAnchor: isAbove ? \"end\" : \"start\",\n      alignmentBaseline: \"middle\",\n    };\n  }\n  if (70 < angle && angle < 110) {\n    return {\n      textAnchor: isAbove ? \"start\" : \"end\",\n      alignmentBaseline: \"middle\",\n    };\n  }\n  if (angle < -160 || angle > 160) {\n    return {\n      textAnchor: \"middle\",\n      alignmentBaseline: isAbove ? \"hanging\" : \"baseline\",\n    };\n  }\n  if (angle <= -20 && angle >= -70) {\n    return {\n      // textAnchor: isAbove ? \"end\" : \"start\",\n      textAnchor: \"middle\",\n      alignmentBaseline: isAbove ? \"baseline\" : \"hanging\",\n      transform: `rotate(${angle}deg)`,\n      transformOrigin: `${x}px ${y}px`,\n    };\n  }\n  if (angle >= 20 && angle <= 70) {\n    return {\n      // textAnchor: isAbove ? \"start\" : \"end\",\n      textAnchor: \"middle\",\n      alignmentBaseline: isAbove ? \"baseline\" : \"hanging\",\n      transform: `rotate(${angle}deg)`,\n      transformOrigin: `${x}px ${y}px`,\n    };\n  }\n  if (angle <= -110 && angle >= -160) {\n    return {\n      // textAnchor: isAbove ? \"end\" : \"start\",\n      textAnchor: \"middle\",\n      alignmentBaseline: isAbove ? \"hanging\" : \"baseline\",\n      transform: `rotate(${angle + 180}deg)`,\n      transformOrigin: `${x}px ${y}px`,\n    };\n  }\n  if (angle >= 110 && angle <= 160) {\n    return {\n      // textAnchor: isAbove ? \"start\" : \"end\",\n      textAnchor: \"middle\",\n      alignmentBaseline: isAbove ? \"hanging\" : \"baseline\",\n      transform: `rotate(${angle + 180}deg)`,\n      transformOrigin: `${x}px ${y}px`,\n    };\n  }\n};\n\nexport const getLabelAttribute = (text, isAbove = true) => {\n  if (!text) {\n    return \"\";\n  }\n  if (!isAbove) {\n    return `l_=${text}`;\n  } else {\n    return `l=${text}`;\n  }\n};\nexport const getAnnotationAttribute = (text, isAbove = false) => {\n  if (!text) {\n    return \"\";\n  }\n  if (!isAbove) {\n    return `a=${text}`;\n  } else {\n    return `a^=${text}`;\n  }\n};\n\nconst gap = 10;\n\nconst Label = ({\n  fromCoords,\n  toCoords,\n  angle = null,\n  height = null,\n  text,\n  isAbove = true,\n}) => {\n  if (!fromCoords || !toCoords || !text || angle === null || height === null) {\n    return null;\n  }\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const xL =\n    (xFrom + xTo) / 2 +\n    (isAbove ? height + gap : -(height + gap)) *\n      Math.sin((angle / 180) * Math.PI);\n  const yL =\n    (yFrom + yTo) / 2 +\n    (isAbove ? -(height + gap) : height + gap) *\n      Math.cos((angle / 180) * Math.PI);\n\n  return (\n    <g\n      style={{\n        fill: \"black\",\n        stroke: \"none\",\n      }}\n    >\n      <text\n        key={Math.random()}\n        x={xL}\n        y={yL}\n        style={{ ...getTextAnchor(angle, isAbove, xL, yL) }}\n      >\n        {text}\n      </text>\n    </g>\n  );\n};\n\nexport default Label;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"../constantes\";\nimport CurrantArrow, { getCurrantAttribute } from \"../../atoms/currant\";\nimport Label, {\n  getLabelAttribute,\n  getAnnotationAttribute,\n} from \"../../atoms/label\";\n\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\n// TODO : should allow to have heighTop and heighBottom (cf pR component problem)\n// or a ratio between top and bottom to share the complete heigh\nexport const withPathAttributes = ({ height = 1, width = 1 }) => (component) =>\n  connect(mapStateToProps)((props) => {\n    const {\n      fromCoords,\n      toCoords,\n      selected,\n      onMouseDown,\n      currant,\n      label,\n      annotation,\n      mirror,\n      invert,\n    } = props;\n\n    if (!fromCoords || !toCoords) {\n      return null;\n    }\n\n    const { x: xFrom, y: yFrom } = fromCoords;\n    const { x: xTo, y: yTo } = toCoords;\n\n    const d = Math.sqrt((xFrom - xTo) ** 2 + (yFrom - yTo) ** 2);\n    const ratio = (d - width * MULTIPLICATIVE_CONST * R_LEN) / (2 * d); // ratio of the line use by connection\n    const angle = parseInt(\n      (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n    );\n\n    return (\n      <g\n        onMouseDown={onMouseDown || null}\n        className={`component ${selected ? \"red\" : \"black\"}`}\n      >\n        <g\n          style={{\n            transform: `translate(${(xFrom + xTo) / 2}px , ${\n              (yFrom + yTo) / 2\n            }px) rotate(${angle}deg)${mirror ? \"scaleY(-1)\" : \"\"}${\n              invert ? \"scaleX(-1)\" : \"\"\n            }`,\n          }}\n        >\n          {component({\n            ...props,\n            x: (xFrom + xTo) / 2,\n            y: (yFrom + yTo) / 2,\n            angle: angle,\n          })}\n        </g>\n\n        {/* draw the line between anchors and the component */}\n        <path\n          d={`M ${xFrom} ${yFrom} L ${xFrom + ratio * (xTo - xFrom)} ${\n            yFrom + ratio * (yTo - yFrom)\n          }`}\n        />\n        <path\n          d={`M ${xTo} ${yTo} L ${xTo + ratio * (xFrom - xTo)} ${\n            yTo + ratio * (yFrom - yTo)\n          }`}\n        />\n\n        {currant && currant.show && (\n          <CurrantArrow\n            fromCoords={fromCoords}\n            toCoords={toCoords}\n            ratio={ratio}\n            angle={angle}\n            {...currant}\n          />\n        )}\n        {label && (\n          <Label\n            fromCoords={fromCoords}\n            toCoords={toCoords}\n            height={0.5 * height * MULTIPLICATIVE_CONST * R_LEN}\n            angle={angle}\n            text={label}\n          />\n        )}\n        {annotation && (\n          <Label\n            fromCoords={fromCoords}\n            toCoords={toCoords}\n            height={0.5 * height * MULTIPLICATIVE_CONST * R_LEN}\n            angle={angle}\n            text={annotation}\n            isAbove={false}\n          />\n        )}\n      </g>\n    );\n  });\n\nexport const getPathAttributes = (element) => {\n  const currantAttribute = getCurrantAttribute(element.currant);\n  const label = getLabelAttribute(element.label);\n  const annotation = getAnnotationAttribute(element.annotation);\n\n  return `${label ? `, ${label}` : \"\"}${annotation ? `, ${annotation}` : \"\"}${\n    currantAttribute ? `, ${currantAttribute}` : \"\"\n  }${element.mirror ? \", mirror\" : \"\"}${element.invert ? \", invert\" : \"\"}`;\n};\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\nimport { withPathAttributes, getPathAttributes } from \"./hoc/pathComponents\";\n\nconst width = 0.6;\nconst height = 0.6;\nconst R = 0.6 * 0.5 * MULTIPLICATIVE_CONST * R_LEN;\nconst r = (0.7071 * R).toFixed(3);\n\nconst Lampe = () => (\n  <>\n    <circle cx={0} cy={0} r={R} />\n    <path d={`M -${r} -${r} L ${r} ${r} M -${r} ${r} L ${r} -${r}`} />\n  </>\n);\n\nexport const drawer = (element) => {\n  return `to[lamp${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width, height })(Lampe);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\nimport { withPathAttributes, getPathAttributes } from \"./hoc/pathComponents\";\n\nconst height = 0.5;\nconst width = 0.4;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nconst EmptyDiode = () => (\n  <>\n    <path\n      d={`M ${UNIT_X} 0 L ${-UNIT_X} ${-UNIT_Y} L ${-UNIT_X} ${UNIT_Y} Z`}\n    />\n    <path d={`M ${UNIT_X} ${UNIT_Y} L ${UNIT_X} ${-UNIT_Y}`} />\n  </>\n);\n\nexport const drawer = (element) => {\n  return `to[empty diode${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width, height })(EmptyDiode);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\nimport { withPathAttributes, getPathAttributes } from \"./hoc/pathComponents\";\n\nconst height = 0.8;\nconst height_2 = 0.3;\nconst width = 0.8;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y2 = 0.5 * height_2 * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nexport const getAnchor = ({ fromCoords, toCoords }) => {\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const angle = Math.atan2(yTo - yFrom, xTo - xFrom);\n\n  const x = (xFrom + xTo) / 2 + 55 * Math.sin(angle);\n  const y = (yFrom + yTo) / 2 - 55 * Math.cos(angle);\n  return [{ name: \"wiper\", x, y }];\n};\n\nconst PR = ({ wiper_pos = 0.5 }) => (\n  <>\n    <path\n      d={`M ${(-6 / 6) * UNIT_X} 0 L ${(-5 / 6) * UNIT_X} ${-UNIT_Y2} L ${\n        (-3 / 6) * UNIT_X\n      } ${UNIT_Y2} L ${(-1 / 6) * UNIT_X} ${-UNIT_Y2} L ${\n        (1 / 6) * UNIT_X\n      } ${UNIT_Y2} L ${(3 / 6) * UNIT_X} ${-UNIT_Y2} L ${\n        (5 / 6) * UNIT_X\n      } ${UNIT_Y2} L ${(6 / 6) * UNIT_X} 0`}\n    />\n    <path\n      d={`M ${-(0.5 - wiper_pos) * 2 * UNIT_X} ${-UNIT_Y} L ${\n        -(0.5 - wiper_pos) * 2 * UNIT_X\n      } ${-UNIT_Y2}`}\n    />\n  </>\n);\n\nexport const drawer = (element) => {\n  return `to[pR${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width, height })(PR);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\nimport { withPathAttributes, getPathAttributes } from \"./hoc/pathComponents\";\n\nconst height = 0.6;\nconst width = 0.5;\nconst capacitor_width = 0.4;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nconst STEP = capacitor_width * UNIT_X;\n\nconst Vcapacitor = () => (\n  <>\n    <path d={`M  ${-STEP} ${-UNIT_Y} L ${-STEP} ${UNIT_Y}`} />\n    <path d={`M  ${STEP} ${-UNIT_Y} L ${STEP} ${UNIT_Y}`} />\n    <path d={`M ${-UNIT_X} ${-UNIT_Y} L ${UNIT_X} ${UNIT_Y}`} />\n  </>\n);\n\nexport const drawer = (element) => {\n  return `to[variable capacitor${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width: capacitor_width / 2, height })(\n  Vcapacitor\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\n\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\n\nconst width = 0.7;\nconst gate_height = 0.35;\nconst base_height = 0.5;\n// const conn_height = 0;\nconst height = 1.1;\nconst base_width = 0.5;\nconst gate_width = 0.62;\n// const arrow_pos = 0.6;\n// const bodydiode_scale = 0.3;\n// const bodydiode_distance = 0.3;\n// const bodydiode_conn = 0.6;\n// const curr_direction = 1;\n\nconst UNIT_X = width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nconst getElementTranslation = (positionAnchor) => {\n  switch (positionAnchor) {\n    case \"B\":\n      return { x: UNIT_X, y: 0 };\n    case \"C\":\n      return { x: 0, y: UNIT_Y };\n    case \"E\":\n      return { x: 0, y: -UNIT_Y };\n    default:\n      return { x: 0, y: 0 };\n  }\n};\n\nexport const getAnchor = ({ positionAnchor, angle = 0, positionCoords }) => {\n  const { x, y } = positionCoords;\n\n  const { x: dx, y: dy } = getElementTranslation(positionAnchor);\n\n  const Cgap = getElementTranslation(\"C\");\n  const Bgap = getElementTranslation(\"B\");\n  const Egap = getElementTranslation(\"E\");\n  const radAngle = (Math.PI * angle) / 180;\n\n  const Crad = Math.atan2(dy - Cgap.y, dx - Cgap.x);\n  const Brad = Math.atan2(dy - Bgap.y, dx - Bgap.x);\n  const Erad = Math.atan2(dy - Egap.y, dx - Egap.x);\n\n  const distanceC = Math.sqrt((Cgap.x - dx) ** 2 + (Cgap.y - dy) ** 2);\n  const distanceB = Math.sqrt((Bgap.x - dx) ** 2 + (Bgap.y - dy) ** 2);\n  const distanceE = Math.sqrt((Egap.x - dx) ** 2 + (Egap.y - dy) ** 2);\n\n  return [\n    {\n      name: \"C\",\n      x: x + Math.cos(-radAngle + Crad) * distanceC,\n      y: y + Math.sin(-radAngle + Crad) * distanceC,\n    },\n    {\n      name: \"B\",\n      x: x + Math.cos(-radAngle + Brad) * distanceB,\n      y: y + Math.sin(-radAngle + Brad) * distanceB,\n    },\n    {\n      name: \"E\",\n      x: x + Math.cos(-radAngle + Erad) * distanceE,\n      y: y + Math.sin(-radAngle + Erad) * distanceE,\n    },\n  ];\n};\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        mode: state.mode,\n        // allows to create components directly without using the store\n        positionCoords: state.anchors.byId[props.position],\n      }\n    : {};\n};\n\nconst NMOS = ({\n  positionCoords,\n  positionAnchor = \"\",\n  angle = 0,\n  mode,\n  selected,\n  showHandles,\n  id,\n  onMouseDown,\n}) => {\n  if (!positionCoords) {\n    return null;\n  }\n  const { x: xAnchor, y: yAnchor } = positionCoords;\n  const { x: deltaX, y: deltaY } = getElementTranslation(positionAnchor);\n\n  return (\n    <g\n      onMouseDown={onMouseDown || null}\n      className={`component ${selected ? \"red\" : \"black\"}`}\n    >\n      <g\n        style={{\n          transform: `translate(${xAnchor}px , ${yAnchor}px) rotate(${-angle}deg)`,\n        }}\n      >\n        <g\n          style={{\n            transform: `translate(${deltaX}px , ${deltaY}px)`,\n          }}\n        >\n          <path\n            d={`M ${0} ${-UNIT_Y} \n                  L ${0} ${-gate_height * UNIT_Y}\n                  L ${-base_width * UNIT_X} ${-gate_height * UNIT_Y}`}\n          />\n          <path\n            d={`M ${-base_width * UNIT_X} ${-base_height * UNIT_Y}\n                  L ${-base_width * UNIT_X} ${base_height * UNIT_Y}\n                  L ${-base_width * UNIT_X} ${gate_height * UNIT_Y}\n                  L ${0} ${gate_height * UNIT_Y}\n                  L ${0} ${UNIT_Y}`}\n          />\n          <path\n            d={`M ${-gate_width * UNIT_X} ${-gate_height * UNIT_Y}\n                  L ${-gate_width * UNIT_X} ${gate_height * UNIT_Y}`}\n            style={{ strokeWidth: 2 }}\n          />\n          <path\n            d={`M ${-gate_width * UNIT_X} 0\n                      L ${-UNIT_X} 0`}\n          />\n        </g>\n      </g>\n    </g>\n  );\n};\n\nexport const drawer = (element, positionInformations, name = null) => {\n  const { x, y, position, anchor } = positionInformations;\n\n  const coord = position\n    ? `(${position})`\n    : `(${(x / MULTIPLICATIVE_CONST).toFixed(2)}, ${(\n        -y / MULTIPLICATIVE_CONST\n      ).toFixed(2)})`;\n\n  return `\\\\draw ${coord} node[nmos${anchor ? `, anchor=${anchor}` : \"\"}${\n    element.angle && parseFloat(element.angle) !== 0\n      ? `, rotate=${element.angle}`\n      : \"\"\n  }]${name ? `(${name})` : \"\"}{};`;\n};\n\nexport default connect(mapStateToProps)(NMOS);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\n\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\n\nconst width = 0.2;\nconst STEP = width * R_LEN * MULTIPLICATIVE_CONST;\n\nexport const getAnchor = ({ positionCoords }) => {\n  const { x, y } = positionCoords;\n\n  return [\n    {\n      name: \"C\",\n      x: x,\n      y: y,\n    },\n  ];\n};\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        // allows to create components directly without using the store\n        positionCoords: state.anchors.byId[props.position],\n      }\n    : {};\n};\n\nconst VEE = ({ positionCoords, angle = 0, selected, onMouseDown }) => {\n  if (!positionCoords) {\n    return null;\n  }\n  const { x: xAnchor, y: yAnchor } = positionCoords;\n\n  return (\n    <g\n      onMouseDown={onMouseDown || null}\n      className={`component ${selected ? \"red\" : \"black\"}`}\n    >\n      <g\n        style={{\n          transform: `translate(${xAnchor}px , ${yAnchor}px) rotate(${-angle}deg)`,\n        }}\n      >\n        <path\n          d={`M ${-0.5 * STEP} ${0.8 * STEP}\n                L 0 ${1.5 * STEP}\n                L ${0.5 * STEP} ${0.8 * STEP}`}\n        />\n        <path\n          d={`M 0 0\n                L 0 ${1.5 * STEP}`}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport const drawer = (element) => {\n  return `node[vee${\n    element.angle && element.angle !== 0 ? \" ,rotate=\" + element.angle : \"\"\n  }]{}`;\n};\n\nexport default connect(mapStateToProps)(VEE);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\n\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\n\nconst width = 0.2;\n\nconst STEP = width * R_LEN * MULTIPLICATIVE_CONST;\n\nexport const getAnchor = ({ positionCoords }) => {\n  const { x, y } = positionCoords;\n\n  return [\n    {\n      name: \"C\",\n      x: x,\n      y: y,\n    },\n  ];\n};\n\n// If id => it's from scene\n// If no id => it's from adding\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        // allows to create components directly without using the store\n        positionCoords: state.anchors.byId[props.position],\n      }\n    : {};\n};\n\nconst VCC = ({ positionCoords, angle = 0, selected, onMouseDown }) => {\n  if (!positionCoords) {\n    return null;\n  }\n  const { x: xAnchor, y: yAnchor } = positionCoords;\n\n  return (\n    <g\n      onMouseDown={onMouseDown || null}\n      className={`component ${selected ? \"red\" : \"black\"}`}\n    >\n      <g\n        style={{\n          transform: `translate(${xAnchor}px , ${yAnchor}px) rotate(${-angle}deg)`,\n        }}\n      >\n        <path\n          d={`M ${-0.5 * STEP} ${-0.8 * STEP}\n                L 0 ${-1.5 * STEP}\n                L ${0.5 * STEP} ${-0.8 * STEP}`}\n        />\n        <path\n          d={`M 0 0\n                L 0 ${-1.5 * STEP}`}\n        />\n      </g>\n    </g>\n  );\n};\n\nexport const drawer = (element) => {\n  return `node[vcc${\n    element.angle && element.angle !== 0 ? \" ,rotate=\" + element.angle : \"\"\n  }]{}`;\n};\n\nexport default connect(mapStateToProps)(VCC);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\nimport { withPathAttributes, getPathAttributes } from \"./hoc/pathComponents\";\n\nconst height = 0.6;\nconst width = 0.2;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nexport const getAnchor = ({ fromCoords, toCoords }) => {\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const angle = Math.atan2(yTo - yFrom, xTo - xFrom);\n\n  const x = (xFrom + xTo) / 2 + 55 * Math.sin(angle);\n  const y = (yFrom + yTo) / 2 - 55 * Math.cos(angle);\n  return [{ name: \"wiper\", x, y }];\n};\n\nconst C = () => (\n  <>\n    <path d={`M  ${-UNIT_X} ${-UNIT_Y} L ${-UNIT_X} ${UNIT_Y}`} />\n    <path d={`M  ${UNIT_X} ${-UNIT_Y} L ${UNIT_X} ${UNIT_Y}`} />\n  </>\n);\n\nexport const drawer = (element) => {\n  return `to[C${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width, height })(C);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\nimport { withPathAttributes, getPathAttributes } from \"./hoc/pathComponents\";\n\nconst height = 0.3;\nconst width = 0.8;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nconst R = () => (\n  <path\n    d={`M ${(-6 / 6) * UNIT_X} 0 L ${(-5 / 6) * UNIT_X} ${-UNIT_Y} L ${\n      (-3 / 6) * UNIT_X\n    } ${UNIT_Y} L ${(-1 / 6) * UNIT_X} ${-UNIT_Y} L ${\n      (1 / 6) * UNIT_X\n    } ${UNIT_Y} L ${(3 / 6) * UNIT_X} ${-UNIT_Y} L ${\n      (5 / 6) * UNIT_X\n    } ${UNIT_Y} L ${(6 / 6) * UNIT_X} 0`}\n  />\n);\n\nexport const drawer = (element) => {\n  return `to[R${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width, height })(R);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\nimport { withPathAttributes, getPathAttributes } from \"./hoc/pathComponents\";\n\nconst height = 0.6;\nconst width = 0.3 * 0.33;\n\nconst UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\nconst UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n\nconst Battery1 = () => (\n  <>\n    <path d={`M ${-UNIT_X} ${-UNIT_Y} L ${-UNIT_X} ${UNIT_Y}`} />\n    <path d={`M ${UNIT_X} ${-0.5 * UNIT_Y}L ${UNIT_X} ${0.5 * UNIT_Y}`} />\n  </>\n);\n\nexport const drawer = (element) => {\n  return `to[battery1${getPathAttributes(element)}] `;\n};\n\nexport default withPathAttributes({ width, height })(Battery1);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { MULTIPLICATIVE_CONST, R_LEN } from \"./constantes\";\nimport { withPathAttributes, getPathAttributes } from \"./hoc/pathComponents\";\n\nconst height = 0.35;\nconst width = 0.35;\n\nconst Arrow = ({ x, y, r, theta1, theta2 }) => {\n  const x1 = x + r * Math.cos((theta1 / 180) * Math.PI);\n  const y1 = y - r * Math.sin((theta1 / 180) * Math.PI);\n\n  const x2 = x + r * Math.cos((theta2 / 180) * Math.PI);\n  const y2 = y - r * Math.sin((theta2 / 180) * Math.PI);\n\n  return (\n    <path\n      d={`M ${x1} ${y1} A ${r} ${r} 0 0 ${\n        theta1 < theta2 ? 0 : 1\n      } ${x2} ${y2} `}\n    />\n  );\n};\n\nconst Switch = ({ isOpen, withArrow }) => {\n  const height = withArrow ? 0.35 : 0.3;\n\n  const UNIT_X = 0.5 * width * MULTIPLICATIVE_CONST * R_LEN;\n  const UNIT_Y = 0.5 * height * MULTIPLICATIVE_CONST * R_LEN;\n  if (withArrow) {\n    return (\n      <>\n        <Arrow\n          x={-UNIT_X}\n          y={0}\n          r={1.2 * UNIT_X}\n          theta1={isOpen ? -10 : 90}\n          theta2={isOpen ? 90 : -20}\n        />\n        <path d={`M ${-UNIT_X} 0 L ${0.6 * UNIT_X} ${-UNIT_Y}`} />\n      </>\n    );\n  }\n\n  return (\n    <path\n      d={`M ${-UNIT_X} 0 L ${0.9 * UNIT_X} ${-UNIT_Y} M ${UNIT_X} 0 L ${\n        0.2 * UNIT_X\n      } 0 L ${0.2 * UNIT_X} ${-UNIT_Y}`}\n    />\n  );\n};\n\nexport const drawer = (element) => {\n  const { isOpen, withArrow } = element;\n  if (withArrow) {\n    return `to[${isOpen ? \"opening \" : \"\"}switch${getPathAttributes(\n      element\n    )}] `;\n  }\n  return `to[normal ${isOpen ? \"open\" : \"closed\"} switch${getPathAttributes(\n    element\n  )}] `;\n};\n\nexport default withPathAttributes({ width, height })(Switch);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport CurrantArrow from \"../atoms/currant\";\nimport Label from \"../atoms/label\";\n\nimport { getPathAttributes } from \"./hoc/pathComponents\";\n\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nconst Short = ({\n  fromCoords,\n  toCoords,\n  selected,\n  onMouseDown,\n  currant,\n  label,\n  annotation,\n}) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  const d = Math.sqrt((xFrom - xTo) ** 2 + (yFrom - yTo) ** 2);\n  const ratio = 1; // ratio of the line use by connection\n  const angle = parseInt(\n    (180 * Math.atan2(yTo - yFrom, xTo - xFrom)) / Math.PI\n  );\n\n  return (\n    <g\n      onMouseDown={onMouseDown || null}\n      className={`component ${selected ? \"red\" : \"black\"}`}\n    >\n      <path d={`M ${xFrom} ${yFrom} L ${xTo} ${yTo}`} />\n\n      {currant && currant.show && (\n        <CurrantArrow\n          fromCoords={fromCoords}\n          toCoords={toCoords}\n          ratio={1}\n          angle={angle}\n          {...currant}\n        />\n      )}\n      {label && (\n        <Label\n          fromCoords={fromCoords}\n          toCoords={toCoords}\n          height={0}\n          angle={angle}\n          text={label}\n        />\n      )}\n      {annotation && (\n        <Label\n          fromCoords={fromCoords}\n          toCoords={toCoords}\n          height={0}\n          angle={angle}\n          text={annotation}\n          isAbove={false}\n        />\n      )}\n    </g>\n  );\n};\n\nexport const drawer = (element) => {\n  return `to[short${getPathAttributes(element)}] `;\n};\n\nexport default connect(mapStateToProps)(Short);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\n\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nconst RightUp = ({ fromCoords, toCoords, selected, onMouseDown }) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  return (\n    <g\n      onMouseDown={onMouseDown || null}\n      className={`component ${selected ? \"red\" : \"black\"}`}\n    >\n      <path d={`M ${xFrom} ${yFrom} L ${xTo} ${yFrom}L ${xTo} ${yTo}`} />\n    </g>\n  );\n};\n\nexport const drawer = () => {\n  return `-| `;\n};\n\nexport default connect(mapStateToProps)(RightUp);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\n\nconst mapStateToProps = (state, props) => {\n  return props.id\n    ? {\n        fromCoords: state.anchors.byId[props.from],\n        toCoords: state.anchors.byId[props.to],\n      }\n    : {};\n};\n\nconst UpRight = ({ fromCoords, toCoords, selected, onMouseDown }) => {\n  if (!fromCoords || !toCoords) {\n    return null;\n  }\n\n  const { x: xFrom, y: yFrom } = fromCoords;\n  const { x: xTo, y: yTo } = toCoords;\n\n  return (\n    <g\n      onMouseDown={onMouseDown || null}\n      className={`component ${selected ? \"red\" : \"black\"}`}\n    >\n      <path d={`M ${xFrom} ${yFrom} L ${xFrom} ${yTo}L ${xTo} ${yTo}`} />\n    </g>\n  );\n};\n\nexport const drawer = () => {\n  return `|- `;\n};\n\nexport default connect(mapStateToProps)(UpRight);\n","import React from \"react\";\nimport Lampe, { drawer as lampeDrawer } from \"./Lampe\";\nimport EmptyDiode, { drawer as emptyDiodeDrawer } from \"./empty_diode\";\nimport PR, { getAnchor as pR_getAnchor, drawer as pRDrawer } from \"./pR\";\nimport Vcapacitor, { drawer as vcapacitorDrawer } from \"./vcapacitor\";\nimport NMOS, {\n  getAnchor as nmos_getAnchor,\n  drawer as nmosDrawer,\n} from \"./nmos\";\nimport VEE, { getAnchor as vee_getAnchor, drawer as veeDrawer } from \"./vee\";\nimport VCC, { getAnchor as vcc_getAnchor, drawer as vccDrawer } from \"./vcc\";\nimport C, { drawer as cDrawer } from \"./C\";\nimport R, { drawer as rDrawer } from \"./R\";\nimport Battery1, { drawer as battery1Drawer } from \"./battery1\";\nimport Switch, { drawer as switchDrawer } from \"./switch\";\n\nimport Short, { drawer as shortDrawer } from \"./short\";\nimport RightUp, { drawer as rightUpDrawer } from \"./rightUp\";\nimport UpRight, { drawer as upRightDrawer } from \"./upRight\";\n\nconst getAnchors = {\n  pR: (props) => pR_getAnchor(props),\n  nmos: (props) => nmos_getAnchor(props),\n  vee: (props) => vee_getAnchor(props),\n  vcc: (props) => vcc_getAnchor(props),\n};\n\nconst getDrawer = {\n  short: shortDrawer,\n  rightUp: rightUpDrawer,\n  upRight: upRightDrawer,\n  lampe: lampeDrawer,\n  \"empty led\": emptyDiodeDrawer,\n  pR: pRDrawer,\n  nmos: nmosDrawer,\n  vee: veeDrawer,\n  vcc: vccDrawer,\n  vcapacitor: vcapacitorDrawer,\n  C: cDrawer,\n  R: rDrawer,\n  battery1: battery1Drawer,\n  switch: switchDrawer,\n};\n\nexport const getElementAnchors = (element) => {\n  return getAnchors[element.type] ? getAnchors[element.type](element) : [];\n};\n\nexport const drawElement = (element, position1, position2) => {\n  return getDrawer[element.type](element, position1, position2);\n};\n\nexport const isPath = {\n  short: true,\n  rightUp: true,\n  upRight: true,\n  lampe: true,\n  \"empty led\": true,\n  pR: true,\n  nmos: false,\n  vee: false,\n  vcc: false,\n  vcapacitor: true,\n  C: true,\n  R: true,\n  battery1: true,\n  switch: true,\n};\n\nexport const isMultyPole = {\n  short: false,\n  rightUp: false,\n  upRight: false,\n  lampe: false,\n  \"empty led\": false,\n  pR: false,\n  nmos: true,\n  vee: false,\n  vcc: false,\n  vcapacitor: false,\n  C: false,\n  R: false,\n  battery1: false,\n  switch: false,\n};\n\nconst components = {\n  short: (props) => <Short key={props.id} {...props} />,\n  rightUp: (props) => <RightUp key={props.id} {...props} />,\n  upRight: (props) => <UpRight key={props.id} {...props} />,\n  lampe: (props) => <Lampe key={props.id} {...props} />,\n  \"empty led\": (props) => <EmptyDiode key={props.id} {...props} />,\n  pR: (props) => <PR key={props.id} {...props} />,\n  nmos: (props) => <NMOS key={props.id} {...props} />,\n  vee: (props) => <VEE key={props.id} {...props} />,\n  vcc: (props) => <VCC key={props.id} {...props} />,\n  vcapacitor: (props) => <Vcapacitor key={props.id} {...props} />,\n  C: (props) => <C key={props.id} {...props} />,\n  R: (props) => <R key={props.id} {...props} />,\n  battery1: (props) => <Battery1 key={props.id} {...props} />,\n  switch: (props) => <Switch key={props.id} {...props} />,\n};\n\nexport const structure = {\n  bipoles: [\n    \"lampe\",\n    \"R\",\n    \"C\",\n    \"switch\",\n    \"battery1\",\n    \"empty led\",\n    \"vcapacitor\",\n    \"pR\",\n  ],\n  sources: [],\n  references: [\"vee\", \"vcc\"],\n  transistors: [\"nmos\"],\n};\n\nexport default components;\n","import { getElementAnchors, isPath } from \"../../components\";\n\nexport const getAdhesivePoints = (elementType) => {\n  const adhesivePoints = [];\n  if (isPath[elementType]) {\n    adhesivePoints.push({\n      type: \"ANCHOR\",\n      id: null,\n      dx: 0,\n      dy: 0,\n    });\n  }\n\n  const elementAnchors = getElementAnchors({\n    type: elementType,\n    fromCoords: { x: 0, y: 0 },\n    toCoords: { x: 0, y: 0 },\n    positionCoords: { x: 0, y: 0 },\n  });\n\n  elementAnchors.forEach(({ x, y, name }) => {\n    adhesivePoints.push({\n      type: isPath[elementType] ? \"PATH\" : \"NODE\", // TODO use constant file\n      name: name,\n      id: null,\n      dx: -x,\n      dy: -y,\n    });\n  });\n\n  return adhesivePoints;\n};\n\nexport const componentUseThisAnchor = (element, anchorId) => {\n  if (element.from && element.from === anchorId) {\n    return true;\n  }\n  if (element.to && element.to === anchorId) {\n    return true;\n  }\n  if (element.position && element.position === anchorId) {\n    return true;\n  }\n  return false;\n};\n\nexport const replaceComponentAnchor = (\n  element,\n  previousAnchorId,\n  newAnchorId\n) => {\n  const newElement = { ...element };\n  if (element.from && element.from === previousAnchorId) {\n    newElement.from = newAnchorId;\n  }\n  if (element.to && element.to === previousAnchorId) {\n    newElement.to = newAnchorId;\n  }\n  if (element.position && element.position === previousAnchorId) {\n    newElement.position = newAnchorId;\n  }\n  return { ...newElement };\n};\n\nexport const isInRectangle = ({ x, y }, { x0, y0, x1, y1 }) => {\n  return (\n    Math.abs(x - x0) + Math.abs(x - x1) <= Math.abs(x1 - x0) &&\n    Math.abs(y - y0) + Math.abs(y - y1) <= Math.abs(y1 - y0)\n  );\n};\n\nexport const isAnchor = (state, id) =>\n  id !== null && state.anchors.allIds.includes(id);\n","import { getElementAnchors } from \"../../components\";\n\nimport { replaceComponentAnchor } from \"./utils\";\n\nimport { MODE_DRAG, MODE_SELECT } from \"./interactionModes\";\n\nexport const startDragging = (state, action) => {\n  const anchorsToMove = [];\n  const adhesivePoints = [];\n\n  state.selection.forEach((selectedId) => {\n    if (state.anchors.allIds.includes(selectedId)) {\n      if (adhesivePoints.findIndex((elem) => elem.id === selectedId) === -1) {\n        adhesivePoints.push({\n          type: \"ANCHOR\",\n          id: selectedId,\n          dx: action.x - state.anchors.byId[selectedId].x,\n          dy: action.y - state.anchors.byId[selectedId].y,\n        });\n      }\n    } else if (state.pathComponents.allIds.includes(selectedId)) {\n      const anchors = getElementAnchors({\n        ...state.pathComponents.byId[selectedId],\n        fromCoords:\n          state.pathComponents.byId[selectedId].from &&\n          state.anchors.byId[state.pathComponents.byId[selectedId].from],\n        toCoords:\n          state.pathComponents.byId[selectedId].to &&\n          state.anchors.byId[state.pathComponents.byId[selectedId].to],\n        positionCoords:\n          state.pathComponents.byId[selectedId].position &&\n          state.anchors.byId[state.pathComponents.byId[selectedId].position],\n      });\n\n      anchors.forEach(({ x, y, name }) => {\n        adhesivePoints.push({\n          type: state.pathComponents.byId[selectedId].position\n            ? \"NODE\"\n            : \"PATH\", // TODO use constant file\n          name: name,\n          id: selectedId,\n          dx: action.x - x,\n          dy: action.y - y,\n        });\n      });\n      if (\n        state.pathComponents.byId[selectedId].from &&\n        adhesivePoints.findIndex(\n          (elem) => elem.id === state.pathComponents.byId[selectedId].from\n        ) === -1\n      ) {\n        //the from anchor is new\n        const fromId = state.pathComponents.byId[selectedId].from;\n        adhesivePoints.push({\n          type: \"ANCHOR\", // TODO use constant file\n          id: fromId,\n          dx: action.x - state.anchors.byId[fromId].x,\n          dy: action.y - state.anchors.byId[fromId].y,\n        });\n      }\n      if (\n        state.pathComponents.byId[selectedId].to &&\n        adhesivePoints.findIndex(\n          (elem) => elem.id === state.pathComponents.byId[selectedId].to\n        ) === -1\n      ) {\n        //the to anchor is new\n        const toId = state.pathComponents.byId[selectedId].to;\n        adhesivePoints.push({\n          type: \"ANCHOR\",\n          id: toId,\n          dx: action.x - state.anchors.byId[toId].x,\n          dy: action.y - state.anchors.byId[toId].y,\n        });\n      }\n    }\n  });\n\n  const pile = [...state.selection];\n  const nodeSeen = [];\n  while (pile.length > 0) {\n    const selectedId = pile.pop();\n    if (state.pathComponents.allIds.includes(selectedId)) {\n      if (\n        state.pathComponents.byId[selectedId].from &&\n        !anchorsToMove.includes(state.pathComponents.byId[selectedId].from)\n      ) {\n        anchorsToMove.push(state.pathComponents.byId[selectedId].from);\n      }\n      if (\n        state.pathComponents.byId[selectedId].to &&\n        !anchorsToMove.includes(state.pathComponents.byId[selectedId].to)\n      ) {\n        anchorsToMove.push(state.pathComponents.byId[selectedId].to);\n      }\n      if (state.pathComponents.byId[selectedId].position) {\n        if (\n          !anchorsToMove.includes(\n            state.pathComponents.byId[selectedId].position\n          )\n        ) {\n          pile.push(state.pathComponents.byId[selectedId].position);\n        }\n        if (!nodeSeen.includes(selectedId)) {\n          nodeSeen.push(selectedId);\n          state.weakLinks.forEach(({ anchorId, nodeId }) => {\n            if (nodeId === selectedId && !anchorsToMove.includes(anchorId)) {\n              pile.push(anchorId);\n            }\n          });\n        }\n      }\n    } else {\n      if (!anchorsToMove.includes(selectedId)) {\n        anchorsToMove.push(selectedId);\n\n        if (state.anchors.byId[selectedId].isNodePosition) {\n          pile.push(state.anchors.byId[selectedId].nodeId);\n        }\n      }\n    }\n  }\n\n  return {\n    ...state,\n    mode: MODE_DRAG,\n    anchorsToMove: [...anchorsToMove],\n    adhesivePoints: [...adhesivePoints],\n    originalPosition: { x: action.x, y: action.y },\n    alreadyMoved: { x: 0, y: 0 },\n    weakLinksToRemove: [\n      ...state.weakLinks\n        .filter(\n          ({ anchorId, nodeId }) =>\n            anchorsToMove.includes(anchorId) &&\n            !anchorsToMove.includes(state.pathComponents.byId[nodeId].position)\n        )\n        .map(({ anchorId, nodeId }) => anchorId + \"-\" + nodeId),\n    ],\n  };\n};\n\nexport const stopDragging = (state, action) => {\n  if (\n    state.currentMagnet.attractor &&\n    state.currentMagnet.attracted &&\n    state.currentMagnet.attracted.type === \"ANCHOR\" &&\n    state.currentMagnet.attractor.type === \"ANCHOR\"\n  ) {\n    // we need to fusion those anchors\n    const anchorToRemoveID = state.currentMagnet.attracted.id;\n    const anchorToUseId = state.currentMagnet.attractor.id;\n\n    // remove anchor\n    const anchorToRemoveIDIndex = state.anchors.allIds.findIndex(\n      (id) => id === anchorToRemoveID\n    );\n    const {\n      [anchorToRemoveID]: anchorToRemove,\n      ...remainingAnchors\n    } = state.anchors.byId;\n\n    //const update elements\n    const newByIDElements = {};\n    state.pathComponents.allIds.forEach((id) => {\n      newByIDElements[id] = replaceComponentAnchor(\n        state.pathComponents.byId[id],\n        anchorToRemoveID,\n        anchorToUseId\n      );\n    });\n\n    return {\n      ...state,\n      anchors: {\n        byId: { ...remainingAnchors },\n        allIds: [\n          ...state.anchors.allIds.slice(0, anchorToRemoveIDIndex),\n          ...state.anchors.allIds.slice(anchorToRemoveIDIndex + 1),\n        ],\n      },\n      pathComponents: {\n        ...state.pathComponents,\n        byId: { ...newByIDElements },\n      },\n      mode: MODE_SELECT,\n      anchorsToMove: [],\n      originalPosition: {},\n      alreadyMoved: {},\n      weakLinksToRemove: [],\n      weakLinks: [\n        ...state.weakLinks.filter(\n          ({ anchorId, nodeId }) =>\n            !state.weakLinksToRemove.includes(anchorId + \"-\" + nodeId)\n        ),\n      ],\n    };\n  }\n\n  if (\n    state.currentMagnet.attractor &&\n    state.currentMagnet.attracted &&\n    state.currentMagnet.attracted.type !== \"PATH\" &&\n    state.currentMagnet.attractor.type !== \"PATH\"\n  ) {\n    const newWeakLink = [];\n\n    if (\n      state.currentMagnet.attracted.type === \"NODE\" &&\n      state.currentMagnet.attractor.type === \"NODE\"\n    ) {\n      newWeakLink.push({\n        anchorId:\n          state.pathComponents.byId[state.currentMagnet.attracted.id].position,\n        nodeId: state.currentMagnet.attractor.id,\n        name: state.currentMagnet.attractor.name,\n        nameAnchor: state.currentMagnet.attracted.name,\n      });\n    } else {\n      const nodeId =\n        state.currentMagnet.attracted.type === \"NODE\"\n          ? state.currentMagnet.attracted.id\n          : state.currentMagnet.attractor.id;\n      const anchorId =\n        state.currentMagnet.attracted.type === \"ANCHOR\"\n          ? state.currentMagnet.attracted.id\n          : state.currentMagnet.attractor.id;\n      const name =\n        state.currentMagnet.attracted.type === \"NODE\"\n          ? state.currentMagnet.attracted.name\n          : state.currentMagnet.attractor.name;\n\n      newWeakLink.push({\n        anchorId: anchorId,\n        nodeId: nodeId,\n        name: name,\n      });\n    }\n    return {\n      ...state,\n      mode: MODE_SELECT,\n      anchorsToMove: [],\n      originalPosition: {},\n      alreadyMoved: {},\n      weakLinksToRemove: [],\n      weakLinks: [\n        ...state.weakLinks.filter(\n          ({ anchorId, nodeId }) =>\n            !state.weakLinksToRemove.includes(anchorId + \"-\" + nodeId)\n        ),\n        ...newWeakLink,\n      ],\n    };\n  }\n\n  return {\n    ...state,\n    mode: MODE_SELECT,\n    anchorsToMove: [],\n    originalPosition: {},\n    alreadyMoved: {},\n\n    weakLinksToRemove: [],\n\n    weakLinks: [\n      ...state.weakLinks.filter(\n        ({ anchorId, nodeId }) =>\n          !state.weakLinksToRemove.includes(anchorId + \"-\" + nodeId)\n      ),\n    ],\n  };\n};\n\nexport const updatePosition = (state, action) => {\n  const { x, y, shiftPress } = action;\n  const { x: originalX, y: originalY } = state.originalPosition;\n\n  let newMoveX, newMoveY;\n  // if shift is pressed only allow to move along x or y axis\n  if (shiftPress) {\n    if (Math.abs(x - originalX) > Math.abs(y - originalY)) {\n      newMoveX = x - originalX;\n      newMoveY = 0;\n    } else {\n      newMoveX = 0;\n      newMoveY = y - originalY;\n    }\n  } else {\n    newMoveX = x - originalX;\n    newMoveY = y - originalY;\n  }\n\n  const anchorById = state.anchors.byId;\n  state.anchorsToMove.forEach((anchorId) => {\n    anchorById[anchorId] = {\n      ...anchorById[anchorId],\n      x: anchorById[anchorId].x + newMoveX - state.alreadyMoved.x,\n      y: anchorById[anchorId].y + newMoveY - state.alreadyMoved.y,\n    };\n  });\n\n  return {\n    ...state,\n    anchors: {\n      ...state.anchors,\n      byId: { ...anchorById },\n    },\n    alreadyMoved: {\n      x: newMoveX,\n      y: newMoveY,\n    },\n  };\n};\n","import { componentUseThisAnchor } from \"./utils\";\n\nconst deleteElement = (state, action) => {\n  const selection = action.selection;\n  if (\n    selection.length === 1 &&\n    state.pathComponents.allIds.includes(selection[0])\n  ) {\n    // we only consider the deletion of a component (not anchors)\n    const componentId = selection[0];\n\n    const anchorToChange = [\"from\", \"to\", \"position\"]\n      .map((arg) => state.pathComponents.byId[componentId][arg])\n      .filter((id) => !!id);\n\n    // get the list of of ids of anchors that are not anymore used by components\n    const anchorToRemove = anchorToChange.filter((anchorId) => {\n      return (\n        state.pathComponents.allIds.filter((elementId) =>\n          componentUseThisAnchor(state.pathComponents.byId[elementId], anchorId)\n        ).length === 1\n      );\n    });\n\n    const newAnchors = { ...state.anchors.byId };\n    anchorToRemove.forEach((id) => delete newAnchors[id]);\n\n    const newComponents = { ...state.pathComponents.byId };\n    delete newComponents[componentId];\n    return {\n      ...state,\n      pathComponents: {\n        allIds: [\n          ...state.pathComponents.allIds.filter((id) => id !== componentId),\n        ],\n        byId: { ...newComponents },\n      },\n      anchors: {\n        byId: { ...newAnchors },\n        allIds: [\n          ...state.anchors.allIds.filter((id) => !anchorToRemove.includes(id)),\n        ],\n      },\n      weakLinks: [\n        ...state.weakLinks.filter(\n          ({ anchorId, nodeId, name }) =>\n            nodeId !== componentId && !anchorToRemove.includes(anchorId)\n        ),\n      ],\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default deleteElement;\n","import { getAdhesivePoints, isAnchor } from \"./utils\";\nimport { defaultCurrant } from \"./debugInitialState\";\nimport { MODE_CREATE_PATH_ELEMENT } from \"./interactionModes\";\n\nimport { v4 as uuid } from \"uuid\";\n\nexport const startCreatePathElement = (state, action) => {\n  return {\n    ...state,\n    selection: [],\n    adhesivePoints: [...getAdhesivePoints(action.elementType)],\n    mode: MODE_CREATE_PATH_ELEMENT,\n    newPath: {\n      ...state.newPath,\n      elementType: action.elementType,\n      isFromValidated: false,\n    },\n  };\n};\n\nexport const validateFirstStepPathElement = (state, action) => {\n  return {\n    ...state,\n    newPath: {\n      ...state.newPath,\n      attractorFrom: state.currentMagnet.attractor && {\n        ...state.currentMagnet.attractor,\n      },\n      to: { x: null, y: null },\n      attractorTo: null,\n      isFromValidated: true,\n      movedAfterFromCreation: false,\n    },\n  };\n};\n\nexport const invalidateFirstStepPathElement = (state, action) => {\n  if (state.newPath.movedAfterFromCreation && state.newPath.isFromValidated) {\n    return {\n      ...state,\n      newPath: {\n        ...state.newPath,\n        from: { ...state.newPath.to },\n        attractorFrom: state.newPath.attractorTo && {\n          ...state.newPath.attractorTo,\n        },\n        to: { x: null, y: null },\n        attractorTo: null,\n        isFromValidated: false,\n      },\n    };\n  } else {\n    return state;\n  }\n};\n\nexport const savePathElement = (state, action) => {\n  const attractorTo = state.currentMagnet.attractor && {\n    ...state.currentMagnet.attractor,\n  };\n  const { attractorFrom, from, to, elementType } = state.newPath;\n\n  const newId_element = uuid();\n\n  const fromAnchor =\n    attractorFrom && attractorFrom.type === \"ANCHOR\"\n      ? attractorFrom.id\n      : uuid();\n  const toAnchor =\n    attractorTo && attractorTo.type === \"ANCHOR\" ? attractorTo.id : uuid();\n\n  // create anchors if necessary\n  let newAnchors = { ...state.anchors };\n  if (!attractorFrom || attractorFrom.type !== \"ANCHOR\") {\n    newAnchors = {\n      byId: {\n        ...newAnchors.byId,\n        [fromAnchor]: {\n          id: fromAnchor,\n          x: from.x,\n          y: from.y,\n        },\n      },\n      allIds: [...newAnchors.allIds, fromAnchor],\n    };\n  }\n  if (!attractorTo || attractorTo.type !== \"ANCHOR\") {\n    newAnchors = {\n      byId: {\n        ...newAnchors.byId,\n        [toAnchor]: {\n          id: toAnchor,\n          x: to.x,\n          y: to.y,\n        },\n      },\n      allIds: [...newAnchors.allIds, toAnchor],\n    };\n  }\n\n  // create weak links if necessary\n  const newWeakLinks = [];\n  if (attractorFrom && attractorFrom.type === \"NODE\") {\n    newWeakLinks.push({\n      anchorId: fromAnchor,\n      nodeId: attractorFrom.id,\n      name: attractorFrom.name,\n    });\n  }\n  if (attractorTo && attractorTo.type === \"NODE\") {\n    newWeakLinks.push({\n      anchorId: toAnchor,\n      nodeId: attractorTo.id,\n      name: attractorTo.name,\n    });\n  }\n\n  return {\n    ...state,\n    currentMagnet: {\n      ...state.currentMagnet,\n      attractor: {\n        type: \"ANCHOR\",\n        id: toAnchor,\n      },\n    },\n    newPath: {\n      ...state.newPath,\n      isFromValidated: false,\n      from: {\n        ...to,\n      },\n      to: {\n        x: null,\n        y: null,\n      },\n    },\n    pathComponents: {\n      byId: {\n        ...state.pathComponents.byId,\n        [newId_element]: {\n          id: newId_element,\n          from: fromAnchor,\n          to: toAnchor,\n          type: elementType,\n          currant: defaultCurrant,\n          label: \"\",\n          annotation: \"\",\n          mirror: false,\n          invert: false,\n        },\n      },\n      allIds: [...state.pathComponents.allIds, newId_element],\n    },\n    anchors: { ...newAnchors },\n    weakLinks: [...state.weakLinks, ...newWeakLinks],\n  };\n};\n\nexport const updatePosition = (state, action) => {\n  const { x, y, shiftPress } = action;\n\n  if (state.newPath.isFromValidated) {\n    if (shiftPress) {\n      const { x: xFrom, y: yFrom } = state.newPath.from;\n      if (Math.abs(x - xFrom) > Math.abs(y - yFrom)) {\n        return {\n          ...state,\n          newPath: {\n            ...state.newPath,\n            to: { x: x, y: yFrom },\n            movedAfterFromCreation: true,\n          },\n        };\n      } else {\n        return {\n          ...state,\n          newPath: {\n            ...state.newPath,\n            to: { x: xFrom, y: y },\n            movedAfterFromCreation: true,\n          },\n        };\n      }\n    }\n    return {\n      ...state,\n      newPath: {\n        ...state.newPath,\n        to: { x: x, y: y },\n        movedAfterFromCreation: true,\n      },\n    };\n  } else {\n    return {\n      ...state,\n      newPath: {\n        ...state.newPath,\n        from: { x: x, y: y },\n      },\n    };\n  }\n};\n","import { isInRectangle } from \"./utils\";\n\nimport { MODE_SELECT, MODE_RECTANGLE_SELECTION } from \"./interactionModes\";\n\nexport const updatePosition = (state, action) => {\n  const { x, y } = action;\n  const newRectangle = {\n    ...state.rectangleSelection,\n    x1: x,\n    y1: y,\n  };\n\n  return {\n    ...state,\n    selection: [\n      ...state.anchors.allIds.filter((id) =>\n        isInRectangle(state.anchors.byId[id], newRectangle)\n      ),\n    ],\n    rectangleSelection: {\n      ...state.rectangleSelection,\n      x1: x,\n      y1: y,\n    },\n  };\n};\n\nexport const stopRectangleSelection = (state, action) => {\n  // add equality verification, if rectangle has no area it's probably a single click\n  // so we reset the selection\n  return {\n    ...state,\n    mode: MODE_SELECT,\n    rectangleSelection: {},\n    selection:\n      state.rectangleSelection.x0 === state.rectangleSelection.x1 ||\n      state.rectangleSelection.y0 === state.rectangleSelection.y1\n        ? []\n        : [...state.selection],\n  };\n};\n\nexport const startRectangleSelection = (state, action) => {\n  return {\n    ...state,\n    mode: MODE_RECTANGLE_SELECTION,\n    rectangleSelection: {\n      x0: action.x,\n      y0: action.y,\n      x1: action.x,\n      y1: action.y,\n    },\n  };\n};\n","import { MODE_CREATE_NODE_ELEMENT } from \"./interactionModes\";\n\nimport { getAdhesivePoints } from \"./utils\";\nimport { getElementAnchors, isMultyPole } from \"../../components\";\n\nimport { v4 as uuid } from \"uuid\";\n\nexport const updatePosition = (state, action) => {\n  const { x, y } = action;\n  return {\n    ...state,\n    newNode: {\n      ...state.newNode,\n      position: { x: x, y: y },\n    },\n  };\n};\n\nexport const startNodeCreation = (state, action) => {\n  return {\n    ...state,\n    selection: [],\n    adhesivePoints: [...getAdhesivePoints(action.elementType)],\n    mode: MODE_CREATE_NODE_ELEMENT,\n    newNode: {\n      elementType: action.elementType,\n      position: { x: null, y: null },\n    },\n  };\n};\n\nexport const saveNodeCreation = (state, action) => {\n  if (\n    state.mode === MODE_CREATE_NODE_ELEMENT &&\n    state.newNode.position.x !== null &&\n    state.newNode.position.y !== null\n  ) {\n    const newId_element = uuid();\n    const positionId = uuid();\n\n    const newWeakLink = [];\n\n    if (state.currentMagnet.attractor && state.currentMagnet.attracted) {\n      // node created relatively to an anchor\n      // We will link this anchor to the new node\n      if (state.currentMagnet.attractor.type === \"ANCHOR\") {\n        newWeakLink.push({\n          anchorId: state.currentMagnet.attractor.id,\n          nodeId: newId_element,\n          name: state.currentMagnet.attracted.name,\n        });\n      }\n      if (state.currentMagnet.attractor.type === \"NODE\") {\n        newWeakLink.push({\n          anchorId: positionId,\n          nodeId: state.currentMagnet.attractor.id,\n          name: state.currentMagnet.attractor.name,\n          nameAnchor: state.currentMagnet.attracted.name,\n        });\n      }\n    }\n\n    return {\n      ...state,\n      newNode: {\n        ...state.newNode,\n        position: { x: null, y: null },\n      },\n      pathComponents: {\n        byId: {\n          ...state.pathComponents.byId,\n          [newId_element]: {\n            id: newId_element,\n            position: positionId,\n            type: state.newNode.elementType,\n            angle: 0,\n          },\n        },\n        allIds: [...state.pathComponents.allIds, newId_element],\n      },\n      anchors: {\n        ...state.anchors,\n        byId: {\n          ...state.anchors.byId,\n          [positionId]: {\n            id: positionId,\n            x: state.newNode.position.x,\n            y: state.newNode.position.y,\n            isNodePosition: true,\n            nodeId: newId_element,\n          },\n        },\n      },\n      weakLinks: [...state.weakLinks, ...newWeakLink],\n    };\n  }\n  return state;\n};\n\nconst newPositions = (anchors, toUpdate, deltaToAdd) => {\n  const newAnchors = { ...anchors };\n\n  toUpdate.forEach(({ anchorId, anchorName }) => {\n    newAnchors[anchorId] = {\n      ...newAnchors[anchorId],\n      x: newAnchors[anchorId].x + deltaToAdd[anchorName].dx,\n      y: newAnchors[anchorId].y + deltaToAdd[anchorName].dy,\n    };\n  });\n\n  return { ...newAnchors };\n};\n\nexport const rotateNode = (state, { id, value }) => {\n  // we prepare data for the update\n  // first we get coordinate of anchors before and after rotation\n  const element = state.pathComponents.byId[id];\n\n  const positionCoords = state.anchors.byId[element.position];\n  const prevAngle = element.angle;\n  const newAngle = value;\n\n  const prevAnchors = getElementAnchors({\n    ...element,\n    positionCoords: positionCoords,\n    angle: prevAngle,\n  });\n  const newAnchors = getElementAnchors({\n    ...element,\n    positionCoords: positionCoords,\n    angle: newAngle,\n  });\n\n  // Now we create a dictionary that for an anchor name return dx and dy the delta modification of the anchor\n  const deltaToAdd = {};\n  newAnchors.forEach(({ name, x, y }) => {\n    deltaToAdd[name] = { dx: x, dy: y };\n  });\n  prevAnchors.forEach(({ name, x, y }) => {\n    deltaToAdd[name].dx -= x;\n    deltaToAdd[name].dy -= y;\n  });\n\n  if (\n    state.rotationHelper &&\n    state.rotationHelper.id &&\n    state.rotationHelper.id === id\n  ) {\n    // the id is the same as before So we just need to do the update of coordinates\n\n    return {\n      ...state,\n      anchors: {\n        ...state.anchors,\n        byId: {\n          ...newPositions(\n            state.anchors.byId,\n            state.rotationHelper.IdToUpdate,\n            deltaToAdd\n          ),\n        },\n      },\n      pathComponents: {\n        ...state.pathComponents,\n        byId: {\n          ...state.pathComponents.byId,\n          [id]: {\n            ...state.pathComponents.byId[id],\n            angle: newAngle,\n          },\n        },\n      },\n    };\n  } else {\n    const IdToUpdate = [];\n    const toRemove = [];\n\n    // we will parse weakLinks to know what to update and what to remove\n    state.weakLinks.forEach(({ anchorId, nodeId, name, nameAnchor }, index) => {\n      if (\n        anchorId === element.position &&\n        !(deltaToAdd[nameAnchor].x === 0 && deltaToAdd[nameAnchor].y === 0)\n      ) {\n        // the element has a parent and it's anchor need to move\n        // TODO : here is a lazy soution : breking the link\n        toRemove.push(index);\n      }\n      if (nodeId === id) {\n        if (\n          !state.anchors.byId[anchorId].isNodePosition ||\n          !isMultyPole[\n            state.pathComponents.byId[state.anchors.byId[anchorId].nodeId].type\n          ]\n        ) {\n          // if child is path of mono pole\n          IdToUpdate.push({ anchorId, anchorName: name });\n        } else {\n          toRemove.push(index);\n        }\n      }\n    });\n\n    console.log(toRemove.length);\n    return {\n      ...state,\n      anchors: {\n        ...state.anchors,\n        byId: { ...newPositions(state.anchors.byId, IdToUpdate, deltaToAdd) },\n      },\n      pathComponents: {\n        ...state.pathComponents,\n        byId: {\n          ...state.pathComponents.byId,\n          [id]: {\n            ...state.pathComponents.byId[id],\n            angle: newAngle,\n          },\n        },\n      },\n      rotationHelper: {\n        IdToUpdate: IdToUpdate,\n        id: id,\n      },\n      weakLinks: [\n        ...state.weakLinks.filter((elem, index) => !toRemove.includes(index)),\n      ],\n    };\n  }\n};\n","import { componentUseThisAnchor, replaceComponentAnchor } from \"./utils\";\n\nimport { v4 as uuid } from \"uuid\";\n\nexport const stackAnchors = (state, action) => {\n  const anchorsSelected = state.selection.filter(\n    (id) => id in state.anchors.byId\n  );\n  const movedAnchors = [];\n  if (\n    anchorsSelected.length <= 1 ||\n    ![\"U\", \"D\", \"L\", \"R\"].includes(action.direction)\n  ) {\n    return state;\n  } else {\n    const newPosition = {};\n\n    // We start by looping on selected element to find the min/max along x/y depending on the letter\n    anchorsSelected.forEach((id, index) => {\n      const anchor = state.anchors.byId[id];\n\n      switch (action.direction) {\n        case \"U\":\n          newPosition.y =\n            index === 0 ? anchor.y : Math.min(newPosition.y, anchor.y);\n          break;\n        case \"D\":\n          newPosition.y =\n            index === 0 ? anchor.y : Math.max(newPosition.y, anchor.y);\n          break;\n        case \"L\":\n          newPosition.x =\n            index === 0 ? anchor.x : Math.min(newPosition.x, anchor.x);\n          break;\n        case \"R\":\n          newPosition.x =\n            index === 0 ? anchor.x : Math.max(newPosition.x, anchor.x);\n          break;\n        default:\n          break;\n      }\n    });\n\n    // now we now the new x/y we change those positions\n    anchorsSelected.forEach((id) => {\n      const anchor = state.anchors.byId[id];\n\n      //  if the position is modified we just break all the weak lins associated\n      if (\n        (newPosition.x !== undefined && newPosition.x !== anchor.x) ||\n        (newPosition.y !== undefined && newPosition.y !== anchor.y)\n      ) {\n        movedAnchors.push(id);\n      }\n\n      state.anchors.byId[id] = {\n        ...anchor,\n        ...newPosition,\n      };\n    });\n\n    return {\n      ...state,\n      anchors: {\n        ...state.anchors,\n        byId: { ...state.anchors.byId },\n      },\n      weakLinks: [\n        ...state.weakLinks.filter(\n          ({ anchorId }) => !movedAnchors.includes(anchorId)\n        ),\n      ],\n    };\n  }\n};\n\nexport const splitAnchor = (state, action) => {\n  let anchorId = action.anchorId;\n  if (\n    !anchorId &&\n    state.selection.length === 1 &&\n    state.anchors.allIds.includes(state.selection[0])\n  ) {\n    anchorId = state.selection[0];\n  }\n  if (anchorId && state.anchors.allIds.includes(anchorId)) {\n    const componentsToChange = state.pathComponents.allIds.filter((id) =>\n      componentUseThisAnchor(state.pathComponents.byId[id], anchorId)\n    );\n    if (componentsToChange.length <= 1) {\n      return state;\n    }\n\n    const newAnchors = state.anchors;\n    const newComponents = state.pathComponents.byId;\n    const newWeakLinks = [];\n    const weakLinksToCopy = state.weakLinks.filter(\n      ({ anchorId: linkedAnchorId }) => anchorId === linkedAnchorId\n    );\n\n    componentsToChange.slice(1).forEach((componentId) => {\n      const newAnchorId = uuid();\n\n      newComponents[componentId] = replaceComponentAnchor(\n        state.pathComponents.byId[componentId],\n        anchorId,\n        newAnchorId\n      );\n\n      newAnchors.allIds = [newAnchorId, ...newAnchors.allIds];\n      newAnchors.byId = {\n        ...newAnchors.byId,\n        [newAnchorId]: { ...newAnchors.byId[anchorId] },\n      };\n\n      weakLinksToCopy.forEach((linkToCopy) => {\n        newWeakLinks.push({ ...linkToCopy, anchorId: newAnchorId });\n      });\n    });\n\n    return {\n      ...state,\n      pathComponents: {\n        ...state.pathComponents,\n        byId: { ...newComponents },\n      },\n      anchors: {\n        allIds: [...newAnchors.allIds],\n        byId: { ...newAnchors.byId },\n      },\n      weakLinks: [...state.weakLinks, ...newWeakLinks],\n    };\n  }\n  return state;\n};\n","import { createStore } from \"redux\";\n\nimport reducer_displayOptions from \"./displayOptions\";\nimport reducer_magnetsOptions from \"./magnetsOptions\";\n\nimport {\n  START_DRAGGING,\n  START_SELECT,\n  TOGGLE_SELECTION,\n  STOP_DRAGGING,\n  START_CREATE_PATH_ELEMENT,\n  START_CREATE_NODE_ELEMENT,\n  ELEMENT_CREATION_NEXT_STEP,\n  VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION,\n  SAVE_PATH_ELEMENT_CREATION,\n  UPDATE_POSITION,\n  SPLIT_ANCHOR,\n  START_RECTANGLE_SELECTION,\n  STOP_RECTANGLE_SELECTION,\n  STACK_SELECTED_ANCHORS,\n  DELETE_ELEMENT,\n  UPDATE_COMPONENT,\n} from \"../actions\";\n\nimport {\n  MODE_SELECT,\n  MODE_DRAG,\n  MODE_CREATE_PATH_ELEMENT,\n  MODE_CREATE_NODE_ELEMENT,\n  MODE_RECTANGLE_SELECTION,\n} from \"./interactionModes\";\n\nimport { initial_state } from \"./debugInitialState\";\n\nimport {\n  startDragging,\n  stopDragging,\n  updatePosition as draggingUpdatePosition,\n} from \"./dragging\";\n\nimport deleteElement from \"./delete\";\nimport {\n  startCreatePathElement,\n  validateFirstStepPathElement,\n  invalidateFirstStepPathElement,\n  savePathElement,\n  updatePosition as pathCreationUpdatePosition,\n} from \"./pathCreation\";\n\nimport {\n  stopRectangleSelection,\n  startRectangleSelection,\n  updatePosition as rectangleSelectionUpdatePosition,\n} from \"./rectangleSelection\";\n\nimport {\n  startNodeCreation,\n  saveNodeCreation,\n  updatePosition as nodeCreationUpdatePosition,\n  rotateNode,\n} from \"./nodeCreation\";\n\nimport { stackAnchors, splitAnchor } from \"./anchorHelper\";\nimport { MULTIPLICATIVE_CONST } from \"../../components/constantes\";\n\nfunction update(state = initial_state, action) {\n  state = { ...reducer_displayOptions(state, action) };\n  state = { ...reducer_magnetsOptions(state, action) };\n\n  switch (action.type) {\n    case UPDATE_COMPONENT:\n      const { id, name, value } = action;\n\n      if (name === \"angle\") {\n        return rotateNode(state, action);\n      }\n      return {\n        ...state,\n        pathComponents: {\n          ...state.pathComponents,\n          byId: {\n            ...state.pathComponents.byId,\n            [id]: {\n              ...state.pathComponents.byId[id],\n              [name]: value,\n            },\n          },\n        },\n      };\n    case TOGGLE_SELECTION:\n      if (action.reset) {\n        return {\n          ...state,\n          selection: [action.objectId],\n        };\n      } else {\n        const index = state.selection.findIndex((x) => x === action.objectId);\n        if (index >= 0) {\n          return {\n            ...state,\n            selection: [\n              ...state.selection.slice(0, index),\n              ...state.selection.slice(index + 1),\n            ],\n          };\n        } else {\n          return {\n            ...state,\n            selection: [...state.selection, action.objectId],\n          };\n        }\n      }\n    case START_SELECT:\n      return {\n        ...state,\n        selection: [],\n        adhesivePoints: [],\n        mode: MODE_SELECT,\n      };\n\n    case START_DRAGGING:\n      return startDragging(state, action);\n\n    case STOP_DRAGGING:\n      return stopDragging(state, action);\n\n    case UPDATE_POSITION:\n      const { attractor, attracted } = action;\n\n      if (\n        attractor === null &&\n        (state.mode === MODE_CREATE_PATH_ELEMENT ||\n          state.mode === MODE_CREATE_NODE_ELEMENT) &&\n        state.magnetsOptions.isGridAttracting\n      ) {\n        //not already attracted by someone\n\n        // TODO adapt here for dragging :\n        // 1. all the moving magnets should be saved with there dx, dy (like in magnets.js)\n        // 2. check if x-dx, y-dy correspond to a point\n        const { x, y } = action;\n\n        const refSpace = MULTIPLICATIVE_CONST * state.magnetsOptions.gridSpace;\n        const modX = Math.abs(x) % refSpace;\n        const modY = Math.abs(y) % refSpace;\n\n        const R = 10;\n        if (\n          (modX <= R || modX >= refSpace - R) &&\n          (modY <= R || modY >= refSpace - R)\n        ) {\n          action.x = refSpace * Math.round(x / refSpace);\n          action.y = refSpace * Math.round(y / refSpace);\n        }\n      }\n      switch (state.mode) {\n        case MODE_DRAG:\n          return {\n            ...draggingUpdatePosition(state, action),\n            currentMagnet: { attractor, attracted },\n          };\n\n        case MODE_CREATE_PATH_ELEMENT:\n          return {\n            ...pathCreationUpdatePosition(state, action),\n            currentMagnet: { attractor, attracted },\n          };\n\n        case MODE_CREATE_NODE_ELEMENT:\n          return {\n            ...nodeCreationUpdatePosition(state, action),\n            currentMagnet: { attractor, attracted },\n          };\n\n        case MODE_RECTANGLE_SELECTION:\n          return {\n            ...rectangleSelectionUpdatePosition(state, action),\n            currentMagnet: { attractor, attracted },\n          };\n\n        default:\n          return {\n            ...state,\n            currentMagnet: { attractor, attracted },\n          };\n      }\n\n    case START_CREATE_PATH_ELEMENT:\n      return startCreatePathElement(state, action);\n\n    case START_CREATE_NODE_ELEMENT:\n      return startNodeCreation(state, action);\n\n    case ELEMENT_CREATION_NEXT_STEP:\n      return saveNodeCreation(state, action);\n\n    case VALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION:\n      return validateFirstStepPathElement(state, action);\n\n    case INVALIDATE_FIRST_STEP_PATH_ELEMENT_CREATION:\n      return invalidateFirstStepPathElement(state, action);\n\n    case SAVE_PATH_ELEMENT_CREATION:\n      return savePathElement(state, action);\n\n    case SPLIT_ANCHOR:\n      return splitAnchor(state, action);\n\n    case START_RECTANGLE_SELECTION:\n      return startRectangleSelection(state, action);\n\n    case STOP_RECTANGLE_SELECTION:\n      return stopRectangleSelection(state, action);\n\n    case STACK_SELECTED_ANCHORS:\n      return stackAnchors(state, action);\n\n    case DELETE_ELEMENT:\n      return deleteElement(state, action);\n\n    default:\n      return state;\n  }\n}\n\n// Create a Redux store holding the state of your app.\n// Its API is { subscribe, dispatch, getState }.\nlet store = createStore(update);\n\nexport default store;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  setZoom,\n  setModeMovePaper,\n  startSelect,\n  stackSelectedAnchors,\n  updateMagnetOption,\n  startCreatePathElement,\n} from \"../redux/actions\";\nimport { MODE_MOVE_PAPER } from \"../redux/store/interactionModes\";\n\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport ControlCameraIcon from \"@material-ui/icons/ControlCamera\";\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport ZoomOutIcon from \"@material-ui/icons/ZoomOut\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startCreatePathElement: (name) => dispatch(startCreatePathElement(name)),\n    setZoom: (zoom) => dispatch(setZoom(zoom)),\n    setModeMovePaper: () => dispatch(setModeMovePaper()),\n    startSelect: () => dispatch(startSelect()),\n    stackSelectedAnchors: (direction) =>\n      dispatch(stackSelectedAnchors(direction)),\n    updateMagnetOption: (optionName, optionValue = null) =>\n      dispatch(updateMagnetOption(optionName, optionValue)),\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    mode: state.mode,\n    zoom: state.displayOptions.zoom,\n    magnetsOptions: state.magnetsOptions,\n  };\n};\n\nconst ToolBar = ({\n  mode,\n  zoom,\n  magnetsOptions,\n  startCreatePathElement,\n  setZoom,\n  setModeMovePaper,\n  stackSelectedAnchors,\n  updateMagnetOption,\n}) => {\n  return (\n    <>\n      {/* TODO create a clean toolbar */}\n      <IconButton\n        onMouseDown={(event) => {\n          startCreatePathElement(\"short\");\n          event.stopPropagation();\n        }}\n      >\n        <SvgIcon>\n          <circle cx=\"4\" cy=\"20\" r=\"2\" />\n          <circle cx=\"20\" cy=\"4\" r=\"2\" />\n          <path d=\"M 19.5,3.5 3.5,19.5 l 1,1 L 20.5,4.5 Z\" />\n        </SvgIcon>\n      </IconButton>\n      <IconButton\n        onMouseDown={(event) => {\n          startCreatePathElement(\"upRight\");\n          event.stopPropagation();\n        }}\n      >\n        <SvgIcon>\n          <circle cx=\"4\" cy=\"20\" r=\"2\" />\n          <circle cx=\"20\" cy=\"4\" r=\"2\" />\n          <path d=\"M 20,3.5 H 3.5 V 20 h 1 V 4.5 H 20 Z\" />\n        </SvgIcon>\n      </IconButton>\n      <IconButton\n        onMouseDown={(event) => {\n          startCreatePathElement(\"rightUp\");\n          event.stopPropagation();\n        }}\n      >\n        <SvgIcon>\n          <circle cx=\"4\" cy=\"20\" r=\"2\" />\n          <circle cx=\"20\" cy=\"4\" r=\"2\" />\n          <path d=\"M 5,20.5 20.5,20.5 l 0,-16.5 h -1 L 19.5,19.5 l -15.5,0 z\" />\n        </SvgIcon>\n      </IconButton>\n      |\n      <IconButton\n        color={mode === MODE_MOVE_PAPER ? \"secondary\" : \"default\"}\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          if (mode === MODE_MOVE_PAPER) {\n            startSelect();\n          } else {\n            setModeMovePaper();\n          }\n        }}\n      >\n        <ControlCameraIcon />\n      </IconButton>\n      <IconButton\n        disabled={zoom < 0.2}\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          setZoom(zoom / 2);\n        }}\n      >\n        <ZoomOutIcon />\n      </IconButton>\n      {zoom}\n      <IconButton\n        disabled={zoom > 2}\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          setZoom(zoom * 2);\n        }}\n      >\n        <ZoomInIcon />\n      </IconButton>\n      |\n      <IconButton\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          stackSelectedAnchors(\"L\");\n        }}\n      >\n        <SvgIcon>\n          <path d=\"M22 13V19H6V13H22M6 5V11H16V5H6M2 2V22H4V2H2\" />\n        </SvgIcon>\n      </IconButton>\n      <IconButton\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          stackSelectedAnchors(\"R\");\n        }}\n      >\n        <SvgIcon>\n          <path d=\"M18 13V19H2V13H18M8 5V11H18V5H8M20 2V22H22V2H20Z\" />\n        </SvgIcon>\n      </IconButton>\n      <IconButton\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          stackSelectedAnchors(\"U\");\n        }}\n      >\n        <SvgIcon>\n          <path d=\"M11 22H5V6H11V22M19 6H13V16H19V6M22 2H2V4H22V2Z\" />\n        </SvgIcon>\n      </IconButton>\n      <IconButton\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          stackSelectedAnchors(\"D\");\n        }}\n      >\n        <SvgIcon>\n          <path d=\"M11 18H5V2H11V18M19 8H13V18H19V8M22 20H2V22H22V20Z\" />\n        </SvgIcon>\n      </IconButton>\n      |\n      <IconButton\n        color={magnetsOptions.isGridAttracting ? \"secondary\" : \"default\"}\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          updateMagnetOption(\"isGridAttracting\");\n        }}\n      >\n        <SvgIcon>\n          <path d=\"M0 6v1h24v-1ZM0 12v1h24v-1ZM0 18v1h24v-1Z\" />\n          <path d=\"M4 0h1v24h-1ZM11 0h1v24h-1ZM18 0h1v24h-1Z\" />\n          <circle cx={18.5} cy={18.5} r={3} />\n        </SvgIcon>\n      </IconButton>\n      <Select\n        value={magnetsOptions.gridSpace}\n        onChange={(event) =>\n          updateMagnetOption(\"gridSpace\", event.target.value)\n        }\n      >\n        <MenuItem value={0.5}>0.5</MenuItem>\n        <MenuItem value={1}>1</MenuItem>\n        <MenuItem value={2}>2</MenuItem>\n      </Select>\n      <IconButton\n        color={\n          magnetsOptions.isPathCoordinatesAttracting ? \"secondary\" : \"default\"\n        }\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          updateMagnetOption(\"isPathCoordinatesAttracting\");\n        }}\n      >\n        <SvgIcon>\n          <path d=\"M4 11.5h20v1h-20Z\" />\n\n          <circle cx={2} cy={12} r={2} />\n          <circle cx={22} cy={12} r={2} />\n        </SvgIcon>\n      </IconButton>\n      <IconButton\n        color={magnetsOptions.isNodeAnchorsAttracting ? \"secondary\" : \"default\"}\n        onMouseDown={(event) => {\n          event.stopPropagation();\n          updateMagnetOption(\"isNodeAnchorsAttracting\");\n        }}\n      >\n        <SvgIcon>\n          <circle id=\"path858\" cx=\"2\" cy=\"16.5\" r=\"2\" />\n          <circle id=\"path834\" cx=\"2\" cy=\"7.5\" r=\"2\" />\n          <circle id=\"path838\" cx=\"22\" cy=\"12\" r=\"2\" />\n          <path d=\"m 22,11.5 v 1 L 18.5,12.5 7,21 7,17 H 2 V 16 H 7 L 7,8 H 2 v -1 L 7,7 7,3 18.5,11.5 Z\" />\n        </SvgIcon>\n      </IconButton>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolBar);\n","import React from \"react\";\nimport components from \"../components\";\nimport { connect } from \"react-redux\";\nimport { MODE_SELECT } from \"../redux/store/interactionModes\";\nimport { toggleSelection, startDragging } from \"../redux/actions\";\n\nconst mapDispatchToProps = (dispatch, { svgRef, displayOptions }) => {\n  return {\n    toggleSelection: (objectId, reset) =>\n      dispatch(toggleSelection(objectId, reset)),\n    startDragging: (x, y) => {\n      const {\n        x: xOffset,\n        y: yOffset,\n        width: svgWidth,\n        height: svgHeight,\n      } = svgRef.current.getBoundingClientRect();\n\n      const {\n        x: SVG_X,\n        y: SVG_Y,\n        width: SVG_WIDTH,\n        height: SVG_HEIGHT,\n        zoom,\n      } = displayOptions;\n\n      dispatch(\n        startDragging(\n          SVG_X + (x - xOffset) * (SVG_WIDTH / svgWidth),\n          SVG_Y + (y - yOffset) * (SVG_HEIGHT / svgHeight)\n        )\n      );\n    },\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    pathComponents: state.pathComponents,\n    selection: state.selection,\n    mode: state.mode,\n  };\n};\n\nconst Components = ({\n  pathComponents,\n  selection,\n  mode,\n  startDragging,\n  toggleSelection,\n}) => (\n  <>\n    {pathComponents.allIds.map(\n      (id) =>\n        pathComponents.byId[id].type &&\n        components[pathComponents.byId[id].type]({\n          ...pathComponents.byId[id],\n          onMouseDown:\n            mode === MODE_SELECT\n              ? (event) => {\n                  event.stopPropagation();\n                  if (\n                    !event.ctrlKey &&\n                    selection.includes(pathComponents.byId[id].id)\n                  ) {\n                    startDragging(\n                      event.nativeEvent.clientX,\n                      event.nativeEvent.clientY\n                    );\n                  } else {\n                    toggleSelection(pathComponents.byId[id].id, !event.ctrlKey);\n                  }\n                }\n              : null,\n          selected: selection.includes(pathComponents.byId[id].id),\n          // showHandles: mode === MODE_LINK,\n        })\n    )}\n  </>\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Components);\n","import React from \"react\";\n\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { MODE_SELECT } from \"../redux/store/interactionModes\";\nimport { toggleSelection, startDragging } from \"../redux/actions\";\n\nconst mapDispatchToProps = (dispatch, { svgRef, displayOptions }) => {\n  return {\n    toggleSelection: (objectId, reset) =>\n      dispatch(toggleSelection(objectId, reset)),\n    startDragging: (x, y) => {\n      const {\n        x: xOffset,\n        y: yOffset,\n        width: svgWidth,\n        height: svgHeight,\n      } = svgRef.current.getBoundingClientRect();\n      const {\n        x: SVG_X,\n        y: SVG_Y,\n        width: SVG_WIDTH,\n        height: SVG_HEIGHT,\n        zoom,\n      } = displayOptions;\n\n      dispatch(\n        startDragging(\n          SVG_X + (x - xOffset) * (SVG_WIDTH / svgWidth),\n          SVG_Y + (y - yOffset) * (SVG_HEIGHT / svgHeight)\n        )\n      );\n    },\n  };\n};\nconst mapStateToProps = (state, { id }) => {\n  return {\n    x: state.anchors.byId[id].x,\n    y: state.anchors.byId[id].y,\n    mode: state.mode,\n    selected: state.selection.includes(id),\n  };\n};\n\nconst Anchor = ({\n  id,\n  x,\n  y,\n  mode,\n  selected,\n  startDragging,\n  toggleSelection,\n}) => (\n  <circle\n    cx={x}\n    cy={y}\n    r={5}\n    className={`anchor ${selected ? \"selected\" : \"\"}`}\n    onMouseDown={\n      mode === MODE_SELECT\n        ? (event) => {\n            event.stopPropagation();\n            if (!event.ctrlKey && selected) {\n              startDragging(\n                event.nativeEvent.clientX,\n                event.nativeEvent.clientY\n              );\n            } else {\n              toggleSelection(id, !event.ctrlKey);\n            }\n          }\n        : null\n    }\n  />\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Anchor);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Anchor from \"../atoms/anchor\";\n\nconst mapStateToProps = (state) => {\n  return {\n    anchorIds: state.anchors.allIds,\n  };\n};\n\nconst Anchors = ({ anchorIds, svgRef, displayOptions }) => (\n  <>\n    {anchorIds.map((id) => (\n      <Anchor\n        key={id}\n        id={id}\n        svgRef={svgRef}\n        displayOptions={displayOptions}\n      />\n    ))}\n  </>\n);\n\nexport default connect(mapStateToProps)(Anchors);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { updatePosition, stopDragging } from \"../redux/actions\";\nimport { MODE_DRAG } from \"../redux/store/interactionModes\";\nconst mapDispatchToProps = (dispatch, { attractor, attracted }) => {\n  return {\n    updatePosition: (x, y) =>\n      dispatch(updatePosition({ x, y, attractor, attracted })),\n    stopDragging: () => dispatch(stopDragging()),\n  };\n};\n\nconst Magnet = ({\n  id,\n  x,\n  y,\n  dx,\n  dy,\n  color,\n  mode,\n  updatePosition,\n  stopDragging,\n}) => {\n  const [isUsed, setIsUsed] = useState(false);\n\n  return (\n    <>\n      {isUsed && (\n        <circle\n          cx={x}\n          cy={y}\n          r={5}\n          style={{\n            fill: \"none\",\n            stroke: \"red\",\n            strokeWidth: 2,\n          }}\n        />\n      )}\n      <circle\n        cx={x + dx}\n        cy={y + dy}\n        r={10}\n        style={{\n          fill: color || \"transparent\",\n        }}\n        onMouseEnter={(event) => {\n          event.stopPropagation();\n          updatePosition(x + dx, y + dy);\n          setIsUsed(true);\n        }}\n        onMouseLeave={() => setIsUsed(false)}\n        onMouseMove={\n          (event) => event.stopPropagation() //stop the propagation\n        }\n        onMouseUp={\n          mode === MODE_DRAG\n            ? (event) => {\n                event.stopPropagation();\n                stopDragging();\n              }\n            : null\n        }\n      />\n    </>\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(Magnet);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  MODE_CREATE_PATH_ELEMENT,\n  MODE_CREATE_NODE_ELEMENT,\n  MODE_DRAG,\n} from \"../redux/store/interactionModes\";\n\nimport Magnet from \"../atoms/magnet\";\nimport { getElementAnchors } from \"../components\";\n\nconst mapStateToProps = (state) => {\n  return {\n    anchors: state.anchors,\n    pathComponents: state.pathComponents,\n    mode: state.mode,\n    anchorsToMove: state.anchorsToMove,\n    selection: state.selection,\n    adhesivePoints: state.adhesivePoints || null,\n    ...state.magnetsOptions,\n  };\n};\n\nconst isMoving = (element, anchorsToMove) => {\n  // help function to filter magnets\n  if (!anchorsToMove) {\n    return false;\n  }\n  if (typeof element == \"string\" && anchorsToMove.includes(element)) {\n    return true;\n  }\n  if (element.from && anchorsToMove.includes(element.from)) {\n    return true;\n  }\n  if (element.to && anchorsToMove.includes(element.to)) {\n    return true;\n  }\n  if (element.position && anchorsToMove.includes(element.position)) {\n    return true;\n  }\n  return false;\n};\n\nconst Magnets = ({\n  mode,\n  anchors,\n  pathComponents,\n  anchorsToMove,\n  adhesivePoints,\n  isPathCoordinatesAttracting,\n  isNodeAnchorsAttracting,\n}) => {\n  // TODO : use a correct way to compute how many circle to draw\n  if (\n    mode !== MODE_DRAG &&\n    mode !== MODE_CREATE_NODE_ELEMENT &&\n    mode !== MODE_CREATE_PATH_ELEMENT\n  ) {\n    return null;\n  }\n\n  return (\n    <>\n      {isNodeAnchorsAttracting &&\n        pathComponents.allIds\n          .filter((id) => !isMoving(pathComponents.byId[id], anchorsToMove))\n          .reduce(\n            (accumulator, id) => [\n              ...accumulator,\n              ...getElementAnchors({\n                ...pathComponents.byId[id],\n                fromCoords:\n                  pathComponents.byId[id].from &&\n                  anchors.byId[pathComponents.byId[id].from],\n                toCoords:\n                  pathComponents.byId[id].to &&\n                  anchors.byId[pathComponents.byId[id].to],\n                positionCoords:\n                  pathComponents.byId[id].position &&\n                  anchors.byId[pathComponents.byId[id].position],\n              }).map(({ x, y, name }) =>\n                adhesivePoints.reduce(\n                  (\n                    accu,\n                    { type, dx, dy, name: nameAdhesive = \"\", id: idAdhesive }\n                  ) => {\n                    return [\n                      ...accu,\n                      <Magnet\n                        key={`${id}-${name}<-${idAdhesive}-${\n                          nameAdhesive || \"\"\n                        }`}\n                        x={x}\n                        dx={dx}\n                        y={y}\n                        dy={dy}\n                        mode={mode}\n                        attractor={{\n                          type: pathComponents.byId[id].position\n                            ? \"NODE\"\n                            : \"PATH\",\n                          name: name,\n                          id: id,\n                        }}\n                        attracted={{\n                          type: type,\n                          name: nameAdhesive,\n                          id: idAdhesive,\n                        }}\n                      />,\n                    ];\n                  },\n                  []\n                )\n              ),\n            ],\n            []\n          )}\n      {isPathCoordinatesAttracting &&\n        anchors.allIds\n          .filter((id) => !isMoving(id, anchorsToMove))\n          .map((id) =>\n            adhesivePoints.reduce(\n              (\n                accu,\n                { type, dx, dy, name: nameAdhesive = \"\", id: idAdhesive }\n              ) => {\n                return [\n                  ...accu,\n                  <Magnet\n                    key={`${id}<-${idAdhesive}-${nameAdhesive || \"\"}`}\n                    x={anchors.byId[id].x}\n                    dx={dx}\n                    y={anchors.byId[id].y}\n                    dy={dy}\n                    mode={mode}\n                    attractor={{ type: \"ANCHOR\", name: \"\", id: id }}\n                    attracted={{\n                      type: type,\n                      name: nameAdhesive,\n                      id: idAdhesive,\n                    }}\n                  />,\n                ];\n              },\n              []\n            )\n          )}\n    </>\n  );\n};\n\nexport default connect(mapStateToProps)(Magnets);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport components from \"../components\";\nimport ToolBar from \"./toolbar\";\n\nimport {\n  updatePosition,\n  stopDragging,\n  validateFirstStepPathElementCreation,\n  invalidateFirstStepPathElementCreation,\n  savePathElementCreation,\n  nextStepOfElementCreation,\n  startRectangleSelection,\n  stopRectangleSelection,\n  startMovePaper,\n} from \"../redux/actions\";\nimport {\n  MODE_DRAG,\n  MODE_CREATE_PATH_ELEMENT,\n  MODE_CREATE_NODE_ELEMENT,\n  MODE_SELECT,\n  MODE_RECTANGLE_SELECTION,\n  MODE_MOVE_PAPER,\n} from \"../redux/store/interactionModes\";\n\nimport { MULTIPLICATIVE_CONST } from \"../components/constantes\";\n\nimport Components from \"./components\";\nimport Anchors from \"./anchors\";\nimport Magnets from \"./magnets\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updatePosition: (x, y, shiftPress) =>\n      dispatch(updatePosition({ x, y, shiftPress })),\n    stopDragging: () => dispatch(stopDragging()),\n    validateFirstStepPathElementCreation: () =>\n      dispatch(validateFirstStepPathElementCreation()),\n    invalidateFirstStepPathElementCreation: () =>\n      dispatch(invalidateFirstStepPathElementCreation()),\n    savePathElementCreation: () => dispatch(savePathElementCreation()),\n    nextStepOfElementCreation: () => dispatch(nextStepOfElementCreation()),\n    startRectangleSelection: (x, y) => dispatch(startRectangleSelection(x, y)),\n    stopRectangleSelection: () => dispatch(stopRectangleSelection()),\n    startMovePaper: (x, y) => dispatch(startMovePaper(x, y)),\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    mode: state.mode,\n    newPath: state.newPath,\n    newNode: state.newNode,\n    rectangleSelection: state.rectangleSelection,\n    displayOptions: state.displayOptions,\n    isGridAttracting: state.magnetsOptions.isGridAttracting,\n    gridSpace: state.magnetsOptions.gridSpace,\n  };\n};\n\nconst Container = ({\n  svgRef,\n  mode,\n  newPath,\n  newNode,\n  rectangleSelection,\n  displayOptions,\n  isGridAttracting,\n  gridSpace,\n  stopDragging,\n  updatePosition,\n  validateFirstStepPathElementCreation,\n  invalidateFirstStepPathElementCreation,\n  savePathElementCreation,\n  nextStepOfElementCreation,\n  startRectangleSelection,\n  stopRectangleSelection,\n  startMovePaper,\n}) => {\n  const {\n    x: SVG_X,\n    y: SVG_Y,\n    width: SVG_WIDTH,\n    height: SVG_HEIGHT,\n  } = displayOptions;\n\n  const followMouse = (event) => {\n    const {\n      x: xOffset,\n      y: yOffset,\n      width: svgWidth,\n      height: svgHeight,\n    } = svgRef.current.getBoundingClientRect();\n\n    switch (mode) {\n      case MODE_DRAG:\n      case MODE_CREATE_PATH_ELEMENT:\n      case MODE_CREATE_NODE_ELEMENT:\n      case MODE_RECTANGLE_SELECTION:\n        updatePosition(\n          SVG_X +\n            (event.nativeEvent.clientX - xOffset) * (SVG_WIDTH / svgWidth),\n          SVG_Y +\n            (event.nativeEvent.clientY - yOffset) * (SVG_HEIGHT / svgHeight),\n          event.shiftKey\n        );\n        break;\n      default:\n        break;\n    }\n  };\n\n  const click = (event) => {\n    const {\n      x: xOffset,\n      y: yOffset,\n      width: svgWidth,\n      height: svgHeight,\n    } = svgRef.current.getBoundingClientRect();\n\n    switch (mode) {\n      case MODE_SELECT:\n        event.stopPropagation();\n        startRectangleSelection(\n          SVG_X +\n            (event.nativeEvent.clientX - xOffset) * (SVG_WIDTH / svgWidth),\n          SVG_Y +\n            (event.nativeEvent.clientY - yOffset) * (SVG_HEIGHT / svgHeight)\n        );\n        break;\n      case MODE_CREATE_PATH_ELEMENT:\n        event.stopPropagation();\n        if (newPath.isFromValidated) {\n          savePathElementCreation(\n            SVG_X +\n              (event.nativeEvent.clientX - xOffset) * (SVG_WIDTH / svgWidth),\n            SVG_Y +\n              (event.nativeEvent.clientY - yOffset) * (SVG_HEIGHT / svgHeight)\n          );\n        } else {\n          validateFirstStepPathElementCreation();\n        }\n        break;\n      case MODE_CREATE_NODE_ELEMENT:\n        event.stopPropagation();\n        nextStepOfElementCreation();\n        break;\n      case MODE_MOVE_PAPER:\n        event.stopPropagation();\n        startMovePaper(event.nativeEvent.clientX, event.nativeEvent.clientY);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <ToolBar />\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox={`${SVG_X} ${SVG_Y} ${SVG_WIDTH} ${SVG_HEIGHT}`}\n        style={{ width: \"100%\", background: \"lightgray\" }}\n        onMouseMove={\n          mode === MODE_DRAG ||\n          mode === MODE_CREATE_PATH_ELEMENT ||\n          mode === MODE_CREATE_NODE_ELEMENT ||\n          mode === MODE_RECTANGLE_SELECTION\n            ? followMouse\n            : null\n        }\n        onMouseDown={click}\n        onMouseUp={\n          mode === MODE_DRAG\n            ? () => stopDragging()\n            : mode === MODE_RECTANGLE_SELECTION\n            ? (event) => {\n                event.stopPropagation();\n                stopRectangleSelection();\n              }\n            : null\n        }\n        ref={svgRef}\n      >\n        <defs>\n          <pattern\n            id=\"grid-magnets\"\n            x=\"-10\"\n            y=\"-10\"\n            width={gridSpace * MULTIPLICATIVE_CONST}\n            height={gridSpace * MULTIPLICATIVE_CONST}\n            patternUnits=\"userSpaceOnUse\"\n          >\n            <circle fill=\"gray\" cx=\"10\" cy=\"10\" r=\"3\"></circle>\n          </pattern>\n        </defs>\n        {isGridAttracting && (\n          <rect\n            x={SVG_X - 10}\n            y={SVG_Y - 10}\n            width=\"100%\"\n            height=\"100%\"\n            fill=\"url(#grid-magnets)\"\n          />\n        )}\n        <Components svgRef={svgRef} displayOptions={displayOptions} />\n\n        {/* display the path element in during its creation */}\n\n        {mode === MODE_CREATE_PATH_ELEMENT && // the element\n          newPath &&\n          newPath.isFromValidated &&\n          newPath.to &&\n          newPath.to.x !== null &&\n          newPath.to.y !== null &&\n          newPath.from &&\n          newPath.from.x !== null &&\n          newPath.from.y !== null &&\n          components[newPath.elementType]({\n            fromCoords: newPath.from,\n            toCoords: newPath.to,\n          })}\n        {mode === MODE_CREATE_PATH_ELEMENT && //the anchor TO\n          newPath &&\n          newPath.isFromValidated &&\n          newPath.to.x !== null &&\n          newPath.to.y !== null && (\n            <circle cx={newPath.to.x} cy={newPath.to.y} r={5} />\n          )}\n        {mode === MODE_CREATE_PATH_ELEMENT && // the anchor FROM\n          newPath &&\n          newPath.from &&\n          newPath.from.x !== null &&\n          newPath.from.y !== null && (\n            <circle\n              cx={newPath.from.x}\n              cy={newPath.from.y}\n              r={5}\n              onMouseEnter={invalidateFirstStepPathElementCreation}\n            />\n          )}\n\n        {/* display the path element in during its creation */}\n\n        {mode === MODE_CREATE_NODE_ELEMENT && // the element\n          newNode &&\n          newNode.position &&\n          newNode.position.x !== null &&\n          newNode.position.y !== null &&\n          components[newNode.elementType]({\n            positionCoords: newNode.position,\n          })}\n        {mode === MODE_CREATE_NODE_ELEMENT && // the anchor POSITION\n          newNode &&\n          newNode.position &&\n          newNode.position.x !== null &&\n          newNode.position.y !== null && (\n            <circle cx={newNode.position.x} cy={newNode.position.y} r={5} />\n          )}\n\n        <Anchors svgRef={svgRef} displayOptions={displayOptions} />\n        <Magnets svgRef={svgRef} displayOptions={displayOptions} />\n\n        {mode === MODE_RECTANGLE_SELECTION && (\n          <path\n            d={`M ${rectangleSelection.x0} ${rectangleSelection.y0} L  ${rectangleSelection.x0} ${rectangleSelection.y1} L ${rectangleSelection.x1} ${rectangleSelection.y1} L  ${rectangleSelection.x1} ${rectangleSelection.y0} Z`}\n            style={{ fill: \"transparent\", stroke: \"red\", strokeWidth: 1 }}\n          />\n        )}\n      </svg>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\n","import { drawElement, isMultyPole, isPath } from \"../../components\";\nimport { MULTIPLICATIVE_CONST } from \"../../components/constantes\";\n\nconst simplifyNumber = (x) => {\n  const rep = x.toFixed(2);\n  if (rep.slice(-3) === \".00\") {\n    return rep.slice(0, -3);\n  }\n  if (rep.slice(-1) === \"0\") {\n    return rep.slice(0, -1);\n  }\n  return rep;\n};\nconst isNode = (element) => !!element.position;\n\nconst getCoordId = ({ x, y }) =>\n  `${typeof x === \"number\" ? x.toFixed(2) : x}-${\n    typeof y === \"number\" ? y.toFixed(2) : y\n  }`;\n\n// helper to write latex coordinate\nconst getCoord = (x, y, coords) => {\n  const coordId = getCoordId({ x: x, y: y });\n\n  if (coords[coordId].name) {\n    return `(${coords[coordId].name})`;\n  } else {\n    return `(${simplifyNumber(x / MULTIPLICATIVE_CONST)}, ${simplifyNumber(\n      -y / MULTIPLICATIVE_CONST\n    )})`;\n  }\n};\n\nconst removeDrawnElements = (drawnElements) => (listeOfId) =>\n  listeOfId.filter((id) => !drawnElements[id]);\n\n// comparing function to decide which coordinate should be drawn first\nconst compareCoord = (drawnElements, coords) => (coordId1, coordId2) => {\n  const { endingPaths: endingPaths1, nodeAssociated: nodeAssociated1 } = coords[\n    coordId1\n  ];\n  const { endingPaths: endingPaths2, nodeAssociated: nodeAssociated2 } = coords[\n    coordId2\n  ];\n\n  // we prefer starting from a coordinate with no arriving path element or as less a possible\n  if (\n    removeDrawnElements(drawnElements)(endingPaths1).length <\n    removeDrawnElements(drawnElements)(endingPaths2).length\n  ) {\n    return -1;\n  }\n  if (\n    removeDrawnElements(drawnElements)(endingPaths1).length >\n    removeDrawnElements(drawnElements)(endingPaths2).length\n  ) {\n    return 1;\n  }\n\n  // for equivalent number of arriving path, we prefer the one with the most important number of nodes\n  if (\n    removeDrawnElements(drawnElements)(nodeAssociated1).length >\n    removeDrawnElements(drawnElements)(nodeAssociated2).length\n  ) {\n    return -1;\n  }\n  if (\n    removeDrawnElements(drawnElements)(nodeAssociated1).length <\n    removeDrawnElements(drawnElements)(nodeAssociated2).length\n  ) {\n    return 1;\n  }\n  return 0;\n};\n\n// this function start from the coordinate \"startCoordId\" and follow a path by drawing components\nconst drawPathFromCoord = (\n  startCoordId,\n  coords,\n  state,\n  drawnElements,\n  nbOfCoordinateUsed\n) => {\n  const elementsToAdd = []; // list of the elements in the line to write\n\n  // variables to save some coordinates\n  let nbOfCreatedNames = 0;\n  let nextName = `point${nbOfCoordinateUsed + 1}`;\n\n  // create variable updatable\n  let currantCoordId = startCoordId;\n  let currantCoord = coords[currantCoordId];\n\n  // informations on the currant node\n  let nextPaths = currantCoord.startingPaths.filter((id) => !drawnElements[id]); //remove drawn elements\n  let arrivingPaths = currantCoord.endingPaths.filter(\n    (id) => !drawnElements[id]\n  );\n  let nextNode = currantCoord.nodeAssociated.filter((id) => !drawnElements[id]); // remove drawn elements (multi-pole are already drawn at this step)\n\n  // get ready to loop on components to add\n  let coordIsNew = true;\n  while (nextPaths.length > 0 || nextNode.length > 0) {\n    // add draw if it's the beginning\n    if (elementsToAdd.length === 0) {\n      elementsToAdd.push(`\\\\draw `);\n    }\n\n    // add the coordinate if needed\n    if (coordIsNew) {\n      elementsToAdd.push(\n        `${getCoord(currantCoord.x, currantCoord.y, coords)} `\n      );\n      if (\n        !currantCoord.name &&\n        (nextPaths.length > 1 || arrivingPaths.length > 0)\n      ) {\n        //save name if we will need to start from here again or to arrive to here in the future\n        elementsToAdd.push(`coordinate(${nextName}) `);\n        coords[currantCoordId].name = nextName;\n\n        //get ready for next name\n        nbOfCreatedNames += 1;\n        nextName = `point${nbOfCoordinateUsed + nbOfCreatedNames + 1}`;\n      }\n    }\n\n    if (nextNode.length > 0) {\n      // create a node if possible\n      coordIsNew = false;\n      const nodeId = nextNode.pop();\n      const element = state.pathComponents.byId[nodeId];\n\n      elementsToAdd.push(`${drawElement(element)} `);\n      drawnElements[element.id] = true;\n    } else {\n      // create path if no more node is to draw\n      coordIsNew = true;\n      const element = state.pathComponents.byId[nextPaths[0]];\n\n      elementsToAdd.push(drawElement(element));\n      drawnElements[element.id] = true;\n\n      // get information of the next coordinate\n      currantCoordId = getCoordId(state.anchors.byId[element.to]);\n      currantCoord = coords[currantCoordId];\n      nextPaths = currantCoord.startingPaths.filter((id) => !drawnElements[id]); //only path elements starting here not already drawn\n      arrivingPaths = currantCoord.endingPaths.filter(\n        (id) => !drawnElements[id]\n      );\n      nextNode = currantCoord.nodeAssociated.filter((id) => !drawnElements[id]);\n    }\n  }\n  // There is no elements to draw from the currant coordinate\n\n  if (elementsToAdd.length > 0) {\n    if (coordIsNew) {\n      // if it's a new coordinate, we add it to the list\n      elementsToAdd.push(\n        `${getCoord(currantCoord.x, currantCoord.y, coords)} `\n      );\n      if (!currantCoord.name && arrivingPaths.length > 0) {\n        // we give it a name if needed\n        coords[currantCoordId].name = nextName;\n        elementsToAdd.push(`coordinate(${nextName}) `);\n        nbOfCreatedNames += 1;\n        nextName = `point${nbOfCoordinateUsed + nbOfCreatedNames + 1}`;\n      }\n    }\n\n    elementsToAdd.push(\";\"); //add the semi colon at the end of the line\n  }\n\n  // return the elements of the line and an indicator to update the number of coordinate saved\n  return [elementsToAdd, nbOfCreatedNames];\n};\n\nconst initializeCoords = (state) => {\n  // dict created :\n  //\n  // coords = {[(x, y)]: {\n  //  x: number,\n  //  y: number,\n  //  name:null||str,\n  //  startingPaths: [list of elements id],\n  //  endingPaths: [list of elements id],\n  //  nodeAssociated: [list of elements id],\n  // }\n  //\n  // nodeReference = {\n  //   [nodeId]: {\n  //     name: null,\n  //     parent: null,\n  //     parentAnchor: null,\n  //     anchor: null,\n  //     associatedIds: [list of coordId relative to this node],\n  //   }\n  // }\n\n  const coords = {};\n  const nodeReference = {};\n\n  // check coord of all to[] element\n  state.pathComponents.allIds.forEach((id) => {\n    const element = state.pathComponents.byId[id];\n    if (isPath[element.type]) {\n      const fromCoord = state.anchors.byId[element.from];\n      const toCoord = state.anchors.byId[element.to];\n\n      const fromCoordId = getCoordId(fromCoord);\n      const toCoordId = getCoordId(toCoord);\n\n      if (coords[fromCoordId] === undefined) {\n        coords[fromCoordId] = {\n          x: fromCoord.x.toFixed(2),\n          y: fromCoord.y.toFixed(2),\n          name: null,\n          startingPaths: [element.id],\n          endingPaths: [],\n          nodeAssociated: [],\n        };\n      } else if (!coords[fromCoordId].startingPaths.includes(element.id)) {\n        coords[fromCoordId].startingPaths.push(element.id);\n      }\n\n      if (coords[toCoordId] === undefined) {\n        coords[toCoordId] = {\n          x: toCoord.x.toFixed(2),\n          y: toCoord.y.toFixed(2),\n          name: null,\n          endingPaths: [element.id],\n          startingPaths: [],\n          nodeAssociated: [],\n        };\n      } else if (!coords[toCoordId].endingPaths.includes(element.id)) {\n        coords[toCoordId].endingPaths.push(element.id);\n      }\n    } else {\n      nodeReference[element.id] = {\n        name: null,\n        parent: null,\n        parentAnchor: null,\n        anchor: null,\n        associatedIds: [],\n      };\n      if (!isMultyPole[element.type]) {\n        const positionCoord = state.anchors.byId[element.position];\n        const positionCoordId = getCoordId(positionCoord);\n\n        if (coords[positionCoordId] === undefined) {\n          coords[positionCoordId] = {\n            x: positionCoord.x.toFixed(2),\n            y: positionCoord.y.toFixed(2),\n            name: null,\n            startingPaths: [],\n            endingPaths: [],\n            nodeAssociated: [element.id],\n          };\n        } else if (\n          !coords[positionCoordId].nodeAssociated.includes(element.id)\n        ) {\n          coords[positionCoordId].nodeAssociated.push(element.id);\n        }\n      }\n    }\n  });\n\n  // add node informations\n  state.weakLinks.forEach(({ anchorId, nodeId, name, nameAnchor }) => {\n    const coord = state.anchors.byId[anchorId];\n\n    if (\n      !coord.isNodePosition ||\n      !isMultyPole[\n        state.pathComponents.byId[state.anchors.byId[anchorId].nodeId].type\n      ]\n    ) {\n      const coordId = getCoordId(coord);\n      if (!coords[coordId].nodeAssociated.includes(nodeId)) {\n        coords[coordId].nodeAssociated.push(nodeId);\n      }\n      if (!nodeReference[nodeId].associatedIds.includes(coordId)) {\n        nodeReference[nodeId].associatedIds.push(coordId);\n      }\n    } else {\n      const childId = state.anchors.byId[anchorId].nodeId;\n      nodeReference[childId].parent = nodeId;\n      nodeReference[childId].anchor = nameAnchor;\n      nodeReference[childId].parentAnchor = name;\n      if (!nodeReference[nodeId].associatedIds.includes(childId)) {\n        nodeReference[nodeId].associatedIds.push(childId);\n      }\n    }\n  });\n\n  return [coords, nodeReference];\n};\n\nfunction getCircuitikz(state) {\n  const [coords, nodeReference] = initializeCoords(state);\n\n  const drawnElements = {}; //[id]:true when element of this id is drawn\n  let nbOfCoordinateUsed = 0; // counter to save coordinate with name : point1, point2, ...\n  const nodeNumberOfNames = {}; // conter for naming multi-pole (in order to start from 1 for each type of node) exemple: nmos1, pmos1, nmos2\n  const circuitText = [\"\\\\begin{circuitikz}\"];\n\n  // ========================\n  // 1. Draw multi-pole nodes\n  // ========================\n  const multiAnchorNodeIds = state.pathComponents.allIds\n    .filter((elementId) => {\n      // filter nodes to get only multi-pole\n      const element = state.pathComponents.byId[elementId];\n      return isNode(element) && isMultyPole[element.type];\n    })\n    .sort((id1, id2) => {\n      // sort them according to there dependencies\n      if (nodeReference[id1].parent === null) {\n        return -1; //if they are both null (without parent) id1 is preferred (so we do not need to check id2)\n      }\n      if (nodeReference[id2].parent === null) {\n        return 1; //if we are here, it's that id1 is not null. but id2 is so we prefer it\n      }\n      if (nodeReference[id2].parent === id1) {\n        //id1 is parent of id2\n        return -1; //so 1 must be printed before 2\n      }\n      if (nodeReference[id1].parent === id2) {\n        //id2 is parent of id1\n        return -1; //so 2 must be printed before 1\n      }\n      return -1;\n    });\n\n  multiAnchorNodeIds.forEach((elementId) => {\n    const element = state.pathComponents.byId[elementId];\n\n    // get parent information for positioning\n    const positionInformations = {};\n    if (nodeReference[elementId].parent !== null) {\n      positionInformations.position = `${\n        nodeReference[nodeReference[elementId].parent].name\n      }.${nodeReference[elementId].parentAnchor}`;\n\n      positionInformations.anchor = nodeReference[elementId].anchor;\n    } else {\n      positionInformations.x = state.anchors.byId[element.position].x;\n      positionInformations.y = state.anchors.byId[element.position].y;\n    }\n\n    // check if need to create name\n    const nameNeeded = nodeReference[elementId].associatedIds.length > 0;\n    if (nameNeeded) {\n      const name = `${element.type}${nodeNumberOfNames[element.type] || 1}`;\n\n      circuitText.push(drawElement(element, positionInformations, name));\n\n      nodeReference[element.id].name = name;\n      nodeNumberOfNames[element.type] =\n        (nodeNumberOfNames[element.type] || 1) + 1;\n    } else {\n      circuitText.push(drawElement(element, positionInformations));\n    }\n\n    drawnElements[elementId] = true; //note that this node is ok\n  });\n\n  // =====================================================\n  // 2. Associate anchor name to coordinates when possible\n  // =====================================================\n  // TODO : an good idea could be not to trust weak links but to compare anchor coordinate with used coordinates\n  state.weakLinks.forEach(({ anchorId, nodeId, name, nameAnchor }) => {\n    const coord = state.anchors.byId[anchorId];\n    const coordId = getCoordId(coord);\n\n    if (\n      coords[coordId] && //coord is a used coordinate (remove multipleAnchor node)\n      drawnElements[nodeId] && //parent is drawn (remove mono anchor node)\n      !coords[coordId].name && //name is not already attributed\n      nodeReference[nodeId].name //the parent has a name\n    ) {\n      coords[coordId].name = `${nodeReference[nodeId].name}.${name}`;\n    }\n  });\n\n  // ====================================\n  // 3. Draw path from multi-pole anchors\n  // ====================================\n  multiAnchorNodeIds.forEach((nodeId) => {\n    nodeReference[nodeId].associatedIds.forEach((childId) => {\n      if (coords[childId] !== undefined) {\n        const [elementsToAdd, nbOfCreatedNames] = drawPathFromCoord(\n          childId,\n          coords,\n          state,\n          drawnElements,\n          nbOfCoordinateUsed\n        );\n\n        if (elementsToAdd.length > 0) {\n          nbOfCoordinateUsed += nbOfCreatedNames;\n          circuitText.push(elementsToAdd.join(\"\"));\n        }\n      }\n    });\n  });\n\n  // ===========================\n  // 4. Draw all remaining paths\n  // ===========================\n  const coordsToPlot = Object.keys(coords);\n  while (coordsToPlot.length > 0) {\n    // get coordinate id to start the path according to \"compareCoord\" function\n    const idToPlot = coordsToPlot.sort(compareCoord(drawElement, coords))[0];\n\n    //plot it\n    if (coords[idToPlot] !== undefined) {\n      const [elementsToAdd, nbOfCreatedNames] = drawPathFromCoord(\n        idToPlot,\n        coords,\n        state,\n        drawnElements,\n        nbOfCoordinateUsed\n      );\n\n      if (elementsToAdd.length > 0) {\n        nbOfCoordinateUsed += nbOfCreatedNames;\n        circuitText.push(elementsToAdd.join(\"\"));\n      } else {\n        // remove it from the list because there is no more things to draw from here\n        const index = coordsToPlot.indexOf(idToPlot);\n        coordsToPlot.splice(index, 1);\n      }\n    } else {\n      // remove it from the list because this coordinate does not exist\n      const index = coordsToPlot.indexOf(idToPlot);\n      coordsToPlot.splice(index, 1);\n    }\n  }\n  circuitText.push(\"\\\\end{circuitikz}\");\n\n  return circuitText;\n}\n\nexport default getCircuitikz;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport getCircuitikz from \"../redux/store/getCircuitikz\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst copyCode = (code) => {\n  navigator.clipboard.writeText(code).then(\n    function () {},\n    function () {}\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { code: getCircuitikz(state) };\n};\n\nconst LatexDisplay = ({ code }) => (\n  <>\n    <DialogTitle>Your LaTEX code</DialogTitle>\n    <DialogContent>\n      <pre>\n        {code.slice(0, code.length - 1).join(\"\\n\\t\") +\n          \"\\n\" +\n          code[code.length - 1]}\n      </pre>\n    </DialogContent>\n    <DialogActions>\n      <Button\n        autoFocus\n        onClick={() => {\n          copyCode(\n            code.slice(0, code.length - 1).join(\"\\n\\t\") +\n              \"\\n\" +\n              code[code.length - 1]\n          );\n        }}\n      >\n        Copy\n      </Button>\n    </DialogActions>\n  </>\n);\n\nexport default connect(mapStateToProps, null)(LatexDisplay);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { updateComponent } from \"../redux/actions\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nimport Input from \"@material-ui/core/Input\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleInputChange: (id, name) => (value) => (event) =>\n      dispatch(\n        updateComponent(id, name, value === null ? event.target.value : value)\n      ),\n  };\n};\n\nconst mapStateToProps = (state) => {\n  if (\n    state.selection.length < 1 ||\n    !state.pathComponents.allIds.includes(state.selection[0])\n  ) {\n    return {};\n  }\n  const idOfInterest = state.selection[0];\n  return {\n    id: idOfInterest,\n    options: state.pathComponents.byId[idOfInterest],\n  };\n};\n\nconst inputElement = {\n  label: (value, update) => (\n    <ListItem>\n      <TextField\n        label=\"Label\"\n        value={value}\n        onKeyDown={(e) => e.stopPropagation()}\n        onChangeCapture={update(null)}\n      />\n    </ListItem>\n  ),\n  annotation: (value, update) => (\n    <ListItem>\n      <TextField\n        label=\"Annotation\"\n        value={value}\n        onKeyDown={(e) => e.stopPropagation()}\n        onChangeCapture={update(null)}\n      />\n    </ListItem>\n  ),\n  angle: (value, update) => (\n    <ListItem button>\n      <ListItemText primary=\"rotation\" />\n      <ListItemSecondaryAction>\n        <Input\n          value={value || 0}\n          onKeyDown={(e) => e.stopPropagation()}\n          onChangeCapture={update(null)}\n          inputProps={{\n            step: 5,\n            min: -180,\n            max: 180,\n            type: \"number\",\n          }}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  ),\n  mirror: (value, update) => (\n    <ListItem>\n      <FormControlLabel\n        control={\n          <Switch checked={value} onChange={update(!value)} name=\"mirror\" />\n        }\n        label=\"mirror\"\n      />\n    </ListItem>\n  ),\n  invert: (value, update) => (\n    <ListItem>\n      <FormControlLabel\n        control={\n          <Switch checked={value} onChange={update(!value)} name=\"invert\" />\n        }\n        label=\"Invert\"\n      />\n    </ListItem>\n  ),\n  currant: (value, update) => (\n    <>\n      <ListItem button>\n        <ListItemText primary=\"Currant\" />\n        <ListItemSecondaryAction>\n          <Checkbox\n            checked={value.show}\n            onChange={update({ ...value, show: !value.show })}\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        </ListItemSecondaryAction>\n      </ListItem>\n      <ListItem>\n        <TextField\n          disabled={!value.show}\n          label=\"Currant name\"\n          value={value.currantText}\n          onKeyDown={(e) => e.stopPropagation()}\n          onChangeCapture={(e) =>\n            update({ ...value, currantText: e.target.value })()\n          }\n        />\n      </ListItem>\n      <ListItem>\n        <FormControlLabel\n          disabled={!value.show}\n          control={\n            <Switch\n              checked={value.currantIsForward}\n              onChange={update({\n                ...value,\n                currantIsForward: !value.currantIsForward,\n              })}\n              name=\"arrow direction\"\n            />\n          }\n          label=\"direction\"\n        />\n      </ListItem>\n      <ListItem>\n        <FormControlLabel\n          disabled={!value.show}\n          control={\n            <Switch\n              checked={value.currantIsAfter}\n              onChange={update({\n                ...value,\n                currantIsAfter: !value.currantIsAfter,\n              })}\n              name=\"currant position\"\n            />\n          }\n          label=\"arrow position\"\n        />\n      </ListItem>\n      <ListItem>\n        <FormControlLabel\n          disabled={!value.show}\n          control={\n            <Switch\n              checked={value.currantIsAbove}\n              onChange={update({\n                ...value,\n                currantIsAbove: !value.currantIsAbove,\n              })}\n              name=\"text position\"\n            />\n          }\n          label=\"text position\"\n        />\n      </ListItem>\n    </>\n  ),\n};\n\nconst ElementOptions = ({ handleInputChange, id, options = null }) => {\n  if (options === null) {\n    return null;\n  }\n  return (\n    <List>\n      {Object.keys(options)\n        .map((name) => [\n          name,\n          Object.keys(inputElement).findIndex((n) => n === name),\n        ])\n        .filter(([, index]) => index >= 0)\n        .sort(([, i1], [, i2]) => i1 - i2)\n        .map(([name]) => (\n          <div key={name}>\n            {inputElement[name](options[name], handleInputChange(id, name))}\n          </div>\n        ))}\n    </List>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementOptions);\n","import React, { useState } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n  startCreatePathElement,\n  startCreateNodeElement,\n} from \"../redux/actions\";\n\nimport { isPath, structure } from \"../components\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startCreatePathElement: (elementType) =>\n      dispatch(startCreatePathElement(elementType)),\n    startCreateNodeElement: (elementType) =>\n      dispatch(startCreateNodeElement(elementType)),\n  };\n};\n\nconst LeftMenu = ({ startCreatePathElement, startCreateNodeElement }) => {\n  const [openSection, setOpenSection] = useState();\n\n  return (\n    <List>\n      {Object.keys(structure).map((sectionName) => (\n        <>\n          <ListItem\n            key={sectionName}\n            button\n            onClick={() =>\n              setOpenSection(openSection === sectionName ? null : sectionName)\n            }\n          >\n            <ListItemText primary={sectionName} />\n            {openSection === sectionName ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse\n            in={openSection === sectionName}\n            timeout=\"auto\"\n            unmountOnExit\n          >\n            <List>\n              {structure[sectionName].map((name) => (\n                <ListItem\n                  button\n                  key={name}\n                  onMouseDown={(event) => {\n                    event.stopPropagation();\n                    if (isPath[name]) {\n                      startCreatePathElement(name);\n                    } else {\n                      startCreateNodeElement(name);\n                    }\n                  }}\n                >\n                  <ListItemText\n                    primary={name}\n                    style={{ paddingLeft: \"20px\" }}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Collapse>\n        </>\n      ))}\n    </List>\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(LeftMenu);\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  MODE_DRAG,\n  MODE_SELECT,\n  MODE_MOVE_PAPER,\n} from \"./redux/store/interactionModes\";\n\nimport Container from \"./container/index.js\";\nimport LatexDisplay from \"./container/latexDisplay\";\nimport ElementOptions from \"./container/elementOptions\";\nimport LeftMenu from \"./container/leftMenu\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport {\n  startSelect,\n  splitAnchor,\n  stackSelectedAnchors,\n  deleteElement,\n  movePaper,\n  endMovePaper,\n} from \"./redux/actions\";\n\nconst drawerWidth = 180;\nconst optionDrawerWidth = 280;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  toolBar: {\n    justifyContent: \"space-between\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  optionDrawer: {},\n  optionDrawerPaper: { width: optionDrawerWidth },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst mapStateToProps = (state) => {\n  return {\n    mode: state.mode,\n    selection: state.selection,\n    pathIds: state.pathComponents.allIds,\n    isPaperDragged: state.displayOptions.dragging.isDragging,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startSelect: () => dispatch(startSelect()),\n    splitAnchor: () => dispatch(splitAnchor()),\n    stackSelectedAnchors: (direction) =>\n      dispatch(stackSelectedAnchors(direction)),\n    deleteElement: (selection) => {\n      dispatch(deleteElement(selection));\n    },\n    movePaper: (x, y) => dispatch(movePaper(x, y)),\n    endMovePaper: () => dispatch(endMovePaper()),\n  };\n};\n\nfunction App({\n  mode,\n  selection,\n  pathIds,\n  isPaperDragged,\n  startSelect,\n  splitAnchor,\n  stackSelectedAnchors,\n  deleteElement,\n  movePaper,\n  endMovePaper,\n}) {\n  const classes = useStyles();\n  const [showCode, setShowCode] = useState(false);\n\n  const svgRef = useRef();\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      switch (event.key) {\n        case \"ArrowRight\":\n          stackSelectedAnchors(\"R\");\n          break;\n        case \"ArrowLeft\":\n          stackSelectedAnchors(\"L\");\n          break;\n        case \"ArrowUp\":\n          stackSelectedAnchors(\"U\");\n          break;\n        case \"ArrowDown\":\n          stackSelectedAnchors(\"D\");\n          break;\n        case \"s\":\n          splitAnchor();\n          break;\n        case \"Delete\":\n          deleteElement(selection);\n          break;\n        default:\n          console.log(event.key);\n          break;\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [splitAnchor, stackSelectedAnchors, deleteElement, selection]);\n\n  const mouseMove = (event) => {\n    movePaper(event.nativeEvent.clientX, event.nativeEvent.clientY);\n  };\n  return (\n    // TODO : Proper listen key event\n    <div\n      className={classes.root}\n      tabIndex=\"0\"\n      onMouseDown={startSelect}\n      onMouseMove={\n        mode === MODE_MOVE_PAPER && isPaperDragged ? mouseMove : null\n      }\n      onMouseUp={\n        mode === MODE_MOVE_PAPER && isPaperDragged ? endMovePaper : null\n      }\n    >\n      <CssBaseline />\n\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolBar}>\n          <Typography variant=\"h6\" noWrap>\n            Clipped drawer\n          </Typography>\n\n          <Button color=\"inherit\" onClick={() => setShowCode(true)}>\n            LaTEX\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <LeftMenu />\n        </div>\n      </Drawer>\n      <Drawer\n        anchor=\"right\"\n        variant=\"persistent\"\n        open={\n          (mode === MODE_SELECT || mode === MODE_DRAG) &&\n          selection.length === 1 &&\n          pathIds.includes(selection[0])\n        }\n        className={classes.optionDrawer}\n        classes={{\n          paper: classes.optionDrawerPaper,\n        }}\n        // catch mousedown in element options\n        onMouseDown={(event) => event.stopPropagation()}\n      >\n        <Toolbar />\n        <ElementOptions />\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        <Container svgRef={svgRef} />\n      </main>\n\n      <Dialog\n        open={showCode}\n        onClose={() => {\n          setShowCode(false);\n        }}\n      >\n        <LatexDisplay />\n      </Dialog>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}